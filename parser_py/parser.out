Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ARROBA
    BOOL
    CALL
    COMILLAS
    COND_NUMERICA
    DER_EXCLAMACION
    DER_INTERROGACION
    DIVISION
    ENYE
    GUION
    ID
    IGUALDAD
    IZQ_EXCLAMACION
    IZQ_INTERROGACION
    LETRA
    MAYUSCULA
    MULTIPLICACION
    PUNTO
    RESTA
    STRING
    SUMA
    TILDE
    UNDERSCORE

Grammar

Rule 0     S' -> program
Rule 1     program -> lista_comentarios code_block
Rule 2     lista_comentarios -> comentario lista_comentarios
Rule 3     lista_comentarios -> empty
Rule 4     comentario -> COMENTARIO
Rule 5     code_block -> proc MASTER LPARENTESIS comentario list_statement RPARENTESIS PUNTO_COMA group_proc
Rule 6     code_block -> group_proc proc MASTER LPARENTESIS comentario list_statement RPARENTESIS PUNTO_COMA group_proc
Rule 7     proc -> PROC
Rule 8     group_proc -> PROC VARIABLE LPARENTESIS COMENTARIO list_statement RPARENTESIS PUNTO_COMA group_proc
Rule 9     group_proc -> empty
Rule 10    operador -> ADD
Rule 11    operador -> SUB
Rule 12    operador -> MUL
Rule 13    operador -> DIV
Rule 14    list_statement -> statement list_statement
Rule 15    list_statement -> empty
Rule 16    statement -> new_variable_statement
Rule 17    statement -> values_statement
Rule 18    statement -> alter_statement
Rule 19    statement -> alterb_statement
Rule 20    statement -> condition_statement
Rule 21    statement -> istrue_statement
Rule 22    statement -> repeat_statement
Rule 23    statement -> until_statement
Rule 24    statement -> while_statement
Rule 25    statement -> case_statement
Rule 26    statement -> printvalues_statement
Rule 27    statement -> signal_statement
Rule 28    statement -> viewsignal_statement
Rule 29    new_variable_statement -> NEW VARIABLE COMA LPARENTESIS DATATYPE COMA value RPARENTESIS PUNTO_COMA
Rule 30    values_statement -> VALUES LPARENTESIS VARIABLE COMA value RPARENTESIS PUNTO_COMA
Rule 31    values_statement -> VALUES LPARENTESIS VARIABLE COMA alter_statement RPARENTESIS PUNTO_COMA
Rule 32    alter_statement -> ALTER LPARENTESIS VARIABLE COMA operador COMA value RPARENTESIS PUNTO_COMA
Rule 33    alterb_statement -> ALTERB LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA
Rule 34    condition_statement -> expression condition expression
Rule 35    istrue_statement -> ISTRUE LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA
Rule 36    repeat_statement -> REPEAT LPARENTESIS list_statement break_statement RPARENTESIS PUNTO_COMA
Rule 37    break_statement -> BREAK PUNTO_COMA
Rule 38    until_statement -> UNTIL list_statement condition PUNTO_COMA
Rule 39    condition -> MAYOR_QUE
Rule 40    condition -> MENOR_QUE
Rule 41    condition -> IGUAL
Rule 42    condition -> DISTINTO_QUE
Rule 43    condition -> MAYOR_IGUAL_QUE
Rule 44    condition -> MENOR_IGUAL_QUE
Rule 45    while_statement -> WHILE expression LPARENTESIS list_statement RPARENTESIS PUNTO_COMA
Rule 46    while_statement -> WHILE condition_statement LPARENTESIS list_statement RPARENTESIS PUNTO_COMA
Rule 47    while_statement -> WHILE istrue LPARENTESIS list_statement RPARENTESIS PUNTO_COMA
Rule 48    bool -> TRUE
Rule 49    bool -> FALSE
Rule 50    case_statement -> CASE VARIABLE case_when_statements else_statement PUNTO_COMA
Rule 51    case_when_statements -> case_when_statement case_when_statements
Rule 52    case_when_statements -> empty
Rule 53    case_when_statement -> WHEN value THEN list_statement
Rule 54    else_statement -> ELSE code_block
Rule 55    else_statement -> empty
Rule 56    printvalues_statement -> PRINTVALUES LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA
Rule 57    signal_statement -> SIGNAL LPARENTESIS VARIABLE COMA value RPARENTESIS PUNTO_COMA
Rule 58    viewsignal_statement -> VIEWSIGNAL LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA
Rule 59    expression -> value
Rule 60    expression -> VARIABLE
Rule 61    expression -> LPARENTESIS expression RPARENTESIS
Rule 62    expression -> expression + expression
Rule 63    expression -> expression - expression
Rule 64    expression -> expression * expression
Rule 65    expression -> expression / expression
Rule 66    istrue -> ISTRUE LPARENTESIS VARIABLE RPARENTESIS
Rule 67    value -> NUMERO
Rule 68    value -> bool
Rule 69    empty -> <empty>

Terminals, with rules where they appear

*                    : 64
+                    : 62
-                    : 63
/                    : 65
ADD                  : 10
ALTER                : 32
ALTERB               : 33
ARROBA               : 
BOOL                 : 
BREAK                : 37
CALL                 : 
CASE                 : 50
COMA                 : 29 29 30 31 32 32 57
COMENTARIO           : 4 8
COMILLAS             : 
COND_NUMERICA        : 
DATATYPE             : 29
DER_EXCLAMACION      : 
DER_INTERROGACION    : 
DISTINTO_QUE         : 42
DIV                  : 13
DIVISION             : 
ELSE                 : 54
ENYE                 : 
FALSE                : 49
GUION                : 
ID                   : 
IGUAL                : 41
IGUALDAD             : 
ISTRUE               : 35 66
IZQ_EXCLAMACION      : 
IZQ_INTERROGACION    : 
LETRA                : 
LPARENTESIS          : 5 6 8 29 30 31 32 33 35 36 45 46 47 56 57 58 61 66
MASTER               : 5 6
MAYOR_IGUAL_QUE      : 43
MAYOR_QUE            : 39
MAYUSCULA            : 
MENOR_IGUAL_QUE      : 44
MENOR_QUE            : 40
MUL                  : 12
MULTIPLICACION       : 
NEW                  : 29
NUMERO               : 67
PRINTVALUES          : 56
PROC                 : 7 8
PUNTO                : 
PUNTO_COMA           : 5 6 8 29 30 31 32 33 35 36 37 38 45 46 47 50 56 57 58
REPEAT               : 36
RESTA                : 
RPARENTESIS          : 5 6 8 29 30 31 32 33 35 36 45 46 47 56 57 58 61 66
SIGNAL               : 57
STRING               : 
SUB                  : 11
SUMA                 : 
THEN                 : 53
TILDE                : 
TRUE                 : 48
UNDERSCORE           : 
UNTIL                : 38
VALUES               : 30 31
VARIABLE             : 8 29 30 31 32 33 35 50 56 57 58 60 66
VIEWSIGNAL           : 58
WHEN                 : 53
WHILE                : 45 46 47
error                : 

Nonterminals, with rules where they appear

alter_statement      : 18 31
alterb_statement     : 19
bool                 : 68
break_statement      : 36
case_statement       : 25
case_when_statement  : 51
case_when_statements : 50 51
code_block           : 1 54
comentario           : 2 5 6
condition            : 34 38
condition_statement  : 20 46
else_statement       : 50
empty                : 3 9 15 52 55
expression           : 34 34 45 61 62 62 63 63 64 64 65 65
group_proc           : 5 6 6 8
istrue               : 47
istrue_statement     : 21
list_statement       : 5 6 8 14 36 38 45 46 47 53
lista_comentarios    : 1 2
new_variable_statement : 16
operador             : 32
printvalues_statement : 26
proc                 : 5 6
program              : 0
repeat_statement     : 22
signal_statement     : 27
statement            : 14
until_statement      : 23
value                : 29 30 32 53 57 59
values_statement     : 17
viewsignal_statement : 28
while_statement      : 24

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . lista_comentarios code_block
    (2) lista_comentarios -> . comentario lista_comentarios
    (3) lista_comentarios -> . empty
    (4) comentario -> . COMENTARIO
    (69) empty -> .

    COMENTARIO      shift and go to state 5
    PROC            reduce using rule 69 (empty -> .)

    program                        shift and go to state 1
    lista_comentarios              shift and go to state 2
    comentario                     shift and go to state 3
    empty                          shift and go to state 4

state 1

    (0) S' -> program .



state 2

    (1) program -> lista_comentarios . code_block
    (5) code_block -> . proc MASTER LPARENTESIS comentario list_statement RPARENTESIS PUNTO_COMA group_proc
    (6) code_block -> . group_proc proc MASTER LPARENTESIS comentario list_statement RPARENTESIS PUNTO_COMA group_proc
    (7) proc -> . PROC
    (8) group_proc -> . PROC VARIABLE LPARENTESIS COMENTARIO list_statement RPARENTESIS PUNTO_COMA group_proc
    (9) group_proc -> . empty
    (69) empty -> .

  ! shift/reduce conflict for PROC resolved as shift
    PROC            shift and go to state 9

  ! PROC            [ reduce using rule 69 (empty -> .) ]

    code_block                     shift and go to state 6
    proc                           shift and go to state 7
    group_proc                     shift and go to state 8
    empty                          shift and go to state 10

state 3

    (2) lista_comentarios -> comentario . lista_comentarios
    (2) lista_comentarios -> . comentario lista_comentarios
    (3) lista_comentarios -> . empty
    (4) comentario -> . COMENTARIO
    (69) empty -> .

    COMENTARIO      shift and go to state 5
    PROC            reduce using rule 69 (empty -> .)

    comentario                     shift and go to state 3
    lista_comentarios              shift and go to state 11
    empty                          shift and go to state 4

state 4

    (3) lista_comentarios -> empty .

    PROC            reduce using rule 3 (lista_comentarios -> empty .)


state 5

    (4) comentario -> COMENTARIO .

    COMENTARIO      reduce using rule 4 (comentario -> COMENTARIO .)
    PROC            reduce using rule 4 (comentario -> COMENTARIO .)
    NEW             reduce using rule 4 (comentario -> COMENTARIO .)
    VALUES          reduce using rule 4 (comentario -> COMENTARIO .)
    ALTER           reduce using rule 4 (comentario -> COMENTARIO .)
    ALTERB          reduce using rule 4 (comentario -> COMENTARIO .)
    ISTRUE          reduce using rule 4 (comentario -> COMENTARIO .)
    REPEAT          reduce using rule 4 (comentario -> COMENTARIO .)
    UNTIL           reduce using rule 4 (comentario -> COMENTARIO .)
    WHILE           reduce using rule 4 (comentario -> COMENTARIO .)
    CASE            reduce using rule 4 (comentario -> COMENTARIO .)
    PRINTVALUES     reduce using rule 4 (comentario -> COMENTARIO .)
    SIGNAL          reduce using rule 4 (comentario -> COMENTARIO .)
    VIEWSIGNAL      reduce using rule 4 (comentario -> COMENTARIO .)
    VARIABLE        reduce using rule 4 (comentario -> COMENTARIO .)
    LPARENTESIS     reduce using rule 4 (comentario -> COMENTARIO .)
    NUMERO          reduce using rule 4 (comentario -> COMENTARIO .)
    TRUE            reduce using rule 4 (comentario -> COMENTARIO .)
    FALSE           reduce using rule 4 (comentario -> COMENTARIO .)
    RPARENTESIS     reduce using rule 4 (comentario -> COMENTARIO .)


state 6

    (1) program -> lista_comentarios code_block .

    $end            reduce using rule 1 (program -> lista_comentarios code_block .)


state 7

    (5) code_block -> proc . MASTER LPARENTESIS comentario list_statement RPARENTESIS PUNTO_COMA group_proc

    MASTER          shift and go to state 12


state 8

    (6) code_block -> group_proc . proc MASTER LPARENTESIS comentario list_statement RPARENTESIS PUNTO_COMA group_proc
    (7) proc -> . PROC

    PROC            shift and go to state 14

    proc                           shift and go to state 13

state 9

    (7) proc -> PROC .
    (8) group_proc -> PROC . VARIABLE LPARENTESIS COMENTARIO list_statement RPARENTESIS PUNTO_COMA group_proc

    MASTER          reduce using rule 7 (proc -> PROC .)
    VARIABLE        shift and go to state 15


state 10

    (9) group_proc -> empty .

    PROC            reduce using rule 9 (group_proc -> empty .)
    $end            reduce using rule 9 (group_proc -> empty .)
    PUNTO_COMA      reduce using rule 9 (group_proc -> empty .)


state 11

    (2) lista_comentarios -> comentario lista_comentarios .

    PROC            reduce using rule 2 (lista_comentarios -> comentario lista_comentarios .)


state 12

    (5) code_block -> proc MASTER . LPARENTESIS comentario list_statement RPARENTESIS PUNTO_COMA group_proc

    LPARENTESIS     shift and go to state 16


state 13

    (6) code_block -> group_proc proc . MASTER LPARENTESIS comentario list_statement RPARENTESIS PUNTO_COMA group_proc

    MASTER          shift and go to state 17


state 14

    (7) proc -> PROC .

    MASTER          reduce using rule 7 (proc -> PROC .)


state 15

    (8) group_proc -> PROC VARIABLE . LPARENTESIS COMENTARIO list_statement RPARENTESIS PUNTO_COMA group_proc

    LPARENTESIS     shift and go to state 18


state 16

    (5) code_block -> proc MASTER LPARENTESIS . comentario list_statement RPARENTESIS PUNTO_COMA group_proc
    (4) comentario -> . COMENTARIO

    COMENTARIO      shift and go to state 5

    comentario                     shift and go to state 19

state 17

    (6) code_block -> group_proc proc MASTER . LPARENTESIS comentario list_statement RPARENTESIS PUNTO_COMA group_proc

    LPARENTESIS     shift and go to state 20


state 18

    (8) group_proc -> PROC VARIABLE LPARENTESIS . COMENTARIO list_statement RPARENTESIS PUNTO_COMA group_proc

    COMENTARIO      shift and go to state 21


state 19

    (5) code_block -> proc MASTER LPARENTESIS comentario . list_statement RPARENTESIS PUNTO_COMA group_proc
    (14) list_statement -> . statement list_statement
    (15) list_statement -> . empty
    (16) statement -> . new_variable_statement
    (17) statement -> . values_statement
    (18) statement -> . alter_statement
    (19) statement -> . alterb_statement
    (20) statement -> . condition_statement
    (21) statement -> . istrue_statement
    (22) statement -> . repeat_statement
    (23) statement -> . until_statement
    (24) statement -> . while_statement
    (25) statement -> . case_statement
    (26) statement -> . printvalues_statement
    (27) statement -> . signal_statement
    (28) statement -> . viewsignal_statement
    (69) empty -> .
    (29) new_variable_statement -> . NEW VARIABLE COMA LPARENTESIS DATATYPE COMA value RPARENTESIS PUNTO_COMA
    (30) values_statement -> . VALUES LPARENTESIS VARIABLE COMA value RPARENTESIS PUNTO_COMA
    (31) values_statement -> . VALUES LPARENTESIS VARIABLE COMA alter_statement RPARENTESIS PUNTO_COMA
    (32) alter_statement -> . ALTER LPARENTESIS VARIABLE COMA operador COMA value RPARENTESIS PUNTO_COMA
    (33) alterb_statement -> . ALTERB LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA
    (34) condition_statement -> . expression condition expression
    (35) istrue_statement -> . ISTRUE LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA
    (36) repeat_statement -> . REPEAT LPARENTESIS list_statement break_statement RPARENTESIS PUNTO_COMA
    (38) until_statement -> . UNTIL list_statement condition PUNTO_COMA
    (45) while_statement -> . WHILE expression LPARENTESIS list_statement RPARENTESIS PUNTO_COMA
    (46) while_statement -> . WHILE condition_statement LPARENTESIS list_statement RPARENTESIS PUNTO_COMA
    (47) while_statement -> . WHILE istrue LPARENTESIS list_statement RPARENTESIS PUNTO_COMA
    (50) case_statement -> . CASE VARIABLE case_when_statements else_statement PUNTO_COMA
    (56) printvalues_statement -> . PRINTVALUES LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA
    (57) signal_statement -> . SIGNAL LPARENTESIS VARIABLE COMA value RPARENTESIS PUNTO_COMA
    (58) viewsignal_statement -> . VIEWSIGNAL LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA
    (59) expression -> . value
    (60) expression -> . VARIABLE
    (61) expression -> . LPARENTESIS expression RPARENTESIS
    (62) expression -> . expression + expression
    (63) expression -> . expression - expression
    (64) expression -> . expression * expression
    (65) expression -> . expression / expression
    (67) value -> . NUMERO
    (68) value -> . bool
    (48) bool -> . TRUE
    (49) bool -> . FALSE

    RPARENTESIS     reduce using rule 69 (empty -> .)
    NEW             shift and go to state 39
    VALUES          shift and go to state 42
    ALTER           shift and go to state 43
    ALTERB          shift and go to state 44
    ISTRUE          shift and go to state 46
    REPEAT          shift and go to state 47
    UNTIL           shift and go to state 48
    WHILE           shift and go to state 49
    CASE            shift and go to state 50
    PRINTVALUES     shift and go to state 51
    SIGNAL          shift and go to state 52
    VIEWSIGNAL      shift and go to state 53
    VARIABLE        shift and go to state 40
    LPARENTESIS     shift and go to state 22
    NUMERO          shift and go to state 54
    TRUE            shift and go to state 56
    FALSE           shift and go to state 57

    list_statement                 shift and go to state 23
    statement                      shift and go to state 24
    empty                          shift and go to state 25
    new_variable_statement         shift and go to state 26
    values_statement               shift and go to state 27
    alter_statement                shift and go to state 28
    alterb_statement               shift and go to state 29
    condition_statement            shift and go to state 30
    istrue_statement               shift and go to state 31
    repeat_statement               shift and go to state 32
    until_statement                shift and go to state 33
    while_statement                shift and go to state 34
    case_statement                 shift and go to state 35
    printvalues_statement          shift and go to state 36
    signal_statement               shift and go to state 37
    viewsignal_statement           shift and go to state 38
    value                          shift and go to state 41
    expression                     shift and go to state 45
    bool                           shift and go to state 55

state 20

    (6) code_block -> group_proc proc MASTER LPARENTESIS . comentario list_statement RPARENTESIS PUNTO_COMA group_proc
    (4) comentario -> . COMENTARIO

    COMENTARIO      shift and go to state 5

    comentario                     shift and go to state 58

state 21

    (8) group_proc -> PROC VARIABLE LPARENTESIS COMENTARIO . list_statement RPARENTESIS PUNTO_COMA group_proc
    (14) list_statement -> . statement list_statement
    (15) list_statement -> . empty
    (16) statement -> . new_variable_statement
    (17) statement -> . values_statement
    (18) statement -> . alter_statement
    (19) statement -> . alterb_statement
    (20) statement -> . condition_statement
    (21) statement -> . istrue_statement
    (22) statement -> . repeat_statement
    (23) statement -> . until_statement
    (24) statement -> . while_statement
    (25) statement -> . case_statement
    (26) statement -> . printvalues_statement
    (27) statement -> . signal_statement
    (28) statement -> . viewsignal_statement
    (69) empty -> .
    (29) new_variable_statement -> . NEW VARIABLE COMA LPARENTESIS DATATYPE COMA value RPARENTESIS PUNTO_COMA
    (30) values_statement -> . VALUES LPARENTESIS VARIABLE COMA value RPARENTESIS PUNTO_COMA
    (31) values_statement -> . VALUES LPARENTESIS VARIABLE COMA alter_statement RPARENTESIS PUNTO_COMA
    (32) alter_statement -> . ALTER LPARENTESIS VARIABLE COMA operador COMA value RPARENTESIS PUNTO_COMA
    (33) alterb_statement -> . ALTERB LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA
    (34) condition_statement -> . expression condition expression
    (35) istrue_statement -> . ISTRUE LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA
    (36) repeat_statement -> . REPEAT LPARENTESIS list_statement break_statement RPARENTESIS PUNTO_COMA
    (38) until_statement -> . UNTIL list_statement condition PUNTO_COMA
    (45) while_statement -> . WHILE expression LPARENTESIS list_statement RPARENTESIS PUNTO_COMA
    (46) while_statement -> . WHILE condition_statement LPARENTESIS list_statement RPARENTESIS PUNTO_COMA
    (47) while_statement -> . WHILE istrue LPARENTESIS list_statement RPARENTESIS PUNTO_COMA
    (50) case_statement -> . CASE VARIABLE case_when_statements else_statement PUNTO_COMA
    (56) printvalues_statement -> . PRINTVALUES LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA
    (57) signal_statement -> . SIGNAL LPARENTESIS VARIABLE COMA value RPARENTESIS PUNTO_COMA
    (58) viewsignal_statement -> . VIEWSIGNAL LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA
    (59) expression -> . value
    (60) expression -> . VARIABLE
    (61) expression -> . LPARENTESIS expression RPARENTESIS
    (62) expression -> . expression + expression
    (63) expression -> . expression - expression
    (64) expression -> . expression * expression
    (65) expression -> . expression / expression
    (67) value -> . NUMERO
    (68) value -> . bool
    (48) bool -> . TRUE
    (49) bool -> . FALSE

    RPARENTESIS     reduce using rule 69 (empty -> .)
    NEW             shift and go to state 39
    VALUES          shift and go to state 42
    ALTER           shift and go to state 43
    ALTERB          shift and go to state 44
    ISTRUE          shift and go to state 46
    REPEAT          shift and go to state 47
    UNTIL           shift and go to state 48
    WHILE           shift and go to state 49
    CASE            shift and go to state 50
    PRINTVALUES     shift and go to state 51
    SIGNAL          shift and go to state 52
    VIEWSIGNAL      shift and go to state 53
    VARIABLE        shift and go to state 40
    LPARENTESIS     shift and go to state 22
    NUMERO          shift and go to state 54
    TRUE            shift and go to state 56
    FALSE           shift and go to state 57

    list_statement                 shift and go to state 59
    statement                      shift and go to state 24
    empty                          shift and go to state 25
    new_variable_statement         shift and go to state 26
    values_statement               shift and go to state 27
    alter_statement                shift and go to state 28
    alterb_statement               shift and go to state 29
    condition_statement            shift and go to state 30
    istrue_statement               shift and go to state 31
    repeat_statement               shift and go to state 32
    until_statement                shift and go to state 33
    while_statement                shift and go to state 34
    case_statement                 shift and go to state 35
    printvalues_statement          shift and go to state 36
    signal_statement               shift and go to state 37
    viewsignal_statement           shift and go to state 38
    value                          shift and go to state 41
    expression                     shift and go to state 45
    bool                           shift and go to state 55

state 22

    (61) expression -> LPARENTESIS . expression RPARENTESIS
    (59) expression -> . value
    (60) expression -> . VARIABLE
    (61) expression -> . LPARENTESIS expression RPARENTESIS
    (62) expression -> . expression + expression
    (63) expression -> . expression - expression
    (64) expression -> . expression * expression
    (65) expression -> . expression / expression
    (67) value -> . NUMERO
    (68) value -> . bool
    (48) bool -> . TRUE
    (49) bool -> . FALSE

    VARIABLE        shift and go to state 40
    LPARENTESIS     shift and go to state 22
    NUMERO          shift and go to state 54
    TRUE            shift and go to state 56
    FALSE           shift and go to state 57

    expression                     shift and go to state 60
    value                          shift and go to state 41
    bool                           shift and go to state 55

state 23

    (5) code_block -> proc MASTER LPARENTESIS comentario list_statement . RPARENTESIS PUNTO_COMA group_proc

    RPARENTESIS     shift and go to state 61


state 24

    (14) list_statement -> statement . list_statement
    (14) list_statement -> . statement list_statement
    (15) list_statement -> . empty
    (16) statement -> . new_variable_statement
    (17) statement -> . values_statement
    (18) statement -> . alter_statement
    (19) statement -> . alterb_statement
    (20) statement -> . condition_statement
    (21) statement -> . istrue_statement
    (22) statement -> . repeat_statement
    (23) statement -> . until_statement
    (24) statement -> . while_statement
    (25) statement -> . case_statement
    (26) statement -> . printvalues_statement
    (27) statement -> . signal_statement
    (28) statement -> . viewsignal_statement
    (69) empty -> .
    (29) new_variable_statement -> . NEW VARIABLE COMA LPARENTESIS DATATYPE COMA value RPARENTESIS PUNTO_COMA
    (30) values_statement -> . VALUES LPARENTESIS VARIABLE COMA value RPARENTESIS PUNTO_COMA
    (31) values_statement -> . VALUES LPARENTESIS VARIABLE COMA alter_statement RPARENTESIS PUNTO_COMA
    (32) alter_statement -> . ALTER LPARENTESIS VARIABLE COMA operador COMA value RPARENTESIS PUNTO_COMA
    (33) alterb_statement -> . ALTERB LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA
    (34) condition_statement -> . expression condition expression
    (35) istrue_statement -> . ISTRUE LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA
    (36) repeat_statement -> . REPEAT LPARENTESIS list_statement break_statement RPARENTESIS PUNTO_COMA
    (38) until_statement -> . UNTIL list_statement condition PUNTO_COMA
    (45) while_statement -> . WHILE expression LPARENTESIS list_statement RPARENTESIS PUNTO_COMA
    (46) while_statement -> . WHILE condition_statement LPARENTESIS list_statement RPARENTESIS PUNTO_COMA
    (47) while_statement -> . WHILE istrue LPARENTESIS list_statement RPARENTESIS PUNTO_COMA
    (50) case_statement -> . CASE VARIABLE case_when_statements else_statement PUNTO_COMA
    (56) printvalues_statement -> . PRINTVALUES LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA
    (57) signal_statement -> . SIGNAL LPARENTESIS VARIABLE COMA value RPARENTESIS PUNTO_COMA
    (58) viewsignal_statement -> . VIEWSIGNAL LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA
    (59) expression -> . value
    (60) expression -> . VARIABLE
    (61) expression -> . LPARENTESIS expression RPARENTESIS
    (62) expression -> . expression + expression
    (63) expression -> . expression - expression
    (64) expression -> . expression * expression
    (65) expression -> . expression / expression
    (67) value -> . NUMERO
    (68) value -> . bool
    (48) bool -> . TRUE
    (49) bool -> . FALSE

    RPARENTESIS     reduce using rule 69 (empty -> .)
    MAYOR_QUE       reduce using rule 69 (empty -> .)
    MENOR_QUE       reduce using rule 69 (empty -> .)
    IGUAL           reduce using rule 69 (empty -> .)
    DISTINTO_QUE    reduce using rule 69 (empty -> .)
    MAYOR_IGUAL_QUE reduce using rule 69 (empty -> .)
    MENOR_IGUAL_QUE reduce using rule 69 (empty -> .)
    BREAK           reduce using rule 69 (empty -> .)
    WHEN            reduce using rule 69 (empty -> .)
    ELSE            reduce using rule 69 (empty -> .)
    PUNTO_COMA      reduce using rule 69 (empty -> .)
    NEW             shift and go to state 39
    VALUES          shift and go to state 42
    ALTER           shift and go to state 43
    ALTERB          shift and go to state 44
    ISTRUE          shift and go to state 46
    REPEAT          shift and go to state 47
    UNTIL           shift and go to state 48
    WHILE           shift and go to state 49
    CASE            shift and go to state 50
    PRINTVALUES     shift and go to state 51
    SIGNAL          shift and go to state 52
    VIEWSIGNAL      shift and go to state 53
    VARIABLE        shift and go to state 40
    LPARENTESIS     shift and go to state 22
    NUMERO          shift and go to state 54
    TRUE            shift and go to state 56
    FALSE           shift and go to state 57

    statement                      shift and go to state 24
    list_statement                 shift and go to state 62
    empty                          shift and go to state 25
    new_variable_statement         shift and go to state 26
    values_statement               shift and go to state 27
    alter_statement                shift and go to state 28
    alterb_statement               shift and go to state 29
    condition_statement            shift and go to state 30
    istrue_statement               shift and go to state 31
    repeat_statement               shift and go to state 32
    until_statement                shift and go to state 33
    while_statement                shift and go to state 34
    case_statement                 shift and go to state 35
    printvalues_statement          shift and go to state 36
    signal_statement               shift and go to state 37
    viewsignal_statement           shift and go to state 38
    value                          shift and go to state 41
    expression                     shift and go to state 45
    bool                           shift and go to state 55

state 25

    (15) list_statement -> empty .

    RPARENTESIS     reduce using rule 15 (list_statement -> empty .)
    MAYOR_QUE       reduce using rule 15 (list_statement -> empty .)
    MENOR_QUE       reduce using rule 15 (list_statement -> empty .)
    IGUAL           reduce using rule 15 (list_statement -> empty .)
    DISTINTO_QUE    reduce using rule 15 (list_statement -> empty .)
    MAYOR_IGUAL_QUE reduce using rule 15 (list_statement -> empty .)
    MENOR_IGUAL_QUE reduce using rule 15 (list_statement -> empty .)
    BREAK           reduce using rule 15 (list_statement -> empty .)
    WHEN            reduce using rule 15 (list_statement -> empty .)
    ELSE            reduce using rule 15 (list_statement -> empty .)
    PUNTO_COMA      reduce using rule 15 (list_statement -> empty .)


state 26

    (16) statement -> new_variable_statement .

    NEW             reduce using rule 16 (statement -> new_variable_statement .)
    VALUES          reduce using rule 16 (statement -> new_variable_statement .)
    ALTER           reduce using rule 16 (statement -> new_variable_statement .)
    ALTERB          reduce using rule 16 (statement -> new_variable_statement .)
    ISTRUE          reduce using rule 16 (statement -> new_variable_statement .)
    REPEAT          reduce using rule 16 (statement -> new_variable_statement .)
    UNTIL           reduce using rule 16 (statement -> new_variable_statement .)
    WHILE           reduce using rule 16 (statement -> new_variable_statement .)
    CASE            reduce using rule 16 (statement -> new_variable_statement .)
    PRINTVALUES     reduce using rule 16 (statement -> new_variable_statement .)
    SIGNAL          reduce using rule 16 (statement -> new_variable_statement .)
    VIEWSIGNAL      reduce using rule 16 (statement -> new_variable_statement .)
    VARIABLE        reduce using rule 16 (statement -> new_variable_statement .)
    LPARENTESIS     reduce using rule 16 (statement -> new_variable_statement .)
    NUMERO          reduce using rule 16 (statement -> new_variable_statement .)
    TRUE            reduce using rule 16 (statement -> new_variable_statement .)
    FALSE           reduce using rule 16 (statement -> new_variable_statement .)
    RPARENTESIS     reduce using rule 16 (statement -> new_variable_statement .)
    MAYOR_QUE       reduce using rule 16 (statement -> new_variable_statement .)
    MENOR_QUE       reduce using rule 16 (statement -> new_variable_statement .)
    IGUAL           reduce using rule 16 (statement -> new_variable_statement .)
    DISTINTO_QUE    reduce using rule 16 (statement -> new_variable_statement .)
    MAYOR_IGUAL_QUE reduce using rule 16 (statement -> new_variable_statement .)
    MENOR_IGUAL_QUE reduce using rule 16 (statement -> new_variable_statement .)
    BREAK           reduce using rule 16 (statement -> new_variable_statement .)
    WHEN            reduce using rule 16 (statement -> new_variable_statement .)
    ELSE            reduce using rule 16 (statement -> new_variable_statement .)
    PUNTO_COMA      reduce using rule 16 (statement -> new_variable_statement .)


state 27

    (17) statement -> values_statement .

    NEW             reduce using rule 17 (statement -> values_statement .)
    VALUES          reduce using rule 17 (statement -> values_statement .)
    ALTER           reduce using rule 17 (statement -> values_statement .)
    ALTERB          reduce using rule 17 (statement -> values_statement .)
    ISTRUE          reduce using rule 17 (statement -> values_statement .)
    REPEAT          reduce using rule 17 (statement -> values_statement .)
    UNTIL           reduce using rule 17 (statement -> values_statement .)
    WHILE           reduce using rule 17 (statement -> values_statement .)
    CASE            reduce using rule 17 (statement -> values_statement .)
    PRINTVALUES     reduce using rule 17 (statement -> values_statement .)
    SIGNAL          reduce using rule 17 (statement -> values_statement .)
    VIEWSIGNAL      reduce using rule 17 (statement -> values_statement .)
    VARIABLE        reduce using rule 17 (statement -> values_statement .)
    LPARENTESIS     reduce using rule 17 (statement -> values_statement .)
    NUMERO          reduce using rule 17 (statement -> values_statement .)
    TRUE            reduce using rule 17 (statement -> values_statement .)
    FALSE           reduce using rule 17 (statement -> values_statement .)
    RPARENTESIS     reduce using rule 17 (statement -> values_statement .)
    MAYOR_QUE       reduce using rule 17 (statement -> values_statement .)
    MENOR_QUE       reduce using rule 17 (statement -> values_statement .)
    IGUAL           reduce using rule 17 (statement -> values_statement .)
    DISTINTO_QUE    reduce using rule 17 (statement -> values_statement .)
    MAYOR_IGUAL_QUE reduce using rule 17 (statement -> values_statement .)
    MENOR_IGUAL_QUE reduce using rule 17 (statement -> values_statement .)
    BREAK           reduce using rule 17 (statement -> values_statement .)
    WHEN            reduce using rule 17 (statement -> values_statement .)
    ELSE            reduce using rule 17 (statement -> values_statement .)
    PUNTO_COMA      reduce using rule 17 (statement -> values_statement .)


state 28

    (18) statement -> alter_statement .

    NEW             reduce using rule 18 (statement -> alter_statement .)
    VALUES          reduce using rule 18 (statement -> alter_statement .)
    ALTER           reduce using rule 18 (statement -> alter_statement .)
    ALTERB          reduce using rule 18 (statement -> alter_statement .)
    ISTRUE          reduce using rule 18 (statement -> alter_statement .)
    REPEAT          reduce using rule 18 (statement -> alter_statement .)
    UNTIL           reduce using rule 18 (statement -> alter_statement .)
    WHILE           reduce using rule 18 (statement -> alter_statement .)
    CASE            reduce using rule 18 (statement -> alter_statement .)
    PRINTVALUES     reduce using rule 18 (statement -> alter_statement .)
    SIGNAL          reduce using rule 18 (statement -> alter_statement .)
    VIEWSIGNAL      reduce using rule 18 (statement -> alter_statement .)
    VARIABLE        reduce using rule 18 (statement -> alter_statement .)
    LPARENTESIS     reduce using rule 18 (statement -> alter_statement .)
    NUMERO          reduce using rule 18 (statement -> alter_statement .)
    TRUE            reduce using rule 18 (statement -> alter_statement .)
    FALSE           reduce using rule 18 (statement -> alter_statement .)
    RPARENTESIS     reduce using rule 18 (statement -> alter_statement .)
    MAYOR_QUE       reduce using rule 18 (statement -> alter_statement .)
    MENOR_QUE       reduce using rule 18 (statement -> alter_statement .)
    IGUAL           reduce using rule 18 (statement -> alter_statement .)
    DISTINTO_QUE    reduce using rule 18 (statement -> alter_statement .)
    MAYOR_IGUAL_QUE reduce using rule 18 (statement -> alter_statement .)
    MENOR_IGUAL_QUE reduce using rule 18 (statement -> alter_statement .)
    BREAK           reduce using rule 18 (statement -> alter_statement .)
    WHEN            reduce using rule 18 (statement -> alter_statement .)
    ELSE            reduce using rule 18 (statement -> alter_statement .)
    PUNTO_COMA      reduce using rule 18 (statement -> alter_statement .)


state 29

    (19) statement -> alterb_statement .

    NEW             reduce using rule 19 (statement -> alterb_statement .)
    VALUES          reduce using rule 19 (statement -> alterb_statement .)
    ALTER           reduce using rule 19 (statement -> alterb_statement .)
    ALTERB          reduce using rule 19 (statement -> alterb_statement .)
    ISTRUE          reduce using rule 19 (statement -> alterb_statement .)
    REPEAT          reduce using rule 19 (statement -> alterb_statement .)
    UNTIL           reduce using rule 19 (statement -> alterb_statement .)
    WHILE           reduce using rule 19 (statement -> alterb_statement .)
    CASE            reduce using rule 19 (statement -> alterb_statement .)
    PRINTVALUES     reduce using rule 19 (statement -> alterb_statement .)
    SIGNAL          reduce using rule 19 (statement -> alterb_statement .)
    VIEWSIGNAL      reduce using rule 19 (statement -> alterb_statement .)
    VARIABLE        reduce using rule 19 (statement -> alterb_statement .)
    LPARENTESIS     reduce using rule 19 (statement -> alterb_statement .)
    NUMERO          reduce using rule 19 (statement -> alterb_statement .)
    TRUE            reduce using rule 19 (statement -> alterb_statement .)
    FALSE           reduce using rule 19 (statement -> alterb_statement .)
    RPARENTESIS     reduce using rule 19 (statement -> alterb_statement .)
    MAYOR_QUE       reduce using rule 19 (statement -> alterb_statement .)
    MENOR_QUE       reduce using rule 19 (statement -> alterb_statement .)
    IGUAL           reduce using rule 19 (statement -> alterb_statement .)
    DISTINTO_QUE    reduce using rule 19 (statement -> alterb_statement .)
    MAYOR_IGUAL_QUE reduce using rule 19 (statement -> alterb_statement .)
    MENOR_IGUAL_QUE reduce using rule 19 (statement -> alterb_statement .)
    BREAK           reduce using rule 19 (statement -> alterb_statement .)
    WHEN            reduce using rule 19 (statement -> alterb_statement .)
    ELSE            reduce using rule 19 (statement -> alterb_statement .)
    PUNTO_COMA      reduce using rule 19 (statement -> alterb_statement .)


state 30

    (20) statement -> condition_statement .

    NEW             reduce using rule 20 (statement -> condition_statement .)
    VALUES          reduce using rule 20 (statement -> condition_statement .)
    ALTER           reduce using rule 20 (statement -> condition_statement .)
    ALTERB          reduce using rule 20 (statement -> condition_statement .)
    ISTRUE          reduce using rule 20 (statement -> condition_statement .)
    REPEAT          reduce using rule 20 (statement -> condition_statement .)
    UNTIL           reduce using rule 20 (statement -> condition_statement .)
    WHILE           reduce using rule 20 (statement -> condition_statement .)
    CASE            reduce using rule 20 (statement -> condition_statement .)
    PRINTVALUES     reduce using rule 20 (statement -> condition_statement .)
    SIGNAL          reduce using rule 20 (statement -> condition_statement .)
    VIEWSIGNAL      reduce using rule 20 (statement -> condition_statement .)
    VARIABLE        reduce using rule 20 (statement -> condition_statement .)
    LPARENTESIS     reduce using rule 20 (statement -> condition_statement .)
    NUMERO          reduce using rule 20 (statement -> condition_statement .)
    TRUE            reduce using rule 20 (statement -> condition_statement .)
    FALSE           reduce using rule 20 (statement -> condition_statement .)
    RPARENTESIS     reduce using rule 20 (statement -> condition_statement .)
    MAYOR_QUE       reduce using rule 20 (statement -> condition_statement .)
    MENOR_QUE       reduce using rule 20 (statement -> condition_statement .)
    IGUAL           reduce using rule 20 (statement -> condition_statement .)
    DISTINTO_QUE    reduce using rule 20 (statement -> condition_statement .)
    MAYOR_IGUAL_QUE reduce using rule 20 (statement -> condition_statement .)
    MENOR_IGUAL_QUE reduce using rule 20 (statement -> condition_statement .)
    BREAK           reduce using rule 20 (statement -> condition_statement .)
    WHEN            reduce using rule 20 (statement -> condition_statement .)
    ELSE            reduce using rule 20 (statement -> condition_statement .)
    PUNTO_COMA      reduce using rule 20 (statement -> condition_statement .)


state 31

    (21) statement -> istrue_statement .

    NEW             reduce using rule 21 (statement -> istrue_statement .)
    VALUES          reduce using rule 21 (statement -> istrue_statement .)
    ALTER           reduce using rule 21 (statement -> istrue_statement .)
    ALTERB          reduce using rule 21 (statement -> istrue_statement .)
    ISTRUE          reduce using rule 21 (statement -> istrue_statement .)
    REPEAT          reduce using rule 21 (statement -> istrue_statement .)
    UNTIL           reduce using rule 21 (statement -> istrue_statement .)
    WHILE           reduce using rule 21 (statement -> istrue_statement .)
    CASE            reduce using rule 21 (statement -> istrue_statement .)
    PRINTVALUES     reduce using rule 21 (statement -> istrue_statement .)
    SIGNAL          reduce using rule 21 (statement -> istrue_statement .)
    VIEWSIGNAL      reduce using rule 21 (statement -> istrue_statement .)
    VARIABLE        reduce using rule 21 (statement -> istrue_statement .)
    LPARENTESIS     reduce using rule 21 (statement -> istrue_statement .)
    NUMERO          reduce using rule 21 (statement -> istrue_statement .)
    TRUE            reduce using rule 21 (statement -> istrue_statement .)
    FALSE           reduce using rule 21 (statement -> istrue_statement .)
    RPARENTESIS     reduce using rule 21 (statement -> istrue_statement .)
    MAYOR_QUE       reduce using rule 21 (statement -> istrue_statement .)
    MENOR_QUE       reduce using rule 21 (statement -> istrue_statement .)
    IGUAL           reduce using rule 21 (statement -> istrue_statement .)
    DISTINTO_QUE    reduce using rule 21 (statement -> istrue_statement .)
    MAYOR_IGUAL_QUE reduce using rule 21 (statement -> istrue_statement .)
    MENOR_IGUAL_QUE reduce using rule 21 (statement -> istrue_statement .)
    BREAK           reduce using rule 21 (statement -> istrue_statement .)
    WHEN            reduce using rule 21 (statement -> istrue_statement .)
    ELSE            reduce using rule 21 (statement -> istrue_statement .)
    PUNTO_COMA      reduce using rule 21 (statement -> istrue_statement .)


state 32

    (22) statement -> repeat_statement .

    NEW             reduce using rule 22 (statement -> repeat_statement .)
    VALUES          reduce using rule 22 (statement -> repeat_statement .)
    ALTER           reduce using rule 22 (statement -> repeat_statement .)
    ALTERB          reduce using rule 22 (statement -> repeat_statement .)
    ISTRUE          reduce using rule 22 (statement -> repeat_statement .)
    REPEAT          reduce using rule 22 (statement -> repeat_statement .)
    UNTIL           reduce using rule 22 (statement -> repeat_statement .)
    WHILE           reduce using rule 22 (statement -> repeat_statement .)
    CASE            reduce using rule 22 (statement -> repeat_statement .)
    PRINTVALUES     reduce using rule 22 (statement -> repeat_statement .)
    SIGNAL          reduce using rule 22 (statement -> repeat_statement .)
    VIEWSIGNAL      reduce using rule 22 (statement -> repeat_statement .)
    VARIABLE        reduce using rule 22 (statement -> repeat_statement .)
    LPARENTESIS     reduce using rule 22 (statement -> repeat_statement .)
    NUMERO          reduce using rule 22 (statement -> repeat_statement .)
    TRUE            reduce using rule 22 (statement -> repeat_statement .)
    FALSE           reduce using rule 22 (statement -> repeat_statement .)
    RPARENTESIS     reduce using rule 22 (statement -> repeat_statement .)
    MAYOR_QUE       reduce using rule 22 (statement -> repeat_statement .)
    MENOR_QUE       reduce using rule 22 (statement -> repeat_statement .)
    IGUAL           reduce using rule 22 (statement -> repeat_statement .)
    DISTINTO_QUE    reduce using rule 22 (statement -> repeat_statement .)
    MAYOR_IGUAL_QUE reduce using rule 22 (statement -> repeat_statement .)
    MENOR_IGUAL_QUE reduce using rule 22 (statement -> repeat_statement .)
    BREAK           reduce using rule 22 (statement -> repeat_statement .)
    WHEN            reduce using rule 22 (statement -> repeat_statement .)
    ELSE            reduce using rule 22 (statement -> repeat_statement .)
    PUNTO_COMA      reduce using rule 22 (statement -> repeat_statement .)


state 33

    (23) statement -> until_statement .

    NEW             reduce using rule 23 (statement -> until_statement .)
    VALUES          reduce using rule 23 (statement -> until_statement .)
    ALTER           reduce using rule 23 (statement -> until_statement .)
    ALTERB          reduce using rule 23 (statement -> until_statement .)
    ISTRUE          reduce using rule 23 (statement -> until_statement .)
    REPEAT          reduce using rule 23 (statement -> until_statement .)
    UNTIL           reduce using rule 23 (statement -> until_statement .)
    WHILE           reduce using rule 23 (statement -> until_statement .)
    CASE            reduce using rule 23 (statement -> until_statement .)
    PRINTVALUES     reduce using rule 23 (statement -> until_statement .)
    SIGNAL          reduce using rule 23 (statement -> until_statement .)
    VIEWSIGNAL      reduce using rule 23 (statement -> until_statement .)
    VARIABLE        reduce using rule 23 (statement -> until_statement .)
    LPARENTESIS     reduce using rule 23 (statement -> until_statement .)
    NUMERO          reduce using rule 23 (statement -> until_statement .)
    TRUE            reduce using rule 23 (statement -> until_statement .)
    FALSE           reduce using rule 23 (statement -> until_statement .)
    RPARENTESIS     reduce using rule 23 (statement -> until_statement .)
    MAYOR_QUE       reduce using rule 23 (statement -> until_statement .)
    MENOR_QUE       reduce using rule 23 (statement -> until_statement .)
    IGUAL           reduce using rule 23 (statement -> until_statement .)
    DISTINTO_QUE    reduce using rule 23 (statement -> until_statement .)
    MAYOR_IGUAL_QUE reduce using rule 23 (statement -> until_statement .)
    MENOR_IGUAL_QUE reduce using rule 23 (statement -> until_statement .)
    BREAK           reduce using rule 23 (statement -> until_statement .)
    WHEN            reduce using rule 23 (statement -> until_statement .)
    ELSE            reduce using rule 23 (statement -> until_statement .)
    PUNTO_COMA      reduce using rule 23 (statement -> until_statement .)


state 34

    (24) statement -> while_statement .

    NEW             reduce using rule 24 (statement -> while_statement .)
    VALUES          reduce using rule 24 (statement -> while_statement .)
    ALTER           reduce using rule 24 (statement -> while_statement .)
    ALTERB          reduce using rule 24 (statement -> while_statement .)
    ISTRUE          reduce using rule 24 (statement -> while_statement .)
    REPEAT          reduce using rule 24 (statement -> while_statement .)
    UNTIL           reduce using rule 24 (statement -> while_statement .)
    WHILE           reduce using rule 24 (statement -> while_statement .)
    CASE            reduce using rule 24 (statement -> while_statement .)
    PRINTVALUES     reduce using rule 24 (statement -> while_statement .)
    SIGNAL          reduce using rule 24 (statement -> while_statement .)
    VIEWSIGNAL      reduce using rule 24 (statement -> while_statement .)
    VARIABLE        reduce using rule 24 (statement -> while_statement .)
    LPARENTESIS     reduce using rule 24 (statement -> while_statement .)
    NUMERO          reduce using rule 24 (statement -> while_statement .)
    TRUE            reduce using rule 24 (statement -> while_statement .)
    FALSE           reduce using rule 24 (statement -> while_statement .)
    RPARENTESIS     reduce using rule 24 (statement -> while_statement .)
    MAYOR_QUE       reduce using rule 24 (statement -> while_statement .)
    MENOR_QUE       reduce using rule 24 (statement -> while_statement .)
    IGUAL           reduce using rule 24 (statement -> while_statement .)
    DISTINTO_QUE    reduce using rule 24 (statement -> while_statement .)
    MAYOR_IGUAL_QUE reduce using rule 24 (statement -> while_statement .)
    MENOR_IGUAL_QUE reduce using rule 24 (statement -> while_statement .)
    BREAK           reduce using rule 24 (statement -> while_statement .)
    WHEN            reduce using rule 24 (statement -> while_statement .)
    ELSE            reduce using rule 24 (statement -> while_statement .)
    PUNTO_COMA      reduce using rule 24 (statement -> while_statement .)


state 35

    (25) statement -> case_statement .

    NEW             reduce using rule 25 (statement -> case_statement .)
    VALUES          reduce using rule 25 (statement -> case_statement .)
    ALTER           reduce using rule 25 (statement -> case_statement .)
    ALTERB          reduce using rule 25 (statement -> case_statement .)
    ISTRUE          reduce using rule 25 (statement -> case_statement .)
    REPEAT          reduce using rule 25 (statement -> case_statement .)
    UNTIL           reduce using rule 25 (statement -> case_statement .)
    WHILE           reduce using rule 25 (statement -> case_statement .)
    CASE            reduce using rule 25 (statement -> case_statement .)
    PRINTVALUES     reduce using rule 25 (statement -> case_statement .)
    SIGNAL          reduce using rule 25 (statement -> case_statement .)
    VIEWSIGNAL      reduce using rule 25 (statement -> case_statement .)
    VARIABLE        reduce using rule 25 (statement -> case_statement .)
    LPARENTESIS     reduce using rule 25 (statement -> case_statement .)
    NUMERO          reduce using rule 25 (statement -> case_statement .)
    TRUE            reduce using rule 25 (statement -> case_statement .)
    FALSE           reduce using rule 25 (statement -> case_statement .)
    RPARENTESIS     reduce using rule 25 (statement -> case_statement .)
    MAYOR_QUE       reduce using rule 25 (statement -> case_statement .)
    MENOR_QUE       reduce using rule 25 (statement -> case_statement .)
    IGUAL           reduce using rule 25 (statement -> case_statement .)
    DISTINTO_QUE    reduce using rule 25 (statement -> case_statement .)
    MAYOR_IGUAL_QUE reduce using rule 25 (statement -> case_statement .)
    MENOR_IGUAL_QUE reduce using rule 25 (statement -> case_statement .)
    BREAK           reduce using rule 25 (statement -> case_statement .)
    WHEN            reduce using rule 25 (statement -> case_statement .)
    ELSE            reduce using rule 25 (statement -> case_statement .)
    PUNTO_COMA      reduce using rule 25 (statement -> case_statement .)


state 36

    (26) statement -> printvalues_statement .

    NEW             reduce using rule 26 (statement -> printvalues_statement .)
    VALUES          reduce using rule 26 (statement -> printvalues_statement .)
    ALTER           reduce using rule 26 (statement -> printvalues_statement .)
    ALTERB          reduce using rule 26 (statement -> printvalues_statement .)
    ISTRUE          reduce using rule 26 (statement -> printvalues_statement .)
    REPEAT          reduce using rule 26 (statement -> printvalues_statement .)
    UNTIL           reduce using rule 26 (statement -> printvalues_statement .)
    WHILE           reduce using rule 26 (statement -> printvalues_statement .)
    CASE            reduce using rule 26 (statement -> printvalues_statement .)
    PRINTVALUES     reduce using rule 26 (statement -> printvalues_statement .)
    SIGNAL          reduce using rule 26 (statement -> printvalues_statement .)
    VIEWSIGNAL      reduce using rule 26 (statement -> printvalues_statement .)
    VARIABLE        reduce using rule 26 (statement -> printvalues_statement .)
    LPARENTESIS     reduce using rule 26 (statement -> printvalues_statement .)
    NUMERO          reduce using rule 26 (statement -> printvalues_statement .)
    TRUE            reduce using rule 26 (statement -> printvalues_statement .)
    FALSE           reduce using rule 26 (statement -> printvalues_statement .)
    RPARENTESIS     reduce using rule 26 (statement -> printvalues_statement .)
    MAYOR_QUE       reduce using rule 26 (statement -> printvalues_statement .)
    MENOR_QUE       reduce using rule 26 (statement -> printvalues_statement .)
    IGUAL           reduce using rule 26 (statement -> printvalues_statement .)
    DISTINTO_QUE    reduce using rule 26 (statement -> printvalues_statement .)
    MAYOR_IGUAL_QUE reduce using rule 26 (statement -> printvalues_statement .)
    MENOR_IGUAL_QUE reduce using rule 26 (statement -> printvalues_statement .)
    BREAK           reduce using rule 26 (statement -> printvalues_statement .)
    WHEN            reduce using rule 26 (statement -> printvalues_statement .)
    ELSE            reduce using rule 26 (statement -> printvalues_statement .)
    PUNTO_COMA      reduce using rule 26 (statement -> printvalues_statement .)


state 37

    (27) statement -> signal_statement .

    NEW             reduce using rule 27 (statement -> signal_statement .)
    VALUES          reduce using rule 27 (statement -> signal_statement .)
    ALTER           reduce using rule 27 (statement -> signal_statement .)
    ALTERB          reduce using rule 27 (statement -> signal_statement .)
    ISTRUE          reduce using rule 27 (statement -> signal_statement .)
    REPEAT          reduce using rule 27 (statement -> signal_statement .)
    UNTIL           reduce using rule 27 (statement -> signal_statement .)
    WHILE           reduce using rule 27 (statement -> signal_statement .)
    CASE            reduce using rule 27 (statement -> signal_statement .)
    PRINTVALUES     reduce using rule 27 (statement -> signal_statement .)
    SIGNAL          reduce using rule 27 (statement -> signal_statement .)
    VIEWSIGNAL      reduce using rule 27 (statement -> signal_statement .)
    VARIABLE        reduce using rule 27 (statement -> signal_statement .)
    LPARENTESIS     reduce using rule 27 (statement -> signal_statement .)
    NUMERO          reduce using rule 27 (statement -> signal_statement .)
    TRUE            reduce using rule 27 (statement -> signal_statement .)
    FALSE           reduce using rule 27 (statement -> signal_statement .)
    RPARENTESIS     reduce using rule 27 (statement -> signal_statement .)
    MAYOR_QUE       reduce using rule 27 (statement -> signal_statement .)
    MENOR_QUE       reduce using rule 27 (statement -> signal_statement .)
    IGUAL           reduce using rule 27 (statement -> signal_statement .)
    DISTINTO_QUE    reduce using rule 27 (statement -> signal_statement .)
    MAYOR_IGUAL_QUE reduce using rule 27 (statement -> signal_statement .)
    MENOR_IGUAL_QUE reduce using rule 27 (statement -> signal_statement .)
    BREAK           reduce using rule 27 (statement -> signal_statement .)
    WHEN            reduce using rule 27 (statement -> signal_statement .)
    ELSE            reduce using rule 27 (statement -> signal_statement .)
    PUNTO_COMA      reduce using rule 27 (statement -> signal_statement .)


state 38

    (28) statement -> viewsignal_statement .

    NEW             reduce using rule 28 (statement -> viewsignal_statement .)
    VALUES          reduce using rule 28 (statement -> viewsignal_statement .)
    ALTER           reduce using rule 28 (statement -> viewsignal_statement .)
    ALTERB          reduce using rule 28 (statement -> viewsignal_statement .)
    ISTRUE          reduce using rule 28 (statement -> viewsignal_statement .)
    REPEAT          reduce using rule 28 (statement -> viewsignal_statement .)
    UNTIL           reduce using rule 28 (statement -> viewsignal_statement .)
    WHILE           reduce using rule 28 (statement -> viewsignal_statement .)
    CASE            reduce using rule 28 (statement -> viewsignal_statement .)
    PRINTVALUES     reduce using rule 28 (statement -> viewsignal_statement .)
    SIGNAL          reduce using rule 28 (statement -> viewsignal_statement .)
    VIEWSIGNAL      reduce using rule 28 (statement -> viewsignal_statement .)
    VARIABLE        reduce using rule 28 (statement -> viewsignal_statement .)
    LPARENTESIS     reduce using rule 28 (statement -> viewsignal_statement .)
    NUMERO          reduce using rule 28 (statement -> viewsignal_statement .)
    TRUE            reduce using rule 28 (statement -> viewsignal_statement .)
    FALSE           reduce using rule 28 (statement -> viewsignal_statement .)
    RPARENTESIS     reduce using rule 28 (statement -> viewsignal_statement .)
    MAYOR_QUE       reduce using rule 28 (statement -> viewsignal_statement .)
    MENOR_QUE       reduce using rule 28 (statement -> viewsignal_statement .)
    IGUAL           reduce using rule 28 (statement -> viewsignal_statement .)
    DISTINTO_QUE    reduce using rule 28 (statement -> viewsignal_statement .)
    MAYOR_IGUAL_QUE reduce using rule 28 (statement -> viewsignal_statement .)
    MENOR_IGUAL_QUE reduce using rule 28 (statement -> viewsignal_statement .)
    BREAK           reduce using rule 28 (statement -> viewsignal_statement .)
    WHEN            reduce using rule 28 (statement -> viewsignal_statement .)
    ELSE            reduce using rule 28 (statement -> viewsignal_statement .)
    PUNTO_COMA      reduce using rule 28 (statement -> viewsignal_statement .)


state 39

    (29) new_variable_statement -> NEW . VARIABLE COMA LPARENTESIS DATATYPE COMA value RPARENTESIS PUNTO_COMA

    VARIABLE        shift and go to state 63


state 40

    (60) expression -> VARIABLE .

    +               reduce using rule 60 (expression -> VARIABLE .)
    -               reduce using rule 60 (expression -> VARIABLE .)
    *               reduce using rule 60 (expression -> VARIABLE .)
    /               reduce using rule 60 (expression -> VARIABLE .)
    MAYOR_QUE       reduce using rule 60 (expression -> VARIABLE .)
    MENOR_QUE       reduce using rule 60 (expression -> VARIABLE .)
    IGUAL           reduce using rule 60 (expression -> VARIABLE .)
    DISTINTO_QUE    reduce using rule 60 (expression -> VARIABLE .)
    MAYOR_IGUAL_QUE reduce using rule 60 (expression -> VARIABLE .)
    MENOR_IGUAL_QUE reduce using rule 60 (expression -> VARIABLE .)
    RPARENTESIS     reduce using rule 60 (expression -> VARIABLE .)
    LPARENTESIS     reduce using rule 60 (expression -> VARIABLE .)
    NEW             reduce using rule 60 (expression -> VARIABLE .)
    VALUES          reduce using rule 60 (expression -> VARIABLE .)
    ALTER           reduce using rule 60 (expression -> VARIABLE .)
    ALTERB          reduce using rule 60 (expression -> VARIABLE .)
    ISTRUE          reduce using rule 60 (expression -> VARIABLE .)
    REPEAT          reduce using rule 60 (expression -> VARIABLE .)
    UNTIL           reduce using rule 60 (expression -> VARIABLE .)
    WHILE           reduce using rule 60 (expression -> VARIABLE .)
    CASE            reduce using rule 60 (expression -> VARIABLE .)
    PRINTVALUES     reduce using rule 60 (expression -> VARIABLE .)
    SIGNAL          reduce using rule 60 (expression -> VARIABLE .)
    VIEWSIGNAL      reduce using rule 60 (expression -> VARIABLE .)
    VARIABLE        reduce using rule 60 (expression -> VARIABLE .)
    NUMERO          reduce using rule 60 (expression -> VARIABLE .)
    TRUE            reduce using rule 60 (expression -> VARIABLE .)
    FALSE           reduce using rule 60 (expression -> VARIABLE .)
    BREAK           reduce using rule 60 (expression -> VARIABLE .)
    WHEN            reduce using rule 60 (expression -> VARIABLE .)
    ELSE            reduce using rule 60 (expression -> VARIABLE .)
    PUNTO_COMA      reduce using rule 60 (expression -> VARIABLE .)


state 41

    (59) expression -> value .

    +               reduce using rule 59 (expression -> value .)
    -               reduce using rule 59 (expression -> value .)
    *               reduce using rule 59 (expression -> value .)
    /               reduce using rule 59 (expression -> value .)
    MAYOR_QUE       reduce using rule 59 (expression -> value .)
    MENOR_QUE       reduce using rule 59 (expression -> value .)
    IGUAL           reduce using rule 59 (expression -> value .)
    DISTINTO_QUE    reduce using rule 59 (expression -> value .)
    MAYOR_IGUAL_QUE reduce using rule 59 (expression -> value .)
    MENOR_IGUAL_QUE reduce using rule 59 (expression -> value .)
    RPARENTESIS     reduce using rule 59 (expression -> value .)
    LPARENTESIS     reduce using rule 59 (expression -> value .)
    NEW             reduce using rule 59 (expression -> value .)
    VALUES          reduce using rule 59 (expression -> value .)
    ALTER           reduce using rule 59 (expression -> value .)
    ALTERB          reduce using rule 59 (expression -> value .)
    ISTRUE          reduce using rule 59 (expression -> value .)
    REPEAT          reduce using rule 59 (expression -> value .)
    UNTIL           reduce using rule 59 (expression -> value .)
    WHILE           reduce using rule 59 (expression -> value .)
    CASE            reduce using rule 59 (expression -> value .)
    PRINTVALUES     reduce using rule 59 (expression -> value .)
    SIGNAL          reduce using rule 59 (expression -> value .)
    VIEWSIGNAL      reduce using rule 59 (expression -> value .)
    VARIABLE        reduce using rule 59 (expression -> value .)
    NUMERO          reduce using rule 59 (expression -> value .)
    TRUE            reduce using rule 59 (expression -> value .)
    FALSE           reduce using rule 59 (expression -> value .)
    BREAK           reduce using rule 59 (expression -> value .)
    WHEN            reduce using rule 59 (expression -> value .)
    ELSE            reduce using rule 59 (expression -> value .)
    PUNTO_COMA      reduce using rule 59 (expression -> value .)


state 42

    (30) values_statement -> VALUES . LPARENTESIS VARIABLE COMA value RPARENTESIS PUNTO_COMA
    (31) values_statement -> VALUES . LPARENTESIS VARIABLE COMA alter_statement RPARENTESIS PUNTO_COMA

    LPARENTESIS     shift and go to state 64


state 43

    (32) alter_statement -> ALTER . LPARENTESIS VARIABLE COMA operador COMA value RPARENTESIS PUNTO_COMA

    LPARENTESIS     shift and go to state 65


state 44

    (33) alterb_statement -> ALTERB . LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA

    LPARENTESIS     shift and go to state 66


state 45

    (34) condition_statement -> expression . condition expression
    (62) expression -> expression . + expression
    (63) expression -> expression . - expression
    (64) expression -> expression . * expression
    (65) expression -> expression . / expression
    (39) condition -> . MAYOR_QUE
    (40) condition -> . MENOR_QUE
    (41) condition -> . IGUAL
    (42) condition -> . DISTINTO_QUE
    (43) condition -> . MAYOR_IGUAL_QUE
    (44) condition -> . MENOR_IGUAL_QUE

    +               shift and go to state 68
    -               shift and go to state 69
    *               shift and go to state 70
    /               shift and go to state 71
    MAYOR_QUE       shift and go to state 72
    MENOR_QUE       shift and go to state 73
    IGUAL           shift and go to state 74
    DISTINTO_QUE    shift and go to state 75
    MAYOR_IGUAL_QUE shift and go to state 76
    MENOR_IGUAL_QUE shift and go to state 77

    condition                      shift and go to state 67

state 46

    (35) istrue_statement -> ISTRUE . LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA

    LPARENTESIS     shift and go to state 78


state 47

    (36) repeat_statement -> REPEAT . LPARENTESIS list_statement break_statement RPARENTESIS PUNTO_COMA

    LPARENTESIS     shift and go to state 79


state 48

    (38) until_statement -> UNTIL . list_statement condition PUNTO_COMA
    (14) list_statement -> . statement list_statement
    (15) list_statement -> . empty
    (16) statement -> . new_variable_statement
    (17) statement -> . values_statement
    (18) statement -> . alter_statement
    (19) statement -> . alterb_statement
    (20) statement -> . condition_statement
    (21) statement -> . istrue_statement
    (22) statement -> . repeat_statement
    (23) statement -> . until_statement
    (24) statement -> . while_statement
    (25) statement -> . case_statement
    (26) statement -> . printvalues_statement
    (27) statement -> . signal_statement
    (28) statement -> . viewsignal_statement
    (69) empty -> .
    (29) new_variable_statement -> . NEW VARIABLE COMA LPARENTESIS DATATYPE COMA value RPARENTESIS PUNTO_COMA
    (30) values_statement -> . VALUES LPARENTESIS VARIABLE COMA value RPARENTESIS PUNTO_COMA
    (31) values_statement -> . VALUES LPARENTESIS VARIABLE COMA alter_statement RPARENTESIS PUNTO_COMA
    (32) alter_statement -> . ALTER LPARENTESIS VARIABLE COMA operador COMA value RPARENTESIS PUNTO_COMA
    (33) alterb_statement -> . ALTERB LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA
    (34) condition_statement -> . expression condition expression
    (35) istrue_statement -> . ISTRUE LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA
    (36) repeat_statement -> . REPEAT LPARENTESIS list_statement break_statement RPARENTESIS PUNTO_COMA
    (38) until_statement -> . UNTIL list_statement condition PUNTO_COMA
    (45) while_statement -> . WHILE expression LPARENTESIS list_statement RPARENTESIS PUNTO_COMA
    (46) while_statement -> . WHILE condition_statement LPARENTESIS list_statement RPARENTESIS PUNTO_COMA
    (47) while_statement -> . WHILE istrue LPARENTESIS list_statement RPARENTESIS PUNTO_COMA
    (50) case_statement -> . CASE VARIABLE case_when_statements else_statement PUNTO_COMA
    (56) printvalues_statement -> . PRINTVALUES LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA
    (57) signal_statement -> . SIGNAL LPARENTESIS VARIABLE COMA value RPARENTESIS PUNTO_COMA
    (58) viewsignal_statement -> . VIEWSIGNAL LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA
    (59) expression -> . value
    (60) expression -> . VARIABLE
    (61) expression -> . LPARENTESIS expression RPARENTESIS
    (62) expression -> . expression + expression
    (63) expression -> . expression - expression
    (64) expression -> . expression * expression
    (65) expression -> . expression / expression
    (67) value -> . NUMERO
    (68) value -> . bool
    (48) bool -> . TRUE
    (49) bool -> . FALSE

    MAYOR_QUE       reduce using rule 69 (empty -> .)
    MENOR_QUE       reduce using rule 69 (empty -> .)
    IGUAL           reduce using rule 69 (empty -> .)
    DISTINTO_QUE    reduce using rule 69 (empty -> .)
    MAYOR_IGUAL_QUE reduce using rule 69 (empty -> .)
    MENOR_IGUAL_QUE reduce using rule 69 (empty -> .)
    NEW             shift and go to state 39
    VALUES          shift and go to state 42
    ALTER           shift and go to state 43
    ALTERB          shift and go to state 44
    ISTRUE          shift and go to state 46
    REPEAT          shift and go to state 47
    UNTIL           shift and go to state 48
    WHILE           shift and go to state 49
    CASE            shift and go to state 50
    PRINTVALUES     shift and go to state 51
    SIGNAL          shift and go to state 52
    VIEWSIGNAL      shift and go to state 53
    VARIABLE        shift and go to state 40
    LPARENTESIS     shift and go to state 22
    NUMERO          shift and go to state 54
    TRUE            shift and go to state 56
    FALSE           shift and go to state 57

    list_statement                 shift and go to state 80
    statement                      shift and go to state 24
    empty                          shift and go to state 25
    new_variable_statement         shift and go to state 26
    values_statement               shift and go to state 27
    alter_statement                shift and go to state 28
    alterb_statement               shift and go to state 29
    condition_statement            shift and go to state 30
    istrue_statement               shift and go to state 31
    repeat_statement               shift and go to state 32
    until_statement                shift and go to state 33
    while_statement                shift and go to state 34
    case_statement                 shift and go to state 35
    printvalues_statement          shift and go to state 36
    signal_statement               shift and go to state 37
    viewsignal_statement           shift and go to state 38
    value                          shift and go to state 41
    expression                     shift and go to state 45
    bool                           shift and go to state 55

state 49

    (45) while_statement -> WHILE . expression LPARENTESIS list_statement RPARENTESIS PUNTO_COMA
    (46) while_statement -> WHILE . condition_statement LPARENTESIS list_statement RPARENTESIS PUNTO_COMA
    (47) while_statement -> WHILE . istrue LPARENTESIS list_statement RPARENTESIS PUNTO_COMA
    (59) expression -> . value
    (60) expression -> . VARIABLE
    (61) expression -> . LPARENTESIS expression RPARENTESIS
    (62) expression -> . expression + expression
    (63) expression -> . expression - expression
    (64) expression -> . expression * expression
    (65) expression -> . expression / expression
    (34) condition_statement -> . expression condition expression
    (66) istrue -> . ISTRUE LPARENTESIS VARIABLE RPARENTESIS
    (67) value -> . NUMERO
    (68) value -> . bool
    (48) bool -> . TRUE
    (49) bool -> . FALSE

    VARIABLE        shift and go to state 40
    LPARENTESIS     shift and go to state 22
    ISTRUE          shift and go to state 84
    NUMERO          shift and go to state 54
    TRUE            shift and go to state 56
    FALSE           shift and go to state 57

    expression                     shift and go to state 81
    condition_statement            shift and go to state 82
    istrue                         shift and go to state 83
    value                          shift and go to state 41
    bool                           shift and go to state 55

state 50

    (50) case_statement -> CASE . VARIABLE case_when_statements else_statement PUNTO_COMA

    VARIABLE        shift and go to state 85


state 51

    (56) printvalues_statement -> PRINTVALUES . LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA

    LPARENTESIS     shift and go to state 86


state 52

    (57) signal_statement -> SIGNAL . LPARENTESIS VARIABLE COMA value RPARENTESIS PUNTO_COMA

    LPARENTESIS     shift and go to state 87


state 53

    (58) viewsignal_statement -> VIEWSIGNAL . LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA

    LPARENTESIS     shift and go to state 88


state 54

    (67) value -> NUMERO .

    +               reduce using rule 67 (value -> NUMERO .)
    -               reduce using rule 67 (value -> NUMERO .)
    *               reduce using rule 67 (value -> NUMERO .)
    /               reduce using rule 67 (value -> NUMERO .)
    MAYOR_QUE       reduce using rule 67 (value -> NUMERO .)
    MENOR_QUE       reduce using rule 67 (value -> NUMERO .)
    IGUAL           reduce using rule 67 (value -> NUMERO .)
    DISTINTO_QUE    reduce using rule 67 (value -> NUMERO .)
    MAYOR_IGUAL_QUE reduce using rule 67 (value -> NUMERO .)
    MENOR_IGUAL_QUE reduce using rule 67 (value -> NUMERO .)
    RPARENTESIS     reduce using rule 67 (value -> NUMERO .)
    LPARENTESIS     reduce using rule 67 (value -> NUMERO .)
    NEW             reduce using rule 67 (value -> NUMERO .)
    VALUES          reduce using rule 67 (value -> NUMERO .)
    ALTER           reduce using rule 67 (value -> NUMERO .)
    ALTERB          reduce using rule 67 (value -> NUMERO .)
    ISTRUE          reduce using rule 67 (value -> NUMERO .)
    REPEAT          reduce using rule 67 (value -> NUMERO .)
    UNTIL           reduce using rule 67 (value -> NUMERO .)
    WHILE           reduce using rule 67 (value -> NUMERO .)
    CASE            reduce using rule 67 (value -> NUMERO .)
    PRINTVALUES     reduce using rule 67 (value -> NUMERO .)
    SIGNAL          reduce using rule 67 (value -> NUMERO .)
    VIEWSIGNAL      reduce using rule 67 (value -> NUMERO .)
    VARIABLE        reduce using rule 67 (value -> NUMERO .)
    NUMERO          reduce using rule 67 (value -> NUMERO .)
    TRUE            reduce using rule 67 (value -> NUMERO .)
    FALSE           reduce using rule 67 (value -> NUMERO .)
    BREAK           reduce using rule 67 (value -> NUMERO .)
    WHEN            reduce using rule 67 (value -> NUMERO .)
    ELSE            reduce using rule 67 (value -> NUMERO .)
    PUNTO_COMA      reduce using rule 67 (value -> NUMERO .)
    THEN            reduce using rule 67 (value -> NUMERO .)


state 55

    (68) value -> bool .

    +               reduce using rule 68 (value -> bool .)
    -               reduce using rule 68 (value -> bool .)
    *               reduce using rule 68 (value -> bool .)
    /               reduce using rule 68 (value -> bool .)
    MAYOR_QUE       reduce using rule 68 (value -> bool .)
    MENOR_QUE       reduce using rule 68 (value -> bool .)
    IGUAL           reduce using rule 68 (value -> bool .)
    DISTINTO_QUE    reduce using rule 68 (value -> bool .)
    MAYOR_IGUAL_QUE reduce using rule 68 (value -> bool .)
    MENOR_IGUAL_QUE reduce using rule 68 (value -> bool .)
    RPARENTESIS     reduce using rule 68 (value -> bool .)
    LPARENTESIS     reduce using rule 68 (value -> bool .)
    NEW             reduce using rule 68 (value -> bool .)
    VALUES          reduce using rule 68 (value -> bool .)
    ALTER           reduce using rule 68 (value -> bool .)
    ALTERB          reduce using rule 68 (value -> bool .)
    ISTRUE          reduce using rule 68 (value -> bool .)
    REPEAT          reduce using rule 68 (value -> bool .)
    UNTIL           reduce using rule 68 (value -> bool .)
    WHILE           reduce using rule 68 (value -> bool .)
    CASE            reduce using rule 68 (value -> bool .)
    PRINTVALUES     reduce using rule 68 (value -> bool .)
    SIGNAL          reduce using rule 68 (value -> bool .)
    VIEWSIGNAL      reduce using rule 68 (value -> bool .)
    VARIABLE        reduce using rule 68 (value -> bool .)
    NUMERO          reduce using rule 68 (value -> bool .)
    TRUE            reduce using rule 68 (value -> bool .)
    FALSE           reduce using rule 68 (value -> bool .)
    BREAK           reduce using rule 68 (value -> bool .)
    WHEN            reduce using rule 68 (value -> bool .)
    ELSE            reduce using rule 68 (value -> bool .)
    PUNTO_COMA      reduce using rule 68 (value -> bool .)
    THEN            reduce using rule 68 (value -> bool .)


state 56

    (48) bool -> TRUE .

    +               reduce using rule 48 (bool -> TRUE .)
    -               reduce using rule 48 (bool -> TRUE .)
    *               reduce using rule 48 (bool -> TRUE .)
    /               reduce using rule 48 (bool -> TRUE .)
    MAYOR_QUE       reduce using rule 48 (bool -> TRUE .)
    MENOR_QUE       reduce using rule 48 (bool -> TRUE .)
    IGUAL           reduce using rule 48 (bool -> TRUE .)
    DISTINTO_QUE    reduce using rule 48 (bool -> TRUE .)
    MAYOR_IGUAL_QUE reduce using rule 48 (bool -> TRUE .)
    MENOR_IGUAL_QUE reduce using rule 48 (bool -> TRUE .)
    RPARENTESIS     reduce using rule 48 (bool -> TRUE .)
    LPARENTESIS     reduce using rule 48 (bool -> TRUE .)
    NEW             reduce using rule 48 (bool -> TRUE .)
    VALUES          reduce using rule 48 (bool -> TRUE .)
    ALTER           reduce using rule 48 (bool -> TRUE .)
    ALTERB          reduce using rule 48 (bool -> TRUE .)
    ISTRUE          reduce using rule 48 (bool -> TRUE .)
    REPEAT          reduce using rule 48 (bool -> TRUE .)
    UNTIL           reduce using rule 48 (bool -> TRUE .)
    WHILE           reduce using rule 48 (bool -> TRUE .)
    CASE            reduce using rule 48 (bool -> TRUE .)
    PRINTVALUES     reduce using rule 48 (bool -> TRUE .)
    SIGNAL          reduce using rule 48 (bool -> TRUE .)
    VIEWSIGNAL      reduce using rule 48 (bool -> TRUE .)
    VARIABLE        reduce using rule 48 (bool -> TRUE .)
    NUMERO          reduce using rule 48 (bool -> TRUE .)
    TRUE            reduce using rule 48 (bool -> TRUE .)
    FALSE           reduce using rule 48 (bool -> TRUE .)
    BREAK           reduce using rule 48 (bool -> TRUE .)
    WHEN            reduce using rule 48 (bool -> TRUE .)
    ELSE            reduce using rule 48 (bool -> TRUE .)
    PUNTO_COMA      reduce using rule 48 (bool -> TRUE .)
    THEN            reduce using rule 48 (bool -> TRUE .)


state 57

    (49) bool -> FALSE .

    +               reduce using rule 49 (bool -> FALSE .)
    -               reduce using rule 49 (bool -> FALSE .)
    *               reduce using rule 49 (bool -> FALSE .)
    /               reduce using rule 49 (bool -> FALSE .)
    MAYOR_QUE       reduce using rule 49 (bool -> FALSE .)
    MENOR_QUE       reduce using rule 49 (bool -> FALSE .)
    IGUAL           reduce using rule 49 (bool -> FALSE .)
    DISTINTO_QUE    reduce using rule 49 (bool -> FALSE .)
    MAYOR_IGUAL_QUE reduce using rule 49 (bool -> FALSE .)
    MENOR_IGUAL_QUE reduce using rule 49 (bool -> FALSE .)
    RPARENTESIS     reduce using rule 49 (bool -> FALSE .)
    LPARENTESIS     reduce using rule 49 (bool -> FALSE .)
    NEW             reduce using rule 49 (bool -> FALSE .)
    VALUES          reduce using rule 49 (bool -> FALSE .)
    ALTER           reduce using rule 49 (bool -> FALSE .)
    ALTERB          reduce using rule 49 (bool -> FALSE .)
    ISTRUE          reduce using rule 49 (bool -> FALSE .)
    REPEAT          reduce using rule 49 (bool -> FALSE .)
    UNTIL           reduce using rule 49 (bool -> FALSE .)
    WHILE           reduce using rule 49 (bool -> FALSE .)
    CASE            reduce using rule 49 (bool -> FALSE .)
    PRINTVALUES     reduce using rule 49 (bool -> FALSE .)
    SIGNAL          reduce using rule 49 (bool -> FALSE .)
    VIEWSIGNAL      reduce using rule 49 (bool -> FALSE .)
    VARIABLE        reduce using rule 49 (bool -> FALSE .)
    NUMERO          reduce using rule 49 (bool -> FALSE .)
    TRUE            reduce using rule 49 (bool -> FALSE .)
    FALSE           reduce using rule 49 (bool -> FALSE .)
    BREAK           reduce using rule 49 (bool -> FALSE .)
    WHEN            reduce using rule 49 (bool -> FALSE .)
    ELSE            reduce using rule 49 (bool -> FALSE .)
    PUNTO_COMA      reduce using rule 49 (bool -> FALSE .)
    THEN            reduce using rule 49 (bool -> FALSE .)


state 58

    (6) code_block -> group_proc proc MASTER LPARENTESIS comentario . list_statement RPARENTESIS PUNTO_COMA group_proc
    (14) list_statement -> . statement list_statement
    (15) list_statement -> . empty
    (16) statement -> . new_variable_statement
    (17) statement -> . values_statement
    (18) statement -> . alter_statement
    (19) statement -> . alterb_statement
    (20) statement -> . condition_statement
    (21) statement -> . istrue_statement
    (22) statement -> . repeat_statement
    (23) statement -> . until_statement
    (24) statement -> . while_statement
    (25) statement -> . case_statement
    (26) statement -> . printvalues_statement
    (27) statement -> . signal_statement
    (28) statement -> . viewsignal_statement
    (69) empty -> .
    (29) new_variable_statement -> . NEW VARIABLE COMA LPARENTESIS DATATYPE COMA value RPARENTESIS PUNTO_COMA
    (30) values_statement -> . VALUES LPARENTESIS VARIABLE COMA value RPARENTESIS PUNTO_COMA
    (31) values_statement -> . VALUES LPARENTESIS VARIABLE COMA alter_statement RPARENTESIS PUNTO_COMA
    (32) alter_statement -> . ALTER LPARENTESIS VARIABLE COMA operador COMA value RPARENTESIS PUNTO_COMA
    (33) alterb_statement -> . ALTERB LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA
    (34) condition_statement -> . expression condition expression
    (35) istrue_statement -> . ISTRUE LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA
    (36) repeat_statement -> . REPEAT LPARENTESIS list_statement break_statement RPARENTESIS PUNTO_COMA
    (38) until_statement -> . UNTIL list_statement condition PUNTO_COMA
    (45) while_statement -> . WHILE expression LPARENTESIS list_statement RPARENTESIS PUNTO_COMA
    (46) while_statement -> . WHILE condition_statement LPARENTESIS list_statement RPARENTESIS PUNTO_COMA
    (47) while_statement -> . WHILE istrue LPARENTESIS list_statement RPARENTESIS PUNTO_COMA
    (50) case_statement -> . CASE VARIABLE case_when_statements else_statement PUNTO_COMA
    (56) printvalues_statement -> . PRINTVALUES LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA
    (57) signal_statement -> . SIGNAL LPARENTESIS VARIABLE COMA value RPARENTESIS PUNTO_COMA
    (58) viewsignal_statement -> . VIEWSIGNAL LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA
    (59) expression -> . value
    (60) expression -> . VARIABLE
    (61) expression -> . LPARENTESIS expression RPARENTESIS
    (62) expression -> . expression + expression
    (63) expression -> . expression - expression
    (64) expression -> . expression * expression
    (65) expression -> . expression / expression
    (67) value -> . NUMERO
    (68) value -> . bool
    (48) bool -> . TRUE
    (49) bool -> . FALSE

    RPARENTESIS     reduce using rule 69 (empty -> .)
    NEW             shift and go to state 39
    VALUES          shift and go to state 42
    ALTER           shift and go to state 43
    ALTERB          shift and go to state 44
    ISTRUE          shift and go to state 46
    REPEAT          shift and go to state 47
    UNTIL           shift and go to state 48
    WHILE           shift and go to state 49
    CASE            shift and go to state 50
    PRINTVALUES     shift and go to state 51
    SIGNAL          shift and go to state 52
    VIEWSIGNAL      shift and go to state 53
    VARIABLE        shift and go to state 40
    LPARENTESIS     shift and go to state 22
    NUMERO          shift and go to state 54
    TRUE            shift and go to state 56
    FALSE           shift and go to state 57

    list_statement                 shift and go to state 89
    statement                      shift and go to state 24
    empty                          shift and go to state 25
    new_variable_statement         shift and go to state 26
    values_statement               shift and go to state 27
    alter_statement                shift and go to state 28
    alterb_statement               shift and go to state 29
    condition_statement            shift and go to state 30
    istrue_statement               shift and go to state 31
    repeat_statement               shift and go to state 32
    until_statement                shift and go to state 33
    while_statement                shift and go to state 34
    case_statement                 shift and go to state 35
    printvalues_statement          shift and go to state 36
    signal_statement               shift and go to state 37
    viewsignal_statement           shift and go to state 38
    value                          shift and go to state 41
    expression                     shift and go to state 45
    bool                           shift and go to state 55

state 59

    (8) group_proc -> PROC VARIABLE LPARENTESIS COMENTARIO list_statement . RPARENTESIS PUNTO_COMA group_proc

    RPARENTESIS     shift and go to state 90


state 60

    (61) expression -> LPARENTESIS expression . RPARENTESIS
    (62) expression -> expression . + expression
    (63) expression -> expression . - expression
    (64) expression -> expression . * expression
    (65) expression -> expression . / expression

    RPARENTESIS     shift and go to state 91
    +               shift and go to state 68
    -               shift and go to state 69
    *               shift and go to state 70
    /               shift and go to state 71


state 61

    (5) code_block -> proc MASTER LPARENTESIS comentario list_statement RPARENTESIS . PUNTO_COMA group_proc

    PUNTO_COMA      shift and go to state 92


state 62

    (14) list_statement -> statement list_statement .

    RPARENTESIS     reduce using rule 14 (list_statement -> statement list_statement .)
    MAYOR_QUE       reduce using rule 14 (list_statement -> statement list_statement .)
    MENOR_QUE       reduce using rule 14 (list_statement -> statement list_statement .)
    IGUAL           reduce using rule 14 (list_statement -> statement list_statement .)
    DISTINTO_QUE    reduce using rule 14 (list_statement -> statement list_statement .)
    MAYOR_IGUAL_QUE reduce using rule 14 (list_statement -> statement list_statement .)
    MENOR_IGUAL_QUE reduce using rule 14 (list_statement -> statement list_statement .)
    BREAK           reduce using rule 14 (list_statement -> statement list_statement .)
    WHEN            reduce using rule 14 (list_statement -> statement list_statement .)
    ELSE            reduce using rule 14 (list_statement -> statement list_statement .)
    PUNTO_COMA      reduce using rule 14 (list_statement -> statement list_statement .)


state 63

    (29) new_variable_statement -> NEW VARIABLE . COMA LPARENTESIS DATATYPE COMA value RPARENTESIS PUNTO_COMA

    COMA            shift and go to state 93


state 64

    (30) values_statement -> VALUES LPARENTESIS . VARIABLE COMA value RPARENTESIS PUNTO_COMA
    (31) values_statement -> VALUES LPARENTESIS . VARIABLE COMA alter_statement RPARENTESIS PUNTO_COMA

    VARIABLE        shift and go to state 94


state 65

    (32) alter_statement -> ALTER LPARENTESIS . VARIABLE COMA operador COMA value RPARENTESIS PUNTO_COMA

    VARIABLE        shift and go to state 95


state 66

    (33) alterb_statement -> ALTERB LPARENTESIS . VARIABLE RPARENTESIS PUNTO_COMA

    VARIABLE        shift and go to state 96


state 67

    (34) condition_statement -> expression condition . expression
    (59) expression -> . value
    (60) expression -> . VARIABLE
    (61) expression -> . LPARENTESIS expression RPARENTESIS
    (62) expression -> . expression + expression
    (63) expression -> . expression - expression
    (64) expression -> . expression * expression
    (65) expression -> . expression / expression
    (67) value -> . NUMERO
    (68) value -> . bool
    (48) bool -> . TRUE
    (49) bool -> . FALSE

    VARIABLE        shift and go to state 40
    LPARENTESIS     shift and go to state 22
    NUMERO          shift and go to state 54
    TRUE            shift and go to state 56
    FALSE           shift and go to state 57

    expression                     shift and go to state 97
    value                          shift and go to state 41
    bool                           shift and go to state 55

state 68

    (62) expression -> expression + . expression
    (59) expression -> . value
    (60) expression -> . VARIABLE
    (61) expression -> . LPARENTESIS expression RPARENTESIS
    (62) expression -> . expression + expression
    (63) expression -> . expression - expression
    (64) expression -> . expression * expression
    (65) expression -> . expression / expression
    (67) value -> . NUMERO
    (68) value -> . bool
    (48) bool -> . TRUE
    (49) bool -> . FALSE

    VARIABLE        shift and go to state 40
    LPARENTESIS     shift and go to state 22
    NUMERO          shift and go to state 54
    TRUE            shift and go to state 56
    FALSE           shift and go to state 57

    expression                     shift and go to state 98
    value                          shift and go to state 41
    bool                           shift and go to state 55

state 69

    (63) expression -> expression - . expression
    (59) expression -> . value
    (60) expression -> . VARIABLE
    (61) expression -> . LPARENTESIS expression RPARENTESIS
    (62) expression -> . expression + expression
    (63) expression -> . expression - expression
    (64) expression -> . expression * expression
    (65) expression -> . expression / expression
    (67) value -> . NUMERO
    (68) value -> . bool
    (48) bool -> . TRUE
    (49) bool -> . FALSE

    VARIABLE        shift and go to state 40
    LPARENTESIS     shift and go to state 22
    NUMERO          shift and go to state 54
    TRUE            shift and go to state 56
    FALSE           shift and go to state 57

    expression                     shift and go to state 99
    value                          shift and go to state 41
    bool                           shift and go to state 55

state 70

    (64) expression -> expression * . expression
    (59) expression -> . value
    (60) expression -> . VARIABLE
    (61) expression -> . LPARENTESIS expression RPARENTESIS
    (62) expression -> . expression + expression
    (63) expression -> . expression - expression
    (64) expression -> . expression * expression
    (65) expression -> . expression / expression
    (67) value -> . NUMERO
    (68) value -> . bool
    (48) bool -> . TRUE
    (49) bool -> . FALSE

    VARIABLE        shift and go to state 40
    LPARENTESIS     shift and go to state 22
    NUMERO          shift and go to state 54
    TRUE            shift and go to state 56
    FALSE           shift and go to state 57

    expression                     shift and go to state 100
    value                          shift and go to state 41
    bool                           shift and go to state 55

state 71

    (65) expression -> expression / . expression
    (59) expression -> . value
    (60) expression -> . VARIABLE
    (61) expression -> . LPARENTESIS expression RPARENTESIS
    (62) expression -> . expression + expression
    (63) expression -> . expression - expression
    (64) expression -> . expression * expression
    (65) expression -> . expression / expression
    (67) value -> . NUMERO
    (68) value -> . bool
    (48) bool -> . TRUE
    (49) bool -> . FALSE

    VARIABLE        shift and go to state 40
    LPARENTESIS     shift and go to state 22
    NUMERO          shift and go to state 54
    TRUE            shift and go to state 56
    FALSE           shift and go to state 57

    expression                     shift and go to state 101
    value                          shift and go to state 41
    bool                           shift and go to state 55

state 72

    (39) condition -> MAYOR_QUE .

    VARIABLE        reduce using rule 39 (condition -> MAYOR_QUE .)
    LPARENTESIS     reduce using rule 39 (condition -> MAYOR_QUE .)
    NUMERO          reduce using rule 39 (condition -> MAYOR_QUE .)
    TRUE            reduce using rule 39 (condition -> MAYOR_QUE .)
    FALSE           reduce using rule 39 (condition -> MAYOR_QUE .)
    PUNTO_COMA      reduce using rule 39 (condition -> MAYOR_QUE .)


state 73

    (40) condition -> MENOR_QUE .

    VARIABLE        reduce using rule 40 (condition -> MENOR_QUE .)
    LPARENTESIS     reduce using rule 40 (condition -> MENOR_QUE .)
    NUMERO          reduce using rule 40 (condition -> MENOR_QUE .)
    TRUE            reduce using rule 40 (condition -> MENOR_QUE .)
    FALSE           reduce using rule 40 (condition -> MENOR_QUE .)
    PUNTO_COMA      reduce using rule 40 (condition -> MENOR_QUE .)


state 74

    (41) condition -> IGUAL .

    VARIABLE        reduce using rule 41 (condition -> IGUAL .)
    LPARENTESIS     reduce using rule 41 (condition -> IGUAL .)
    NUMERO          reduce using rule 41 (condition -> IGUAL .)
    TRUE            reduce using rule 41 (condition -> IGUAL .)
    FALSE           reduce using rule 41 (condition -> IGUAL .)
    PUNTO_COMA      reduce using rule 41 (condition -> IGUAL .)


state 75

    (42) condition -> DISTINTO_QUE .

    VARIABLE        reduce using rule 42 (condition -> DISTINTO_QUE .)
    LPARENTESIS     reduce using rule 42 (condition -> DISTINTO_QUE .)
    NUMERO          reduce using rule 42 (condition -> DISTINTO_QUE .)
    TRUE            reduce using rule 42 (condition -> DISTINTO_QUE .)
    FALSE           reduce using rule 42 (condition -> DISTINTO_QUE .)
    PUNTO_COMA      reduce using rule 42 (condition -> DISTINTO_QUE .)


state 76

    (43) condition -> MAYOR_IGUAL_QUE .

    VARIABLE        reduce using rule 43 (condition -> MAYOR_IGUAL_QUE .)
    LPARENTESIS     reduce using rule 43 (condition -> MAYOR_IGUAL_QUE .)
    NUMERO          reduce using rule 43 (condition -> MAYOR_IGUAL_QUE .)
    TRUE            reduce using rule 43 (condition -> MAYOR_IGUAL_QUE .)
    FALSE           reduce using rule 43 (condition -> MAYOR_IGUAL_QUE .)
    PUNTO_COMA      reduce using rule 43 (condition -> MAYOR_IGUAL_QUE .)


state 77

    (44) condition -> MENOR_IGUAL_QUE .

    VARIABLE        reduce using rule 44 (condition -> MENOR_IGUAL_QUE .)
    LPARENTESIS     reduce using rule 44 (condition -> MENOR_IGUAL_QUE .)
    NUMERO          reduce using rule 44 (condition -> MENOR_IGUAL_QUE .)
    TRUE            reduce using rule 44 (condition -> MENOR_IGUAL_QUE .)
    FALSE           reduce using rule 44 (condition -> MENOR_IGUAL_QUE .)
    PUNTO_COMA      reduce using rule 44 (condition -> MENOR_IGUAL_QUE .)


state 78

    (35) istrue_statement -> ISTRUE LPARENTESIS . VARIABLE RPARENTESIS PUNTO_COMA

    VARIABLE        shift and go to state 102


state 79

    (36) repeat_statement -> REPEAT LPARENTESIS . list_statement break_statement RPARENTESIS PUNTO_COMA
    (14) list_statement -> . statement list_statement
    (15) list_statement -> . empty
    (16) statement -> . new_variable_statement
    (17) statement -> . values_statement
    (18) statement -> . alter_statement
    (19) statement -> . alterb_statement
    (20) statement -> . condition_statement
    (21) statement -> . istrue_statement
    (22) statement -> . repeat_statement
    (23) statement -> . until_statement
    (24) statement -> . while_statement
    (25) statement -> . case_statement
    (26) statement -> . printvalues_statement
    (27) statement -> . signal_statement
    (28) statement -> . viewsignal_statement
    (69) empty -> .
    (29) new_variable_statement -> . NEW VARIABLE COMA LPARENTESIS DATATYPE COMA value RPARENTESIS PUNTO_COMA
    (30) values_statement -> . VALUES LPARENTESIS VARIABLE COMA value RPARENTESIS PUNTO_COMA
    (31) values_statement -> . VALUES LPARENTESIS VARIABLE COMA alter_statement RPARENTESIS PUNTO_COMA
    (32) alter_statement -> . ALTER LPARENTESIS VARIABLE COMA operador COMA value RPARENTESIS PUNTO_COMA
    (33) alterb_statement -> . ALTERB LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA
    (34) condition_statement -> . expression condition expression
    (35) istrue_statement -> . ISTRUE LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA
    (36) repeat_statement -> . REPEAT LPARENTESIS list_statement break_statement RPARENTESIS PUNTO_COMA
    (38) until_statement -> . UNTIL list_statement condition PUNTO_COMA
    (45) while_statement -> . WHILE expression LPARENTESIS list_statement RPARENTESIS PUNTO_COMA
    (46) while_statement -> . WHILE condition_statement LPARENTESIS list_statement RPARENTESIS PUNTO_COMA
    (47) while_statement -> . WHILE istrue LPARENTESIS list_statement RPARENTESIS PUNTO_COMA
    (50) case_statement -> . CASE VARIABLE case_when_statements else_statement PUNTO_COMA
    (56) printvalues_statement -> . PRINTVALUES LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA
    (57) signal_statement -> . SIGNAL LPARENTESIS VARIABLE COMA value RPARENTESIS PUNTO_COMA
    (58) viewsignal_statement -> . VIEWSIGNAL LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA
    (59) expression -> . value
    (60) expression -> . VARIABLE
    (61) expression -> . LPARENTESIS expression RPARENTESIS
    (62) expression -> . expression + expression
    (63) expression -> . expression - expression
    (64) expression -> . expression * expression
    (65) expression -> . expression / expression
    (67) value -> . NUMERO
    (68) value -> . bool
    (48) bool -> . TRUE
    (49) bool -> . FALSE

    BREAK           reduce using rule 69 (empty -> .)
    NEW             shift and go to state 39
    VALUES          shift and go to state 42
    ALTER           shift and go to state 43
    ALTERB          shift and go to state 44
    ISTRUE          shift and go to state 46
    REPEAT          shift and go to state 47
    UNTIL           shift and go to state 48
    WHILE           shift and go to state 49
    CASE            shift and go to state 50
    PRINTVALUES     shift and go to state 51
    SIGNAL          shift and go to state 52
    VIEWSIGNAL      shift and go to state 53
    VARIABLE        shift and go to state 40
    LPARENTESIS     shift and go to state 22
    NUMERO          shift and go to state 54
    TRUE            shift and go to state 56
    FALSE           shift and go to state 57

    list_statement                 shift and go to state 103
    statement                      shift and go to state 24
    empty                          shift and go to state 25
    new_variable_statement         shift and go to state 26
    values_statement               shift and go to state 27
    alter_statement                shift and go to state 28
    alterb_statement               shift and go to state 29
    condition_statement            shift and go to state 30
    istrue_statement               shift and go to state 31
    repeat_statement               shift and go to state 32
    until_statement                shift and go to state 33
    while_statement                shift and go to state 34
    case_statement                 shift and go to state 35
    printvalues_statement          shift and go to state 36
    signal_statement               shift and go to state 37
    viewsignal_statement           shift and go to state 38
    value                          shift and go to state 41
    expression                     shift and go to state 45
    bool                           shift and go to state 55

state 80

    (38) until_statement -> UNTIL list_statement . condition PUNTO_COMA
    (39) condition -> . MAYOR_QUE
    (40) condition -> . MENOR_QUE
    (41) condition -> . IGUAL
    (42) condition -> . DISTINTO_QUE
    (43) condition -> . MAYOR_IGUAL_QUE
    (44) condition -> . MENOR_IGUAL_QUE

    MAYOR_QUE       shift and go to state 72
    MENOR_QUE       shift and go to state 73
    IGUAL           shift and go to state 74
    DISTINTO_QUE    shift and go to state 75
    MAYOR_IGUAL_QUE shift and go to state 76
    MENOR_IGUAL_QUE shift and go to state 77

    condition                      shift and go to state 104

state 81

    (45) while_statement -> WHILE expression . LPARENTESIS list_statement RPARENTESIS PUNTO_COMA
    (62) expression -> expression . + expression
    (63) expression -> expression . - expression
    (64) expression -> expression . * expression
    (65) expression -> expression . / expression
    (34) condition_statement -> expression . condition expression
    (39) condition -> . MAYOR_QUE
    (40) condition -> . MENOR_QUE
    (41) condition -> . IGUAL
    (42) condition -> . DISTINTO_QUE
    (43) condition -> . MAYOR_IGUAL_QUE
    (44) condition -> . MENOR_IGUAL_QUE

    LPARENTESIS     shift and go to state 105
    +               shift and go to state 68
    -               shift and go to state 69
    *               shift and go to state 70
    /               shift and go to state 71
    MAYOR_QUE       shift and go to state 72
    MENOR_QUE       shift and go to state 73
    IGUAL           shift and go to state 74
    DISTINTO_QUE    shift and go to state 75
    MAYOR_IGUAL_QUE shift and go to state 76
    MENOR_IGUAL_QUE shift and go to state 77

    condition                      shift and go to state 67

state 82

    (46) while_statement -> WHILE condition_statement . LPARENTESIS list_statement RPARENTESIS PUNTO_COMA

    LPARENTESIS     shift and go to state 106


state 83

    (47) while_statement -> WHILE istrue . LPARENTESIS list_statement RPARENTESIS PUNTO_COMA

    LPARENTESIS     shift and go to state 107


state 84

    (66) istrue -> ISTRUE . LPARENTESIS VARIABLE RPARENTESIS

    LPARENTESIS     shift and go to state 108


state 85

    (50) case_statement -> CASE VARIABLE . case_when_statements else_statement PUNTO_COMA
    (51) case_when_statements -> . case_when_statement case_when_statements
    (52) case_when_statements -> . empty
    (53) case_when_statement -> . WHEN value THEN list_statement
    (69) empty -> .

    WHEN            shift and go to state 112
    ELSE            reduce using rule 69 (empty -> .)
    PUNTO_COMA      reduce using rule 69 (empty -> .)

    case_when_statements           shift and go to state 109
    case_when_statement            shift and go to state 110
    empty                          shift and go to state 111

state 86

    (56) printvalues_statement -> PRINTVALUES LPARENTESIS . VARIABLE RPARENTESIS PUNTO_COMA

    VARIABLE        shift and go to state 113


state 87

    (57) signal_statement -> SIGNAL LPARENTESIS . VARIABLE COMA value RPARENTESIS PUNTO_COMA

    VARIABLE        shift and go to state 114


state 88

    (58) viewsignal_statement -> VIEWSIGNAL LPARENTESIS . VARIABLE RPARENTESIS PUNTO_COMA

    VARIABLE        shift and go to state 115


state 89

    (6) code_block -> group_proc proc MASTER LPARENTESIS comentario list_statement . RPARENTESIS PUNTO_COMA group_proc

    RPARENTESIS     shift and go to state 116


state 90

    (8) group_proc -> PROC VARIABLE LPARENTESIS COMENTARIO list_statement RPARENTESIS . PUNTO_COMA group_proc

    PUNTO_COMA      shift and go to state 117


state 91

    (61) expression -> LPARENTESIS expression RPARENTESIS .

    +               reduce using rule 61 (expression -> LPARENTESIS expression RPARENTESIS .)
    -               reduce using rule 61 (expression -> LPARENTESIS expression RPARENTESIS .)
    *               reduce using rule 61 (expression -> LPARENTESIS expression RPARENTESIS .)
    /               reduce using rule 61 (expression -> LPARENTESIS expression RPARENTESIS .)
    MAYOR_QUE       reduce using rule 61 (expression -> LPARENTESIS expression RPARENTESIS .)
    MENOR_QUE       reduce using rule 61 (expression -> LPARENTESIS expression RPARENTESIS .)
    IGUAL           reduce using rule 61 (expression -> LPARENTESIS expression RPARENTESIS .)
    DISTINTO_QUE    reduce using rule 61 (expression -> LPARENTESIS expression RPARENTESIS .)
    MAYOR_IGUAL_QUE reduce using rule 61 (expression -> LPARENTESIS expression RPARENTESIS .)
    MENOR_IGUAL_QUE reduce using rule 61 (expression -> LPARENTESIS expression RPARENTESIS .)
    RPARENTESIS     reduce using rule 61 (expression -> LPARENTESIS expression RPARENTESIS .)
    LPARENTESIS     reduce using rule 61 (expression -> LPARENTESIS expression RPARENTESIS .)
    NEW             reduce using rule 61 (expression -> LPARENTESIS expression RPARENTESIS .)
    VALUES          reduce using rule 61 (expression -> LPARENTESIS expression RPARENTESIS .)
    ALTER           reduce using rule 61 (expression -> LPARENTESIS expression RPARENTESIS .)
    ALTERB          reduce using rule 61 (expression -> LPARENTESIS expression RPARENTESIS .)
    ISTRUE          reduce using rule 61 (expression -> LPARENTESIS expression RPARENTESIS .)
    REPEAT          reduce using rule 61 (expression -> LPARENTESIS expression RPARENTESIS .)
    UNTIL           reduce using rule 61 (expression -> LPARENTESIS expression RPARENTESIS .)
    WHILE           reduce using rule 61 (expression -> LPARENTESIS expression RPARENTESIS .)
    CASE            reduce using rule 61 (expression -> LPARENTESIS expression RPARENTESIS .)
    PRINTVALUES     reduce using rule 61 (expression -> LPARENTESIS expression RPARENTESIS .)
    SIGNAL          reduce using rule 61 (expression -> LPARENTESIS expression RPARENTESIS .)
    VIEWSIGNAL      reduce using rule 61 (expression -> LPARENTESIS expression RPARENTESIS .)
    VARIABLE        reduce using rule 61 (expression -> LPARENTESIS expression RPARENTESIS .)
    NUMERO          reduce using rule 61 (expression -> LPARENTESIS expression RPARENTESIS .)
    TRUE            reduce using rule 61 (expression -> LPARENTESIS expression RPARENTESIS .)
    FALSE           reduce using rule 61 (expression -> LPARENTESIS expression RPARENTESIS .)
    BREAK           reduce using rule 61 (expression -> LPARENTESIS expression RPARENTESIS .)
    WHEN            reduce using rule 61 (expression -> LPARENTESIS expression RPARENTESIS .)
    ELSE            reduce using rule 61 (expression -> LPARENTESIS expression RPARENTESIS .)
    PUNTO_COMA      reduce using rule 61 (expression -> LPARENTESIS expression RPARENTESIS .)


state 92

    (5) code_block -> proc MASTER LPARENTESIS comentario list_statement RPARENTESIS PUNTO_COMA . group_proc
    (8) group_proc -> . PROC VARIABLE LPARENTESIS COMENTARIO list_statement RPARENTESIS PUNTO_COMA group_proc
    (9) group_proc -> . empty
    (69) empty -> .

    PROC            shift and go to state 119
    $end            reduce using rule 69 (empty -> .)
    PUNTO_COMA      reduce using rule 69 (empty -> .)

    group_proc                     shift and go to state 118
    empty                          shift and go to state 10

state 93

    (29) new_variable_statement -> NEW VARIABLE COMA . LPARENTESIS DATATYPE COMA value RPARENTESIS PUNTO_COMA

    LPARENTESIS     shift and go to state 120


state 94

    (30) values_statement -> VALUES LPARENTESIS VARIABLE . COMA value RPARENTESIS PUNTO_COMA
    (31) values_statement -> VALUES LPARENTESIS VARIABLE . COMA alter_statement RPARENTESIS PUNTO_COMA

    COMA            shift and go to state 121


state 95

    (32) alter_statement -> ALTER LPARENTESIS VARIABLE . COMA operador COMA value RPARENTESIS PUNTO_COMA

    COMA            shift and go to state 122


state 96

    (33) alterb_statement -> ALTERB LPARENTESIS VARIABLE . RPARENTESIS PUNTO_COMA

    RPARENTESIS     shift and go to state 123


state 97

    (34) condition_statement -> expression condition expression .
    (62) expression -> expression . + expression
    (63) expression -> expression . - expression
    (64) expression -> expression . * expression
    (65) expression -> expression . / expression

    NEW             reduce using rule 34 (condition_statement -> expression condition expression .)
    VALUES          reduce using rule 34 (condition_statement -> expression condition expression .)
    ALTER           reduce using rule 34 (condition_statement -> expression condition expression .)
    ALTERB          reduce using rule 34 (condition_statement -> expression condition expression .)
    ISTRUE          reduce using rule 34 (condition_statement -> expression condition expression .)
    REPEAT          reduce using rule 34 (condition_statement -> expression condition expression .)
    UNTIL           reduce using rule 34 (condition_statement -> expression condition expression .)
    WHILE           reduce using rule 34 (condition_statement -> expression condition expression .)
    CASE            reduce using rule 34 (condition_statement -> expression condition expression .)
    PRINTVALUES     reduce using rule 34 (condition_statement -> expression condition expression .)
    SIGNAL          reduce using rule 34 (condition_statement -> expression condition expression .)
    VIEWSIGNAL      reduce using rule 34 (condition_statement -> expression condition expression .)
    VARIABLE        reduce using rule 34 (condition_statement -> expression condition expression .)
    LPARENTESIS     reduce using rule 34 (condition_statement -> expression condition expression .)
    NUMERO          reduce using rule 34 (condition_statement -> expression condition expression .)
    TRUE            reduce using rule 34 (condition_statement -> expression condition expression .)
    FALSE           reduce using rule 34 (condition_statement -> expression condition expression .)
    RPARENTESIS     reduce using rule 34 (condition_statement -> expression condition expression .)
    MAYOR_QUE       reduce using rule 34 (condition_statement -> expression condition expression .)
    MENOR_QUE       reduce using rule 34 (condition_statement -> expression condition expression .)
    IGUAL           reduce using rule 34 (condition_statement -> expression condition expression .)
    DISTINTO_QUE    reduce using rule 34 (condition_statement -> expression condition expression .)
    MAYOR_IGUAL_QUE reduce using rule 34 (condition_statement -> expression condition expression .)
    MENOR_IGUAL_QUE reduce using rule 34 (condition_statement -> expression condition expression .)
    BREAK           reduce using rule 34 (condition_statement -> expression condition expression .)
    WHEN            reduce using rule 34 (condition_statement -> expression condition expression .)
    ELSE            reduce using rule 34 (condition_statement -> expression condition expression .)
    PUNTO_COMA      reduce using rule 34 (condition_statement -> expression condition expression .)
    +               shift and go to state 68
    -               shift and go to state 69
    *               shift and go to state 70
    /               shift and go to state 71


state 98

    (62) expression -> expression + expression .
    (62) expression -> expression . + expression
    (63) expression -> expression . - expression
    (64) expression -> expression . * expression
    (65) expression -> expression . / expression

  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for / resolved as shift
    MAYOR_QUE       reduce using rule 62 (expression -> expression + expression .)
    MENOR_QUE       reduce using rule 62 (expression -> expression + expression .)
    IGUAL           reduce using rule 62 (expression -> expression + expression .)
    DISTINTO_QUE    reduce using rule 62 (expression -> expression + expression .)
    MAYOR_IGUAL_QUE reduce using rule 62 (expression -> expression + expression .)
    MENOR_IGUAL_QUE reduce using rule 62 (expression -> expression + expression .)
    RPARENTESIS     reduce using rule 62 (expression -> expression + expression .)
    LPARENTESIS     reduce using rule 62 (expression -> expression + expression .)
    NEW             reduce using rule 62 (expression -> expression + expression .)
    VALUES          reduce using rule 62 (expression -> expression + expression .)
    ALTER           reduce using rule 62 (expression -> expression + expression .)
    ALTERB          reduce using rule 62 (expression -> expression + expression .)
    ISTRUE          reduce using rule 62 (expression -> expression + expression .)
    REPEAT          reduce using rule 62 (expression -> expression + expression .)
    UNTIL           reduce using rule 62 (expression -> expression + expression .)
    WHILE           reduce using rule 62 (expression -> expression + expression .)
    CASE            reduce using rule 62 (expression -> expression + expression .)
    PRINTVALUES     reduce using rule 62 (expression -> expression + expression .)
    SIGNAL          reduce using rule 62 (expression -> expression + expression .)
    VIEWSIGNAL      reduce using rule 62 (expression -> expression + expression .)
    VARIABLE        reduce using rule 62 (expression -> expression + expression .)
    NUMERO          reduce using rule 62 (expression -> expression + expression .)
    TRUE            reduce using rule 62 (expression -> expression + expression .)
    FALSE           reduce using rule 62 (expression -> expression + expression .)
    BREAK           reduce using rule 62 (expression -> expression + expression .)
    WHEN            reduce using rule 62 (expression -> expression + expression .)
    ELSE            reduce using rule 62 (expression -> expression + expression .)
    PUNTO_COMA      reduce using rule 62 (expression -> expression + expression .)
    +               shift and go to state 68
    -               shift and go to state 69
    *               shift and go to state 70
    /               shift and go to state 71

  ! +               [ reduce using rule 62 (expression -> expression + expression .) ]
  ! -               [ reduce using rule 62 (expression -> expression + expression .) ]
  ! *               [ reduce using rule 62 (expression -> expression + expression .) ]
  ! /               [ reduce using rule 62 (expression -> expression + expression .) ]


state 99

    (63) expression -> expression - expression .
    (62) expression -> expression . + expression
    (63) expression -> expression . - expression
    (64) expression -> expression . * expression
    (65) expression -> expression . / expression

  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for / resolved as shift
    MAYOR_QUE       reduce using rule 63 (expression -> expression - expression .)
    MENOR_QUE       reduce using rule 63 (expression -> expression - expression .)
    IGUAL           reduce using rule 63 (expression -> expression - expression .)
    DISTINTO_QUE    reduce using rule 63 (expression -> expression - expression .)
    MAYOR_IGUAL_QUE reduce using rule 63 (expression -> expression - expression .)
    MENOR_IGUAL_QUE reduce using rule 63 (expression -> expression - expression .)
    RPARENTESIS     reduce using rule 63 (expression -> expression - expression .)
    LPARENTESIS     reduce using rule 63 (expression -> expression - expression .)
    NEW             reduce using rule 63 (expression -> expression - expression .)
    VALUES          reduce using rule 63 (expression -> expression - expression .)
    ALTER           reduce using rule 63 (expression -> expression - expression .)
    ALTERB          reduce using rule 63 (expression -> expression - expression .)
    ISTRUE          reduce using rule 63 (expression -> expression - expression .)
    REPEAT          reduce using rule 63 (expression -> expression - expression .)
    UNTIL           reduce using rule 63 (expression -> expression - expression .)
    WHILE           reduce using rule 63 (expression -> expression - expression .)
    CASE            reduce using rule 63 (expression -> expression - expression .)
    PRINTVALUES     reduce using rule 63 (expression -> expression - expression .)
    SIGNAL          reduce using rule 63 (expression -> expression - expression .)
    VIEWSIGNAL      reduce using rule 63 (expression -> expression - expression .)
    VARIABLE        reduce using rule 63 (expression -> expression - expression .)
    NUMERO          reduce using rule 63 (expression -> expression - expression .)
    TRUE            reduce using rule 63 (expression -> expression - expression .)
    FALSE           reduce using rule 63 (expression -> expression - expression .)
    BREAK           reduce using rule 63 (expression -> expression - expression .)
    WHEN            reduce using rule 63 (expression -> expression - expression .)
    ELSE            reduce using rule 63 (expression -> expression - expression .)
    PUNTO_COMA      reduce using rule 63 (expression -> expression - expression .)
    +               shift and go to state 68
    -               shift and go to state 69
    *               shift and go to state 70
    /               shift and go to state 71

  ! +               [ reduce using rule 63 (expression -> expression - expression .) ]
  ! -               [ reduce using rule 63 (expression -> expression - expression .) ]
  ! *               [ reduce using rule 63 (expression -> expression - expression .) ]
  ! /               [ reduce using rule 63 (expression -> expression - expression .) ]


state 100

    (64) expression -> expression * expression .
    (62) expression -> expression . + expression
    (63) expression -> expression . - expression
    (64) expression -> expression . * expression
    (65) expression -> expression . / expression

  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for / resolved as shift
    MAYOR_QUE       reduce using rule 64 (expression -> expression * expression .)
    MENOR_QUE       reduce using rule 64 (expression -> expression * expression .)
    IGUAL           reduce using rule 64 (expression -> expression * expression .)
    DISTINTO_QUE    reduce using rule 64 (expression -> expression * expression .)
    MAYOR_IGUAL_QUE reduce using rule 64 (expression -> expression * expression .)
    MENOR_IGUAL_QUE reduce using rule 64 (expression -> expression * expression .)
    RPARENTESIS     reduce using rule 64 (expression -> expression * expression .)
    LPARENTESIS     reduce using rule 64 (expression -> expression * expression .)
    NEW             reduce using rule 64 (expression -> expression * expression .)
    VALUES          reduce using rule 64 (expression -> expression * expression .)
    ALTER           reduce using rule 64 (expression -> expression * expression .)
    ALTERB          reduce using rule 64 (expression -> expression * expression .)
    ISTRUE          reduce using rule 64 (expression -> expression * expression .)
    REPEAT          reduce using rule 64 (expression -> expression * expression .)
    UNTIL           reduce using rule 64 (expression -> expression * expression .)
    WHILE           reduce using rule 64 (expression -> expression * expression .)
    CASE            reduce using rule 64 (expression -> expression * expression .)
    PRINTVALUES     reduce using rule 64 (expression -> expression * expression .)
    SIGNAL          reduce using rule 64 (expression -> expression * expression .)
    VIEWSIGNAL      reduce using rule 64 (expression -> expression * expression .)
    VARIABLE        reduce using rule 64 (expression -> expression * expression .)
    NUMERO          reduce using rule 64 (expression -> expression * expression .)
    TRUE            reduce using rule 64 (expression -> expression * expression .)
    FALSE           reduce using rule 64 (expression -> expression * expression .)
    BREAK           reduce using rule 64 (expression -> expression * expression .)
    WHEN            reduce using rule 64 (expression -> expression * expression .)
    ELSE            reduce using rule 64 (expression -> expression * expression .)
    PUNTO_COMA      reduce using rule 64 (expression -> expression * expression .)
    +               shift and go to state 68
    -               shift and go to state 69
    *               shift and go to state 70
    /               shift and go to state 71

  ! +               [ reduce using rule 64 (expression -> expression * expression .) ]
  ! -               [ reduce using rule 64 (expression -> expression * expression .) ]
  ! *               [ reduce using rule 64 (expression -> expression * expression .) ]
  ! /               [ reduce using rule 64 (expression -> expression * expression .) ]


state 101

    (65) expression -> expression / expression .
    (62) expression -> expression . + expression
    (63) expression -> expression . - expression
    (64) expression -> expression . * expression
    (65) expression -> expression . / expression

  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for / resolved as shift
    MAYOR_QUE       reduce using rule 65 (expression -> expression / expression .)
    MENOR_QUE       reduce using rule 65 (expression -> expression / expression .)
    IGUAL           reduce using rule 65 (expression -> expression / expression .)
    DISTINTO_QUE    reduce using rule 65 (expression -> expression / expression .)
    MAYOR_IGUAL_QUE reduce using rule 65 (expression -> expression / expression .)
    MENOR_IGUAL_QUE reduce using rule 65 (expression -> expression / expression .)
    RPARENTESIS     reduce using rule 65 (expression -> expression / expression .)
    LPARENTESIS     reduce using rule 65 (expression -> expression / expression .)
    NEW             reduce using rule 65 (expression -> expression / expression .)
    VALUES          reduce using rule 65 (expression -> expression / expression .)
    ALTER           reduce using rule 65 (expression -> expression / expression .)
    ALTERB          reduce using rule 65 (expression -> expression / expression .)
    ISTRUE          reduce using rule 65 (expression -> expression / expression .)
    REPEAT          reduce using rule 65 (expression -> expression / expression .)
    UNTIL           reduce using rule 65 (expression -> expression / expression .)
    WHILE           reduce using rule 65 (expression -> expression / expression .)
    CASE            reduce using rule 65 (expression -> expression / expression .)
    PRINTVALUES     reduce using rule 65 (expression -> expression / expression .)
    SIGNAL          reduce using rule 65 (expression -> expression / expression .)
    VIEWSIGNAL      reduce using rule 65 (expression -> expression / expression .)
    VARIABLE        reduce using rule 65 (expression -> expression / expression .)
    NUMERO          reduce using rule 65 (expression -> expression / expression .)
    TRUE            reduce using rule 65 (expression -> expression / expression .)
    FALSE           reduce using rule 65 (expression -> expression / expression .)
    BREAK           reduce using rule 65 (expression -> expression / expression .)
    WHEN            reduce using rule 65 (expression -> expression / expression .)
    ELSE            reduce using rule 65 (expression -> expression / expression .)
    PUNTO_COMA      reduce using rule 65 (expression -> expression / expression .)
    +               shift and go to state 68
    -               shift and go to state 69
    *               shift and go to state 70
    /               shift and go to state 71

  ! +               [ reduce using rule 65 (expression -> expression / expression .) ]
  ! -               [ reduce using rule 65 (expression -> expression / expression .) ]
  ! *               [ reduce using rule 65 (expression -> expression / expression .) ]
  ! /               [ reduce using rule 65 (expression -> expression / expression .) ]


state 102

    (35) istrue_statement -> ISTRUE LPARENTESIS VARIABLE . RPARENTESIS PUNTO_COMA

    RPARENTESIS     shift and go to state 124


state 103

    (36) repeat_statement -> REPEAT LPARENTESIS list_statement . break_statement RPARENTESIS PUNTO_COMA
    (37) break_statement -> . BREAK PUNTO_COMA

    BREAK           shift and go to state 126

    break_statement                shift and go to state 125

state 104

    (38) until_statement -> UNTIL list_statement condition . PUNTO_COMA

    PUNTO_COMA      shift and go to state 127


state 105

    (45) while_statement -> WHILE expression LPARENTESIS . list_statement RPARENTESIS PUNTO_COMA
    (14) list_statement -> . statement list_statement
    (15) list_statement -> . empty
    (16) statement -> . new_variable_statement
    (17) statement -> . values_statement
    (18) statement -> . alter_statement
    (19) statement -> . alterb_statement
    (20) statement -> . condition_statement
    (21) statement -> . istrue_statement
    (22) statement -> . repeat_statement
    (23) statement -> . until_statement
    (24) statement -> . while_statement
    (25) statement -> . case_statement
    (26) statement -> . printvalues_statement
    (27) statement -> . signal_statement
    (28) statement -> . viewsignal_statement
    (69) empty -> .
    (29) new_variable_statement -> . NEW VARIABLE COMA LPARENTESIS DATATYPE COMA value RPARENTESIS PUNTO_COMA
    (30) values_statement -> . VALUES LPARENTESIS VARIABLE COMA value RPARENTESIS PUNTO_COMA
    (31) values_statement -> . VALUES LPARENTESIS VARIABLE COMA alter_statement RPARENTESIS PUNTO_COMA
    (32) alter_statement -> . ALTER LPARENTESIS VARIABLE COMA operador COMA value RPARENTESIS PUNTO_COMA
    (33) alterb_statement -> . ALTERB LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA
    (34) condition_statement -> . expression condition expression
    (35) istrue_statement -> . ISTRUE LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA
    (36) repeat_statement -> . REPEAT LPARENTESIS list_statement break_statement RPARENTESIS PUNTO_COMA
    (38) until_statement -> . UNTIL list_statement condition PUNTO_COMA
    (45) while_statement -> . WHILE expression LPARENTESIS list_statement RPARENTESIS PUNTO_COMA
    (46) while_statement -> . WHILE condition_statement LPARENTESIS list_statement RPARENTESIS PUNTO_COMA
    (47) while_statement -> . WHILE istrue LPARENTESIS list_statement RPARENTESIS PUNTO_COMA
    (50) case_statement -> . CASE VARIABLE case_when_statements else_statement PUNTO_COMA
    (56) printvalues_statement -> . PRINTVALUES LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA
    (57) signal_statement -> . SIGNAL LPARENTESIS VARIABLE COMA value RPARENTESIS PUNTO_COMA
    (58) viewsignal_statement -> . VIEWSIGNAL LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA
    (59) expression -> . value
    (60) expression -> . VARIABLE
    (61) expression -> . LPARENTESIS expression RPARENTESIS
    (62) expression -> . expression + expression
    (63) expression -> . expression - expression
    (64) expression -> . expression * expression
    (65) expression -> . expression / expression
    (67) value -> . NUMERO
    (68) value -> . bool
    (48) bool -> . TRUE
    (49) bool -> . FALSE

    RPARENTESIS     reduce using rule 69 (empty -> .)
    NEW             shift and go to state 39
    VALUES          shift and go to state 42
    ALTER           shift and go to state 43
    ALTERB          shift and go to state 44
    ISTRUE          shift and go to state 46
    REPEAT          shift and go to state 47
    UNTIL           shift and go to state 48
    WHILE           shift and go to state 49
    CASE            shift and go to state 50
    PRINTVALUES     shift and go to state 51
    SIGNAL          shift and go to state 52
    VIEWSIGNAL      shift and go to state 53
    VARIABLE        shift and go to state 40
    LPARENTESIS     shift and go to state 22
    NUMERO          shift and go to state 54
    TRUE            shift and go to state 56
    FALSE           shift and go to state 57

    expression                     shift and go to state 45
    list_statement                 shift and go to state 128
    statement                      shift and go to state 24
    empty                          shift and go to state 25
    new_variable_statement         shift and go to state 26
    values_statement               shift and go to state 27
    alter_statement                shift and go to state 28
    alterb_statement               shift and go to state 29
    condition_statement            shift and go to state 30
    istrue_statement               shift and go to state 31
    repeat_statement               shift and go to state 32
    until_statement                shift and go to state 33
    while_statement                shift and go to state 34
    case_statement                 shift and go to state 35
    printvalues_statement          shift and go to state 36
    signal_statement               shift and go to state 37
    viewsignal_statement           shift and go to state 38
    value                          shift and go to state 41
    bool                           shift and go to state 55

state 106

    (46) while_statement -> WHILE condition_statement LPARENTESIS . list_statement RPARENTESIS PUNTO_COMA
    (14) list_statement -> . statement list_statement
    (15) list_statement -> . empty
    (16) statement -> . new_variable_statement
    (17) statement -> . values_statement
    (18) statement -> . alter_statement
    (19) statement -> . alterb_statement
    (20) statement -> . condition_statement
    (21) statement -> . istrue_statement
    (22) statement -> . repeat_statement
    (23) statement -> . until_statement
    (24) statement -> . while_statement
    (25) statement -> . case_statement
    (26) statement -> . printvalues_statement
    (27) statement -> . signal_statement
    (28) statement -> . viewsignal_statement
    (69) empty -> .
    (29) new_variable_statement -> . NEW VARIABLE COMA LPARENTESIS DATATYPE COMA value RPARENTESIS PUNTO_COMA
    (30) values_statement -> . VALUES LPARENTESIS VARIABLE COMA value RPARENTESIS PUNTO_COMA
    (31) values_statement -> . VALUES LPARENTESIS VARIABLE COMA alter_statement RPARENTESIS PUNTO_COMA
    (32) alter_statement -> . ALTER LPARENTESIS VARIABLE COMA operador COMA value RPARENTESIS PUNTO_COMA
    (33) alterb_statement -> . ALTERB LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA
    (34) condition_statement -> . expression condition expression
    (35) istrue_statement -> . ISTRUE LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA
    (36) repeat_statement -> . REPEAT LPARENTESIS list_statement break_statement RPARENTESIS PUNTO_COMA
    (38) until_statement -> . UNTIL list_statement condition PUNTO_COMA
    (45) while_statement -> . WHILE expression LPARENTESIS list_statement RPARENTESIS PUNTO_COMA
    (46) while_statement -> . WHILE condition_statement LPARENTESIS list_statement RPARENTESIS PUNTO_COMA
    (47) while_statement -> . WHILE istrue LPARENTESIS list_statement RPARENTESIS PUNTO_COMA
    (50) case_statement -> . CASE VARIABLE case_when_statements else_statement PUNTO_COMA
    (56) printvalues_statement -> . PRINTVALUES LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA
    (57) signal_statement -> . SIGNAL LPARENTESIS VARIABLE COMA value RPARENTESIS PUNTO_COMA
    (58) viewsignal_statement -> . VIEWSIGNAL LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA
    (59) expression -> . value
    (60) expression -> . VARIABLE
    (61) expression -> . LPARENTESIS expression RPARENTESIS
    (62) expression -> . expression + expression
    (63) expression -> . expression - expression
    (64) expression -> . expression * expression
    (65) expression -> . expression / expression
    (67) value -> . NUMERO
    (68) value -> . bool
    (48) bool -> . TRUE
    (49) bool -> . FALSE

    RPARENTESIS     reduce using rule 69 (empty -> .)
    NEW             shift and go to state 39
    VALUES          shift and go to state 42
    ALTER           shift and go to state 43
    ALTERB          shift and go to state 44
    ISTRUE          shift and go to state 46
    REPEAT          shift and go to state 47
    UNTIL           shift and go to state 48
    WHILE           shift and go to state 49
    CASE            shift and go to state 50
    PRINTVALUES     shift and go to state 51
    SIGNAL          shift and go to state 52
    VIEWSIGNAL      shift and go to state 53
    VARIABLE        shift and go to state 40
    LPARENTESIS     shift and go to state 22
    NUMERO          shift and go to state 54
    TRUE            shift and go to state 56
    FALSE           shift and go to state 57

    condition_statement            shift and go to state 30
    list_statement                 shift and go to state 129
    statement                      shift and go to state 24
    empty                          shift and go to state 25
    new_variable_statement         shift and go to state 26
    values_statement               shift and go to state 27
    alter_statement                shift and go to state 28
    alterb_statement               shift and go to state 29
    istrue_statement               shift and go to state 31
    repeat_statement               shift and go to state 32
    until_statement                shift and go to state 33
    while_statement                shift and go to state 34
    case_statement                 shift and go to state 35
    printvalues_statement          shift and go to state 36
    signal_statement               shift and go to state 37
    viewsignal_statement           shift and go to state 38
    value                          shift and go to state 41
    expression                     shift and go to state 45
    bool                           shift and go to state 55

state 107

    (47) while_statement -> WHILE istrue LPARENTESIS . list_statement RPARENTESIS PUNTO_COMA
    (14) list_statement -> . statement list_statement
    (15) list_statement -> . empty
    (16) statement -> . new_variable_statement
    (17) statement -> . values_statement
    (18) statement -> . alter_statement
    (19) statement -> . alterb_statement
    (20) statement -> . condition_statement
    (21) statement -> . istrue_statement
    (22) statement -> . repeat_statement
    (23) statement -> . until_statement
    (24) statement -> . while_statement
    (25) statement -> . case_statement
    (26) statement -> . printvalues_statement
    (27) statement -> . signal_statement
    (28) statement -> . viewsignal_statement
    (69) empty -> .
    (29) new_variable_statement -> . NEW VARIABLE COMA LPARENTESIS DATATYPE COMA value RPARENTESIS PUNTO_COMA
    (30) values_statement -> . VALUES LPARENTESIS VARIABLE COMA value RPARENTESIS PUNTO_COMA
    (31) values_statement -> . VALUES LPARENTESIS VARIABLE COMA alter_statement RPARENTESIS PUNTO_COMA
    (32) alter_statement -> . ALTER LPARENTESIS VARIABLE COMA operador COMA value RPARENTESIS PUNTO_COMA
    (33) alterb_statement -> . ALTERB LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA
    (34) condition_statement -> . expression condition expression
    (35) istrue_statement -> . ISTRUE LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA
    (36) repeat_statement -> . REPEAT LPARENTESIS list_statement break_statement RPARENTESIS PUNTO_COMA
    (38) until_statement -> . UNTIL list_statement condition PUNTO_COMA
    (45) while_statement -> . WHILE expression LPARENTESIS list_statement RPARENTESIS PUNTO_COMA
    (46) while_statement -> . WHILE condition_statement LPARENTESIS list_statement RPARENTESIS PUNTO_COMA
    (47) while_statement -> . WHILE istrue LPARENTESIS list_statement RPARENTESIS PUNTO_COMA
    (50) case_statement -> . CASE VARIABLE case_when_statements else_statement PUNTO_COMA
    (56) printvalues_statement -> . PRINTVALUES LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA
    (57) signal_statement -> . SIGNAL LPARENTESIS VARIABLE COMA value RPARENTESIS PUNTO_COMA
    (58) viewsignal_statement -> . VIEWSIGNAL LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA
    (59) expression -> . value
    (60) expression -> . VARIABLE
    (61) expression -> . LPARENTESIS expression RPARENTESIS
    (62) expression -> . expression + expression
    (63) expression -> . expression - expression
    (64) expression -> . expression * expression
    (65) expression -> . expression / expression
    (67) value -> . NUMERO
    (68) value -> . bool
    (48) bool -> . TRUE
    (49) bool -> . FALSE

    RPARENTESIS     reduce using rule 69 (empty -> .)
    NEW             shift and go to state 39
    VALUES          shift and go to state 42
    ALTER           shift and go to state 43
    ALTERB          shift and go to state 44
    ISTRUE          shift and go to state 46
    REPEAT          shift and go to state 47
    UNTIL           shift and go to state 48
    WHILE           shift and go to state 49
    CASE            shift and go to state 50
    PRINTVALUES     shift and go to state 51
    SIGNAL          shift and go to state 52
    VIEWSIGNAL      shift and go to state 53
    VARIABLE        shift and go to state 40
    LPARENTESIS     shift and go to state 22
    NUMERO          shift and go to state 54
    TRUE            shift and go to state 56
    FALSE           shift and go to state 57

    list_statement                 shift and go to state 130
    statement                      shift and go to state 24
    empty                          shift and go to state 25
    new_variable_statement         shift and go to state 26
    values_statement               shift and go to state 27
    alter_statement                shift and go to state 28
    alterb_statement               shift and go to state 29
    condition_statement            shift and go to state 30
    istrue_statement               shift and go to state 31
    repeat_statement               shift and go to state 32
    until_statement                shift and go to state 33
    while_statement                shift and go to state 34
    case_statement                 shift and go to state 35
    printvalues_statement          shift and go to state 36
    signal_statement               shift and go to state 37
    viewsignal_statement           shift and go to state 38
    value                          shift and go to state 41
    expression                     shift and go to state 45
    bool                           shift and go to state 55

state 108

    (66) istrue -> ISTRUE LPARENTESIS . VARIABLE RPARENTESIS

    VARIABLE        shift and go to state 131


state 109

    (50) case_statement -> CASE VARIABLE case_when_statements . else_statement PUNTO_COMA
    (54) else_statement -> . ELSE code_block
    (55) else_statement -> . empty
    (69) empty -> .

    ELSE            shift and go to state 133
    PUNTO_COMA      reduce using rule 69 (empty -> .)

    else_statement                 shift and go to state 132
    empty                          shift and go to state 134

state 110

    (51) case_when_statements -> case_when_statement . case_when_statements
    (51) case_when_statements -> . case_when_statement case_when_statements
    (52) case_when_statements -> . empty
    (53) case_when_statement -> . WHEN value THEN list_statement
    (69) empty -> .

    WHEN            shift and go to state 112
    ELSE            reduce using rule 69 (empty -> .)
    PUNTO_COMA      reduce using rule 69 (empty -> .)

    case_when_statement            shift and go to state 110
    case_when_statements           shift and go to state 135
    empty                          shift and go to state 111

state 111

    (52) case_when_statements -> empty .

    ELSE            reduce using rule 52 (case_when_statements -> empty .)
    PUNTO_COMA      reduce using rule 52 (case_when_statements -> empty .)


state 112

    (53) case_when_statement -> WHEN . value THEN list_statement
    (67) value -> . NUMERO
    (68) value -> . bool
    (48) bool -> . TRUE
    (49) bool -> . FALSE

    NUMERO          shift and go to state 54
    TRUE            shift and go to state 56
    FALSE           shift and go to state 57

    value                          shift and go to state 136
    bool                           shift and go to state 55

state 113

    (56) printvalues_statement -> PRINTVALUES LPARENTESIS VARIABLE . RPARENTESIS PUNTO_COMA

    RPARENTESIS     shift and go to state 137


state 114

    (57) signal_statement -> SIGNAL LPARENTESIS VARIABLE . COMA value RPARENTESIS PUNTO_COMA

    COMA            shift and go to state 138


state 115

    (58) viewsignal_statement -> VIEWSIGNAL LPARENTESIS VARIABLE . RPARENTESIS PUNTO_COMA

    RPARENTESIS     shift and go to state 139


state 116

    (6) code_block -> group_proc proc MASTER LPARENTESIS comentario list_statement RPARENTESIS . PUNTO_COMA group_proc

    PUNTO_COMA      shift and go to state 140


state 117

    (8) group_proc -> PROC VARIABLE LPARENTESIS COMENTARIO list_statement RPARENTESIS PUNTO_COMA . group_proc
    (8) group_proc -> . PROC VARIABLE LPARENTESIS COMENTARIO list_statement RPARENTESIS PUNTO_COMA group_proc
    (9) group_proc -> . empty
    (69) empty -> .

  ! shift/reduce conflict for PROC resolved as shift
    PROC            shift and go to state 119
    $end            reduce using rule 69 (empty -> .)
    PUNTO_COMA      reduce using rule 69 (empty -> .)

  ! PROC            [ reduce using rule 69 (empty -> .) ]

    group_proc                     shift and go to state 141
    empty                          shift and go to state 10

state 118

    (5) code_block -> proc MASTER LPARENTESIS comentario list_statement RPARENTESIS PUNTO_COMA group_proc .

    $end            reduce using rule 5 (code_block -> proc MASTER LPARENTESIS comentario list_statement RPARENTESIS PUNTO_COMA group_proc .)
    PUNTO_COMA      reduce using rule 5 (code_block -> proc MASTER LPARENTESIS comentario list_statement RPARENTESIS PUNTO_COMA group_proc .)


state 119

    (8) group_proc -> PROC . VARIABLE LPARENTESIS COMENTARIO list_statement RPARENTESIS PUNTO_COMA group_proc

    VARIABLE        shift and go to state 15


state 120

    (29) new_variable_statement -> NEW VARIABLE COMA LPARENTESIS . DATATYPE COMA value RPARENTESIS PUNTO_COMA

    DATATYPE        shift and go to state 142


state 121

    (30) values_statement -> VALUES LPARENTESIS VARIABLE COMA . value RPARENTESIS PUNTO_COMA
    (31) values_statement -> VALUES LPARENTESIS VARIABLE COMA . alter_statement RPARENTESIS PUNTO_COMA
    (67) value -> . NUMERO
    (68) value -> . bool
    (32) alter_statement -> . ALTER LPARENTESIS VARIABLE COMA operador COMA value RPARENTESIS PUNTO_COMA
    (48) bool -> . TRUE
    (49) bool -> . FALSE

    NUMERO          shift and go to state 54
    ALTER           shift and go to state 43
    TRUE            shift and go to state 56
    FALSE           shift and go to state 57

    value                          shift and go to state 143
    alter_statement                shift and go to state 144
    bool                           shift and go to state 55

state 122

    (32) alter_statement -> ALTER LPARENTESIS VARIABLE COMA . operador COMA value RPARENTESIS PUNTO_COMA
    (10) operador -> . ADD
    (11) operador -> . SUB
    (12) operador -> . MUL
    (13) operador -> . DIV

    ADD             shift and go to state 146
    SUB             shift and go to state 147
    MUL             shift and go to state 148
    DIV             shift and go to state 149

    operador                       shift and go to state 145

state 123

    (33) alterb_statement -> ALTERB LPARENTESIS VARIABLE RPARENTESIS . PUNTO_COMA

    PUNTO_COMA      shift and go to state 150


state 124

    (35) istrue_statement -> ISTRUE LPARENTESIS VARIABLE RPARENTESIS . PUNTO_COMA

    PUNTO_COMA      shift and go to state 151


state 125

    (36) repeat_statement -> REPEAT LPARENTESIS list_statement break_statement . RPARENTESIS PUNTO_COMA

    RPARENTESIS     shift and go to state 152


state 126

    (37) break_statement -> BREAK . PUNTO_COMA

    PUNTO_COMA      shift and go to state 153


state 127

    (38) until_statement -> UNTIL list_statement condition PUNTO_COMA .

    NEW             reduce using rule 38 (until_statement -> UNTIL list_statement condition PUNTO_COMA .)
    VALUES          reduce using rule 38 (until_statement -> UNTIL list_statement condition PUNTO_COMA .)
    ALTER           reduce using rule 38 (until_statement -> UNTIL list_statement condition PUNTO_COMA .)
    ALTERB          reduce using rule 38 (until_statement -> UNTIL list_statement condition PUNTO_COMA .)
    ISTRUE          reduce using rule 38 (until_statement -> UNTIL list_statement condition PUNTO_COMA .)
    REPEAT          reduce using rule 38 (until_statement -> UNTIL list_statement condition PUNTO_COMA .)
    UNTIL           reduce using rule 38 (until_statement -> UNTIL list_statement condition PUNTO_COMA .)
    WHILE           reduce using rule 38 (until_statement -> UNTIL list_statement condition PUNTO_COMA .)
    CASE            reduce using rule 38 (until_statement -> UNTIL list_statement condition PUNTO_COMA .)
    PRINTVALUES     reduce using rule 38 (until_statement -> UNTIL list_statement condition PUNTO_COMA .)
    SIGNAL          reduce using rule 38 (until_statement -> UNTIL list_statement condition PUNTO_COMA .)
    VIEWSIGNAL      reduce using rule 38 (until_statement -> UNTIL list_statement condition PUNTO_COMA .)
    VARIABLE        reduce using rule 38 (until_statement -> UNTIL list_statement condition PUNTO_COMA .)
    LPARENTESIS     reduce using rule 38 (until_statement -> UNTIL list_statement condition PUNTO_COMA .)
    NUMERO          reduce using rule 38 (until_statement -> UNTIL list_statement condition PUNTO_COMA .)
    TRUE            reduce using rule 38 (until_statement -> UNTIL list_statement condition PUNTO_COMA .)
    FALSE           reduce using rule 38 (until_statement -> UNTIL list_statement condition PUNTO_COMA .)
    RPARENTESIS     reduce using rule 38 (until_statement -> UNTIL list_statement condition PUNTO_COMA .)
    MAYOR_QUE       reduce using rule 38 (until_statement -> UNTIL list_statement condition PUNTO_COMA .)
    MENOR_QUE       reduce using rule 38 (until_statement -> UNTIL list_statement condition PUNTO_COMA .)
    IGUAL           reduce using rule 38 (until_statement -> UNTIL list_statement condition PUNTO_COMA .)
    DISTINTO_QUE    reduce using rule 38 (until_statement -> UNTIL list_statement condition PUNTO_COMA .)
    MAYOR_IGUAL_QUE reduce using rule 38 (until_statement -> UNTIL list_statement condition PUNTO_COMA .)
    MENOR_IGUAL_QUE reduce using rule 38 (until_statement -> UNTIL list_statement condition PUNTO_COMA .)
    BREAK           reduce using rule 38 (until_statement -> UNTIL list_statement condition PUNTO_COMA .)
    WHEN            reduce using rule 38 (until_statement -> UNTIL list_statement condition PUNTO_COMA .)
    ELSE            reduce using rule 38 (until_statement -> UNTIL list_statement condition PUNTO_COMA .)
    PUNTO_COMA      reduce using rule 38 (until_statement -> UNTIL list_statement condition PUNTO_COMA .)


state 128

    (45) while_statement -> WHILE expression LPARENTESIS list_statement . RPARENTESIS PUNTO_COMA

    RPARENTESIS     shift and go to state 154


state 129

    (46) while_statement -> WHILE condition_statement LPARENTESIS list_statement . RPARENTESIS PUNTO_COMA

    RPARENTESIS     shift and go to state 155


state 130

    (47) while_statement -> WHILE istrue LPARENTESIS list_statement . RPARENTESIS PUNTO_COMA

    RPARENTESIS     shift and go to state 156


state 131

    (66) istrue -> ISTRUE LPARENTESIS VARIABLE . RPARENTESIS

    RPARENTESIS     shift and go to state 157


state 132

    (50) case_statement -> CASE VARIABLE case_when_statements else_statement . PUNTO_COMA

    PUNTO_COMA      shift and go to state 158


state 133

    (54) else_statement -> ELSE . code_block
    (5) code_block -> . proc MASTER LPARENTESIS comentario list_statement RPARENTESIS PUNTO_COMA group_proc
    (6) code_block -> . group_proc proc MASTER LPARENTESIS comentario list_statement RPARENTESIS PUNTO_COMA group_proc
    (7) proc -> . PROC
    (8) group_proc -> . PROC VARIABLE LPARENTESIS COMENTARIO list_statement RPARENTESIS PUNTO_COMA group_proc
    (9) group_proc -> . empty
    (69) empty -> .

  ! shift/reduce conflict for PROC resolved as shift
    PROC            shift and go to state 9

  ! PROC            [ reduce using rule 69 (empty -> .) ]

    code_block                     shift and go to state 159
    proc                           shift and go to state 7
    group_proc                     shift and go to state 8
    empty                          shift and go to state 10

state 134

    (55) else_statement -> empty .

    PUNTO_COMA      reduce using rule 55 (else_statement -> empty .)


state 135

    (51) case_when_statements -> case_when_statement case_when_statements .

    ELSE            reduce using rule 51 (case_when_statements -> case_when_statement case_when_statements .)
    PUNTO_COMA      reduce using rule 51 (case_when_statements -> case_when_statement case_when_statements .)


state 136

    (53) case_when_statement -> WHEN value . THEN list_statement

    THEN            shift and go to state 160


state 137

    (56) printvalues_statement -> PRINTVALUES LPARENTESIS VARIABLE RPARENTESIS . PUNTO_COMA

    PUNTO_COMA      shift and go to state 161


state 138

    (57) signal_statement -> SIGNAL LPARENTESIS VARIABLE COMA . value RPARENTESIS PUNTO_COMA
    (67) value -> . NUMERO
    (68) value -> . bool
    (48) bool -> . TRUE
    (49) bool -> . FALSE

    NUMERO          shift and go to state 54
    TRUE            shift and go to state 56
    FALSE           shift and go to state 57

    value                          shift and go to state 162
    bool                           shift and go to state 55

state 139

    (58) viewsignal_statement -> VIEWSIGNAL LPARENTESIS VARIABLE RPARENTESIS . PUNTO_COMA

    PUNTO_COMA      shift and go to state 163


state 140

    (6) code_block -> group_proc proc MASTER LPARENTESIS comentario list_statement RPARENTESIS PUNTO_COMA . group_proc
    (8) group_proc -> . PROC VARIABLE LPARENTESIS COMENTARIO list_statement RPARENTESIS PUNTO_COMA group_proc
    (9) group_proc -> . empty
    (69) empty -> .

    PROC            shift and go to state 119
    $end            reduce using rule 69 (empty -> .)
    PUNTO_COMA      reduce using rule 69 (empty -> .)

    group_proc                     shift and go to state 164
    empty                          shift and go to state 10

state 141

    (8) group_proc -> PROC VARIABLE LPARENTESIS COMENTARIO list_statement RPARENTESIS PUNTO_COMA group_proc .

    PROC            reduce using rule 8 (group_proc -> PROC VARIABLE LPARENTESIS COMENTARIO list_statement RPARENTESIS PUNTO_COMA group_proc .)
    $end            reduce using rule 8 (group_proc -> PROC VARIABLE LPARENTESIS COMENTARIO list_statement RPARENTESIS PUNTO_COMA group_proc .)
    PUNTO_COMA      reduce using rule 8 (group_proc -> PROC VARIABLE LPARENTESIS COMENTARIO list_statement RPARENTESIS PUNTO_COMA group_proc .)


state 142

    (29) new_variable_statement -> NEW VARIABLE COMA LPARENTESIS DATATYPE . COMA value RPARENTESIS PUNTO_COMA

    COMA            shift and go to state 165


state 143

    (30) values_statement -> VALUES LPARENTESIS VARIABLE COMA value . RPARENTESIS PUNTO_COMA

    RPARENTESIS     shift and go to state 166


state 144

    (31) values_statement -> VALUES LPARENTESIS VARIABLE COMA alter_statement . RPARENTESIS PUNTO_COMA

    RPARENTESIS     shift and go to state 167


state 145

    (32) alter_statement -> ALTER LPARENTESIS VARIABLE COMA operador . COMA value RPARENTESIS PUNTO_COMA

    COMA            shift and go to state 168


state 146

    (10) operador -> ADD .

    COMA            reduce using rule 10 (operador -> ADD .)


state 147

    (11) operador -> SUB .

    COMA            reduce using rule 11 (operador -> SUB .)


state 148

    (12) operador -> MUL .

    COMA            reduce using rule 12 (operador -> MUL .)


state 149

    (13) operador -> DIV .

    COMA            reduce using rule 13 (operador -> DIV .)


state 150

    (33) alterb_statement -> ALTERB LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .

    NEW             reduce using rule 33 (alterb_statement -> ALTERB LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    VALUES          reduce using rule 33 (alterb_statement -> ALTERB LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    ALTER           reduce using rule 33 (alterb_statement -> ALTERB LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    ALTERB          reduce using rule 33 (alterb_statement -> ALTERB LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    ISTRUE          reduce using rule 33 (alterb_statement -> ALTERB LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    REPEAT          reduce using rule 33 (alterb_statement -> ALTERB LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    UNTIL           reduce using rule 33 (alterb_statement -> ALTERB LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    WHILE           reduce using rule 33 (alterb_statement -> ALTERB LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    CASE            reduce using rule 33 (alterb_statement -> ALTERB LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    PRINTVALUES     reduce using rule 33 (alterb_statement -> ALTERB LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    SIGNAL          reduce using rule 33 (alterb_statement -> ALTERB LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    VIEWSIGNAL      reduce using rule 33 (alterb_statement -> ALTERB LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    VARIABLE        reduce using rule 33 (alterb_statement -> ALTERB LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    LPARENTESIS     reduce using rule 33 (alterb_statement -> ALTERB LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    NUMERO          reduce using rule 33 (alterb_statement -> ALTERB LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    TRUE            reduce using rule 33 (alterb_statement -> ALTERB LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    FALSE           reduce using rule 33 (alterb_statement -> ALTERB LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    RPARENTESIS     reduce using rule 33 (alterb_statement -> ALTERB LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    MAYOR_QUE       reduce using rule 33 (alterb_statement -> ALTERB LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    MENOR_QUE       reduce using rule 33 (alterb_statement -> ALTERB LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    IGUAL           reduce using rule 33 (alterb_statement -> ALTERB LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    DISTINTO_QUE    reduce using rule 33 (alterb_statement -> ALTERB LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    MAYOR_IGUAL_QUE reduce using rule 33 (alterb_statement -> ALTERB LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    MENOR_IGUAL_QUE reduce using rule 33 (alterb_statement -> ALTERB LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    BREAK           reduce using rule 33 (alterb_statement -> ALTERB LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    WHEN            reduce using rule 33 (alterb_statement -> ALTERB LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    ELSE            reduce using rule 33 (alterb_statement -> ALTERB LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    PUNTO_COMA      reduce using rule 33 (alterb_statement -> ALTERB LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)


state 151

    (35) istrue_statement -> ISTRUE LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .

    NEW             reduce using rule 35 (istrue_statement -> ISTRUE LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    VALUES          reduce using rule 35 (istrue_statement -> ISTRUE LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    ALTER           reduce using rule 35 (istrue_statement -> ISTRUE LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    ALTERB          reduce using rule 35 (istrue_statement -> ISTRUE LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    ISTRUE          reduce using rule 35 (istrue_statement -> ISTRUE LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    REPEAT          reduce using rule 35 (istrue_statement -> ISTRUE LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    UNTIL           reduce using rule 35 (istrue_statement -> ISTRUE LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    WHILE           reduce using rule 35 (istrue_statement -> ISTRUE LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    CASE            reduce using rule 35 (istrue_statement -> ISTRUE LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    PRINTVALUES     reduce using rule 35 (istrue_statement -> ISTRUE LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    SIGNAL          reduce using rule 35 (istrue_statement -> ISTRUE LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    VIEWSIGNAL      reduce using rule 35 (istrue_statement -> ISTRUE LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    VARIABLE        reduce using rule 35 (istrue_statement -> ISTRUE LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    LPARENTESIS     reduce using rule 35 (istrue_statement -> ISTRUE LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    NUMERO          reduce using rule 35 (istrue_statement -> ISTRUE LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    TRUE            reduce using rule 35 (istrue_statement -> ISTRUE LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    FALSE           reduce using rule 35 (istrue_statement -> ISTRUE LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    RPARENTESIS     reduce using rule 35 (istrue_statement -> ISTRUE LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    MAYOR_QUE       reduce using rule 35 (istrue_statement -> ISTRUE LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    MENOR_QUE       reduce using rule 35 (istrue_statement -> ISTRUE LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    IGUAL           reduce using rule 35 (istrue_statement -> ISTRUE LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    DISTINTO_QUE    reduce using rule 35 (istrue_statement -> ISTRUE LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    MAYOR_IGUAL_QUE reduce using rule 35 (istrue_statement -> ISTRUE LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    MENOR_IGUAL_QUE reduce using rule 35 (istrue_statement -> ISTRUE LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    BREAK           reduce using rule 35 (istrue_statement -> ISTRUE LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    WHEN            reduce using rule 35 (istrue_statement -> ISTRUE LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    ELSE            reduce using rule 35 (istrue_statement -> ISTRUE LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    PUNTO_COMA      reduce using rule 35 (istrue_statement -> ISTRUE LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)


state 152

    (36) repeat_statement -> REPEAT LPARENTESIS list_statement break_statement RPARENTESIS . PUNTO_COMA

    PUNTO_COMA      shift and go to state 169


state 153

    (37) break_statement -> BREAK PUNTO_COMA .

    RPARENTESIS     reduce using rule 37 (break_statement -> BREAK PUNTO_COMA .)


state 154

    (45) while_statement -> WHILE expression LPARENTESIS list_statement RPARENTESIS . PUNTO_COMA

    PUNTO_COMA      shift and go to state 170


state 155

    (46) while_statement -> WHILE condition_statement LPARENTESIS list_statement RPARENTESIS . PUNTO_COMA

    PUNTO_COMA      shift and go to state 171


state 156

    (47) while_statement -> WHILE istrue LPARENTESIS list_statement RPARENTESIS . PUNTO_COMA

    PUNTO_COMA      shift and go to state 172


state 157

    (66) istrue -> ISTRUE LPARENTESIS VARIABLE RPARENTESIS .

    LPARENTESIS     reduce using rule 66 (istrue -> ISTRUE LPARENTESIS VARIABLE RPARENTESIS .)


state 158

    (50) case_statement -> CASE VARIABLE case_when_statements else_statement PUNTO_COMA .

    NEW             reduce using rule 50 (case_statement -> CASE VARIABLE case_when_statements else_statement PUNTO_COMA .)
    VALUES          reduce using rule 50 (case_statement -> CASE VARIABLE case_when_statements else_statement PUNTO_COMA .)
    ALTER           reduce using rule 50 (case_statement -> CASE VARIABLE case_when_statements else_statement PUNTO_COMA .)
    ALTERB          reduce using rule 50 (case_statement -> CASE VARIABLE case_when_statements else_statement PUNTO_COMA .)
    ISTRUE          reduce using rule 50 (case_statement -> CASE VARIABLE case_when_statements else_statement PUNTO_COMA .)
    REPEAT          reduce using rule 50 (case_statement -> CASE VARIABLE case_when_statements else_statement PUNTO_COMA .)
    UNTIL           reduce using rule 50 (case_statement -> CASE VARIABLE case_when_statements else_statement PUNTO_COMA .)
    WHILE           reduce using rule 50 (case_statement -> CASE VARIABLE case_when_statements else_statement PUNTO_COMA .)
    CASE            reduce using rule 50 (case_statement -> CASE VARIABLE case_when_statements else_statement PUNTO_COMA .)
    PRINTVALUES     reduce using rule 50 (case_statement -> CASE VARIABLE case_when_statements else_statement PUNTO_COMA .)
    SIGNAL          reduce using rule 50 (case_statement -> CASE VARIABLE case_when_statements else_statement PUNTO_COMA .)
    VIEWSIGNAL      reduce using rule 50 (case_statement -> CASE VARIABLE case_when_statements else_statement PUNTO_COMA .)
    VARIABLE        reduce using rule 50 (case_statement -> CASE VARIABLE case_when_statements else_statement PUNTO_COMA .)
    LPARENTESIS     reduce using rule 50 (case_statement -> CASE VARIABLE case_when_statements else_statement PUNTO_COMA .)
    NUMERO          reduce using rule 50 (case_statement -> CASE VARIABLE case_when_statements else_statement PUNTO_COMA .)
    TRUE            reduce using rule 50 (case_statement -> CASE VARIABLE case_when_statements else_statement PUNTO_COMA .)
    FALSE           reduce using rule 50 (case_statement -> CASE VARIABLE case_when_statements else_statement PUNTO_COMA .)
    RPARENTESIS     reduce using rule 50 (case_statement -> CASE VARIABLE case_when_statements else_statement PUNTO_COMA .)
    MAYOR_QUE       reduce using rule 50 (case_statement -> CASE VARIABLE case_when_statements else_statement PUNTO_COMA .)
    MENOR_QUE       reduce using rule 50 (case_statement -> CASE VARIABLE case_when_statements else_statement PUNTO_COMA .)
    IGUAL           reduce using rule 50 (case_statement -> CASE VARIABLE case_when_statements else_statement PUNTO_COMA .)
    DISTINTO_QUE    reduce using rule 50 (case_statement -> CASE VARIABLE case_when_statements else_statement PUNTO_COMA .)
    MAYOR_IGUAL_QUE reduce using rule 50 (case_statement -> CASE VARIABLE case_when_statements else_statement PUNTO_COMA .)
    MENOR_IGUAL_QUE reduce using rule 50 (case_statement -> CASE VARIABLE case_when_statements else_statement PUNTO_COMA .)
    BREAK           reduce using rule 50 (case_statement -> CASE VARIABLE case_when_statements else_statement PUNTO_COMA .)
    WHEN            reduce using rule 50 (case_statement -> CASE VARIABLE case_when_statements else_statement PUNTO_COMA .)
    ELSE            reduce using rule 50 (case_statement -> CASE VARIABLE case_when_statements else_statement PUNTO_COMA .)
    PUNTO_COMA      reduce using rule 50 (case_statement -> CASE VARIABLE case_when_statements else_statement PUNTO_COMA .)


state 159

    (54) else_statement -> ELSE code_block .

    PUNTO_COMA      reduce using rule 54 (else_statement -> ELSE code_block .)


state 160

    (53) case_when_statement -> WHEN value THEN . list_statement
    (14) list_statement -> . statement list_statement
    (15) list_statement -> . empty
    (16) statement -> . new_variable_statement
    (17) statement -> . values_statement
    (18) statement -> . alter_statement
    (19) statement -> . alterb_statement
    (20) statement -> . condition_statement
    (21) statement -> . istrue_statement
    (22) statement -> . repeat_statement
    (23) statement -> . until_statement
    (24) statement -> . while_statement
    (25) statement -> . case_statement
    (26) statement -> . printvalues_statement
    (27) statement -> . signal_statement
    (28) statement -> . viewsignal_statement
    (69) empty -> .
    (29) new_variable_statement -> . NEW VARIABLE COMA LPARENTESIS DATATYPE COMA value RPARENTESIS PUNTO_COMA
    (30) values_statement -> . VALUES LPARENTESIS VARIABLE COMA value RPARENTESIS PUNTO_COMA
    (31) values_statement -> . VALUES LPARENTESIS VARIABLE COMA alter_statement RPARENTESIS PUNTO_COMA
    (32) alter_statement -> . ALTER LPARENTESIS VARIABLE COMA operador COMA value RPARENTESIS PUNTO_COMA
    (33) alterb_statement -> . ALTERB LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA
    (34) condition_statement -> . expression condition expression
    (35) istrue_statement -> . ISTRUE LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA
    (36) repeat_statement -> . REPEAT LPARENTESIS list_statement break_statement RPARENTESIS PUNTO_COMA
    (38) until_statement -> . UNTIL list_statement condition PUNTO_COMA
    (45) while_statement -> . WHILE expression LPARENTESIS list_statement RPARENTESIS PUNTO_COMA
    (46) while_statement -> . WHILE condition_statement LPARENTESIS list_statement RPARENTESIS PUNTO_COMA
    (47) while_statement -> . WHILE istrue LPARENTESIS list_statement RPARENTESIS PUNTO_COMA
    (50) case_statement -> . CASE VARIABLE case_when_statements else_statement PUNTO_COMA
    (56) printvalues_statement -> . PRINTVALUES LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA
    (57) signal_statement -> . SIGNAL LPARENTESIS VARIABLE COMA value RPARENTESIS PUNTO_COMA
    (58) viewsignal_statement -> . VIEWSIGNAL LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA
    (59) expression -> . value
    (60) expression -> . VARIABLE
    (61) expression -> . LPARENTESIS expression RPARENTESIS
    (62) expression -> . expression + expression
    (63) expression -> . expression - expression
    (64) expression -> . expression * expression
    (65) expression -> . expression / expression
    (67) value -> . NUMERO
    (68) value -> . bool
    (48) bool -> . TRUE
    (49) bool -> . FALSE

    WHEN            reduce using rule 69 (empty -> .)
    ELSE            reduce using rule 69 (empty -> .)
    PUNTO_COMA      reduce using rule 69 (empty -> .)
    NEW             shift and go to state 39
    VALUES          shift and go to state 42
    ALTER           shift and go to state 43
    ALTERB          shift and go to state 44
    ISTRUE          shift and go to state 46
    REPEAT          shift and go to state 47
    UNTIL           shift and go to state 48
    WHILE           shift and go to state 49
    CASE            shift and go to state 50
    PRINTVALUES     shift and go to state 51
    SIGNAL          shift and go to state 52
    VIEWSIGNAL      shift and go to state 53
    VARIABLE        shift and go to state 40
    LPARENTESIS     shift and go to state 22
    NUMERO          shift and go to state 54
    TRUE            shift and go to state 56
    FALSE           shift and go to state 57

    value                          shift and go to state 41
    list_statement                 shift and go to state 173
    statement                      shift and go to state 24
    empty                          shift and go to state 25
    new_variable_statement         shift and go to state 26
    values_statement               shift and go to state 27
    alter_statement                shift and go to state 28
    alterb_statement               shift and go to state 29
    condition_statement            shift and go to state 30
    istrue_statement               shift and go to state 31
    repeat_statement               shift and go to state 32
    until_statement                shift and go to state 33
    while_statement                shift and go to state 34
    case_statement                 shift and go to state 35
    printvalues_statement          shift and go to state 36
    signal_statement               shift and go to state 37
    viewsignal_statement           shift and go to state 38
    expression                     shift and go to state 45
    bool                           shift and go to state 55

state 161

    (56) printvalues_statement -> PRINTVALUES LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .

    NEW             reduce using rule 56 (printvalues_statement -> PRINTVALUES LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    VALUES          reduce using rule 56 (printvalues_statement -> PRINTVALUES LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    ALTER           reduce using rule 56 (printvalues_statement -> PRINTVALUES LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    ALTERB          reduce using rule 56 (printvalues_statement -> PRINTVALUES LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    ISTRUE          reduce using rule 56 (printvalues_statement -> PRINTVALUES LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    REPEAT          reduce using rule 56 (printvalues_statement -> PRINTVALUES LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    UNTIL           reduce using rule 56 (printvalues_statement -> PRINTVALUES LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    WHILE           reduce using rule 56 (printvalues_statement -> PRINTVALUES LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    CASE            reduce using rule 56 (printvalues_statement -> PRINTVALUES LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    PRINTVALUES     reduce using rule 56 (printvalues_statement -> PRINTVALUES LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    SIGNAL          reduce using rule 56 (printvalues_statement -> PRINTVALUES LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    VIEWSIGNAL      reduce using rule 56 (printvalues_statement -> PRINTVALUES LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    VARIABLE        reduce using rule 56 (printvalues_statement -> PRINTVALUES LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    LPARENTESIS     reduce using rule 56 (printvalues_statement -> PRINTVALUES LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    NUMERO          reduce using rule 56 (printvalues_statement -> PRINTVALUES LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    TRUE            reduce using rule 56 (printvalues_statement -> PRINTVALUES LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    FALSE           reduce using rule 56 (printvalues_statement -> PRINTVALUES LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    RPARENTESIS     reduce using rule 56 (printvalues_statement -> PRINTVALUES LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    MAYOR_QUE       reduce using rule 56 (printvalues_statement -> PRINTVALUES LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    MENOR_QUE       reduce using rule 56 (printvalues_statement -> PRINTVALUES LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    IGUAL           reduce using rule 56 (printvalues_statement -> PRINTVALUES LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    DISTINTO_QUE    reduce using rule 56 (printvalues_statement -> PRINTVALUES LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    MAYOR_IGUAL_QUE reduce using rule 56 (printvalues_statement -> PRINTVALUES LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    MENOR_IGUAL_QUE reduce using rule 56 (printvalues_statement -> PRINTVALUES LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    BREAK           reduce using rule 56 (printvalues_statement -> PRINTVALUES LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    WHEN            reduce using rule 56 (printvalues_statement -> PRINTVALUES LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    ELSE            reduce using rule 56 (printvalues_statement -> PRINTVALUES LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    PUNTO_COMA      reduce using rule 56 (printvalues_statement -> PRINTVALUES LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)


state 162

    (57) signal_statement -> SIGNAL LPARENTESIS VARIABLE COMA value . RPARENTESIS PUNTO_COMA

    RPARENTESIS     shift and go to state 174


state 163

    (58) viewsignal_statement -> VIEWSIGNAL LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .

    NEW             reduce using rule 58 (viewsignal_statement -> VIEWSIGNAL LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    VALUES          reduce using rule 58 (viewsignal_statement -> VIEWSIGNAL LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    ALTER           reduce using rule 58 (viewsignal_statement -> VIEWSIGNAL LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    ALTERB          reduce using rule 58 (viewsignal_statement -> VIEWSIGNAL LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    ISTRUE          reduce using rule 58 (viewsignal_statement -> VIEWSIGNAL LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    REPEAT          reduce using rule 58 (viewsignal_statement -> VIEWSIGNAL LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    UNTIL           reduce using rule 58 (viewsignal_statement -> VIEWSIGNAL LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    WHILE           reduce using rule 58 (viewsignal_statement -> VIEWSIGNAL LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    CASE            reduce using rule 58 (viewsignal_statement -> VIEWSIGNAL LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    PRINTVALUES     reduce using rule 58 (viewsignal_statement -> VIEWSIGNAL LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    SIGNAL          reduce using rule 58 (viewsignal_statement -> VIEWSIGNAL LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    VIEWSIGNAL      reduce using rule 58 (viewsignal_statement -> VIEWSIGNAL LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    VARIABLE        reduce using rule 58 (viewsignal_statement -> VIEWSIGNAL LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    LPARENTESIS     reduce using rule 58 (viewsignal_statement -> VIEWSIGNAL LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    NUMERO          reduce using rule 58 (viewsignal_statement -> VIEWSIGNAL LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    TRUE            reduce using rule 58 (viewsignal_statement -> VIEWSIGNAL LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    FALSE           reduce using rule 58 (viewsignal_statement -> VIEWSIGNAL LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    RPARENTESIS     reduce using rule 58 (viewsignal_statement -> VIEWSIGNAL LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    MAYOR_QUE       reduce using rule 58 (viewsignal_statement -> VIEWSIGNAL LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    MENOR_QUE       reduce using rule 58 (viewsignal_statement -> VIEWSIGNAL LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    IGUAL           reduce using rule 58 (viewsignal_statement -> VIEWSIGNAL LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    DISTINTO_QUE    reduce using rule 58 (viewsignal_statement -> VIEWSIGNAL LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    MAYOR_IGUAL_QUE reduce using rule 58 (viewsignal_statement -> VIEWSIGNAL LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    MENOR_IGUAL_QUE reduce using rule 58 (viewsignal_statement -> VIEWSIGNAL LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    BREAK           reduce using rule 58 (viewsignal_statement -> VIEWSIGNAL LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    WHEN            reduce using rule 58 (viewsignal_statement -> VIEWSIGNAL LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    ELSE            reduce using rule 58 (viewsignal_statement -> VIEWSIGNAL LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    PUNTO_COMA      reduce using rule 58 (viewsignal_statement -> VIEWSIGNAL LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)


state 164

    (6) code_block -> group_proc proc MASTER LPARENTESIS comentario list_statement RPARENTESIS PUNTO_COMA group_proc .

    $end            reduce using rule 6 (code_block -> group_proc proc MASTER LPARENTESIS comentario list_statement RPARENTESIS PUNTO_COMA group_proc .)
    PUNTO_COMA      reduce using rule 6 (code_block -> group_proc proc MASTER LPARENTESIS comentario list_statement RPARENTESIS PUNTO_COMA group_proc .)


state 165

    (29) new_variable_statement -> NEW VARIABLE COMA LPARENTESIS DATATYPE COMA . value RPARENTESIS PUNTO_COMA
    (67) value -> . NUMERO
    (68) value -> . bool
    (48) bool -> . TRUE
    (49) bool -> . FALSE

    NUMERO          shift and go to state 54
    TRUE            shift and go to state 56
    FALSE           shift and go to state 57

    value                          shift and go to state 175
    bool                           shift and go to state 55

state 166

    (30) values_statement -> VALUES LPARENTESIS VARIABLE COMA value RPARENTESIS . PUNTO_COMA

    PUNTO_COMA      shift and go to state 176


state 167

    (31) values_statement -> VALUES LPARENTESIS VARIABLE COMA alter_statement RPARENTESIS . PUNTO_COMA

    PUNTO_COMA      shift and go to state 177


state 168

    (32) alter_statement -> ALTER LPARENTESIS VARIABLE COMA operador COMA . value RPARENTESIS PUNTO_COMA
    (67) value -> . NUMERO
    (68) value -> . bool
    (48) bool -> . TRUE
    (49) bool -> . FALSE

    NUMERO          shift and go to state 54
    TRUE            shift and go to state 56
    FALSE           shift and go to state 57

    value                          shift and go to state 178
    bool                           shift and go to state 55

state 169

    (36) repeat_statement -> REPEAT LPARENTESIS list_statement break_statement RPARENTESIS PUNTO_COMA .

    NEW             reduce using rule 36 (repeat_statement -> REPEAT LPARENTESIS list_statement break_statement RPARENTESIS PUNTO_COMA .)
    VALUES          reduce using rule 36 (repeat_statement -> REPEAT LPARENTESIS list_statement break_statement RPARENTESIS PUNTO_COMA .)
    ALTER           reduce using rule 36 (repeat_statement -> REPEAT LPARENTESIS list_statement break_statement RPARENTESIS PUNTO_COMA .)
    ALTERB          reduce using rule 36 (repeat_statement -> REPEAT LPARENTESIS list_statement break_statement RPARENTESIS PUNTO_COMA .)
    ISTRUE          reduce using rule 36 (repeat_statement -> REPEAT LPARENTESIS list_statement break_statement RPARENTESIS PUNTO_COMA .)
    REPEAT          reduce using rule 36 (repeat_statement -> REPEAT LPARENTESIS list_statement break_statement RPARENTESIS PUNTO_COMA .)
    UNTIL           reduce using rule 36 (repeat_statement -> REPEAT LPARENTESIS list_statement break_statement RPARENTESIS PUNTO_COMA .)
    WHILE           reduce using rule 36 (repeat_statement -> REPEAT LPARENTESIS list_statement break_statement RPARENTESIS PUNTO_COMA .)
    CASE            reduce using rule 36 (repeat_statement -> REPEAT LPARENTESIS list_statement break_statement RPARENTESIS PUNTO_COMA .)
    PRINTVALUES     reduce using rule 36 (repeat_statement -> REPEAT LPARENTESIS list_statement break_statement RPARENTESIS PUNTO_COMA .)
    SIGNAL          reduce using rule 36 (repeat_statement -> REPEAT LPARENTESIS list_statement break_statement RPARENTESIS PUNTO_COMA .)
    VIEWSIGNAL      reduce using rule 36 (repeat_statement -> REPEAT LPARENTESIS list_statement break_statement RPARENTESIS PUNTO_COMA .)
    VARIABLE        reduce using rule 36 (repeat_statement -> REPEAT LPARENTESIS list_statement break_statement RPARENTESIS PUNTO_COMA .)
    LPARENTESIS     reduce using rule 36 (repeat_statement -> REPEAT LPARENTESIS list_statement break_statement RPARENTESIS PUNTO_COMA .)
    NUMERO          reduce using rule 36 (repeat_statement -> REPEAT LPARENTESIS list_statement break_statement RPARENTESIS PUNTO_COMA .)
    TRUE            reduce using rule 36 (repeat_statement -> REPEAT LPARENTESIS list_statement break_statement RPARENTESIS PUNTO_COMA .)
    FALSE           reduce using rule 36 (repeat_statement -> REPEAT LPARENTESIS list_statement break_statement RPARENTESIS PUNTO_COMA .)
    RPARENTESIS     reduce using rule 36 (repeat_statement -> REPEAT LPARENTESIS list_statement break_statement RPARENTESIS PUNTO_COMA .)
    MAYOR_QUE       reduce using rule 36 (repeat_statement -> REPEAT LPARENTESIS list_statement break_statement RPARENTESIS PUNTO_COMA .)
    MENOR_QUE       reduce using rule 36 (repeat_statement -> REPEAT LPARENTESIS list_statement break_statement RPARENTESIS PUNTO_COMA .)
    IGUAL           reduce using rule 36 (repeat_statement -> REPEAT LPARENTESIS list_statement break_statement RPARENTESIS PUNTO_COMA .)
    DISTINTO_QUE    reduce using rule 36 (repeat_statement -> REPEAT LPARENTESIS list_statement break_statement RPARENTESIS PUNTO_COMA .)
    MAYOR_IGUAL_QUE reduce using rule 36 (repeat_statement -> REPEAT LPARENTESIS list_statement break_statement RPARENTESIS PUNTO_COMA .)
    MENOR_IGUAL_QUE reduce using rule 36 (repeat_statement -> REPEAT LPARENTESIS list_statement break_statement RPARENTESIS PUNTO_COMA .)
    BREAK           reduce using rule 36 (repeat_statement -> REPEAT LPARENTESIS list_statement break_statement RPARENTESIS PUNTO_COMA .)
    WHEN            reduce using rule 36 (repeat_statement -> REPEAT LPARENTESIS list_statement break_statement RPARENTESIS PUNTO_COMA .)
    ELSE            reduce using rule 36 (repeat_statement -> REPEAT LPARENTESIS list_statement break_statement RPARENTESIS PUNTO_COMA .)
    PUNTO_COMA      reduce using rule 36 (repeat_statement -> REPEAT LPARENTESIS list_statement break_statement RPARENTESIS PUNTO_COMA .)


state 170

    (45) while_statement -> WHILE expression LPARENTESIS list_statement RPARENTESIS PUNTO_COMA .

    NEW             reduce using rule 45 (while_statement -> WHILE expression LPARENTESIS list_statement RPARENTESIS PUNTO_COMA .)
    VALUES          reduce using rule 45 (while_statement -> WHILE expression LPARENTESIS list_statement RPARENTESIS PUNTO_COMA .)
    ALTER           reduce using rule 45 (while_statement -> WHILE expression LPARENTESIS list_statement RPARENTESIS PUNTO_COMA .)
    ALTERB          reduce using rule 45 (while_statement -> WHILE expression LPARENTESIS list_statement RPARENTESIS PUNTO_COMA .)
    ISTRUE          reduce using rule 45 (while_statement -> WHILE expression LPARENTESIS list_statement RPARENTESIS PUNTO_COMA .)
    REPEAT          reduce using rule 45 (while_statement -> WHILE expression LPARENTESIS list_statement RPARENTESIS PUNTO_COMA .)
    UNTIL           reduce using rule 45 (while_statement -> WHILE expression LPARENTESIS list_statement RPARENTESIS PUNTO_COMA .)
    WHILE           reduce using rule 45 (while_statement -> WHILE expression LPARENTESIS list_statement RPARENTESIS PUNTO_COMA .)
    CASE            reduce using rule 45 (while_statement -> WHILE expression LPARENTESIS list_statement RPARENTESIS PUNTO_COMA .)
    PRINTVALUES     reduce using rule 45 (while_statement -> WHILE expression LPARENTESIS list_statement RPARENTESIS PUNTO_COMA .)
    SIGNAL          reduce using rule 45 (while_statement -> WHILE expression LPARENTESIS list_statement RPARENTESIS PUNTO_COMA .)
    VIEWSIGNAL      reduce using rule 45 (while_statement -> WHILE expression LPARENTESIS list_statement RPARENTESIS PUNTO_COMA .)
    VARIABLE        reduce using rule 45 (while_statement -> WHILE expression LPARENTESIS list_statement RPARENTESIS PUNTO_COMA .)
    LPARENTESIS     reduce using rule 45 (while_statement -> WHILE expression LPARENTESIS list_statement RPARENTESIS PUNTO_COMA .)
    NUMERO          reduce using rule 45 (while_statement -> WHILE expression LPARENTESIS list_statement RPARENTESIS PUNTO_COMA .)
    TRUE            reduce using rule 45 (while_statement -> WHILE expression LPARENTESIS list_statement RPARENTESIS PUNTO_COMA .)
    FALSE           reduce using rule 45 (while_statement -> WHILE expression LPARENTESIS list_statement RPARENTESIS PUNTO_COMA .)
    RPARENTESIS     reduce using rule 45 (while_statement -> WHILE expression LPARENTESIS list_statement RPARENTESIS PUNTO_COMA .)
    MAYOR_QUE       reduce using rule 45 (while_statement -> WHILE expression LPARENTESIS list_statement RPARENTESIS PUNTO_COMA .)
    MENOR_QUE       reduce using rule 45 (while_statement -> WHILE expression LPARENTESIS list_statement RPARENTESIS PUNTO_COMA .)
    IGUAL           reduce using rule 45 (while_statement -> WHILE expression LPARENTESIS list_statement RPARENTESIS PUNTO_COMA .)
    DISTINTO_QUE    reduce using rule 45 (while_statement -> WHILE expression LPARENTESIS list_statement RPARENTESIS PUNTO_COMA .)
    MAYOR_IGUAL_QUE reduce using rule 45 (while_statement -> WHILE expression LPARENTESIS list_statement RPARENTESIS PUNTO_COMA .)
    MENOR_IGUAL_QUE reduce using rule 45 (while_statement -> WHILE expression LPARENTESIS list_statement RPARENTESIS PUNTO_COMA .)
    BREAK           reduce using rule 45 (while_statement -> WHILE expression LPARENTESIS list_statement RPARENTESIS PUNTO_COMA .)
    WHEN            reduce using rule 45 (while_statement -> WHILE expression LPARENTESIS list_statement RPARENTESIS PUNTO_COMA .)
    ELSE            reduce using rule 45 (while_statement -> WHILE expression LPARENTESIS list_statement RPARENTESIS PUNTO_COMA .)
    PUNTO_COMA      reduce using rule 45 (while_statement -> WHILE expression LPARENTESIS list_statement RPARENTESIS PUNTO_COMA .)


state 171

    (46) while_statement -> WHILE condition_statement LPARENTESIS list_statement RPARENTESIS PUNTO_COMA .

    NEW             reduce using rule 46 (while_statement -> WHILE condition_statement LPARENTESIS list_statement RPARENTESIS PUNTO_COMA .)
    VALUES          reduce using rule 46 (while_statement -> WHILE condition_statement LPARENTESIS list_statement RPARENTESIS PUNTO_COMA .)
    ALTER           reduce using rule 46 (while_statement -> WHILE condition_statement LPARENTESIS list_statement RPARENTESIS PUNTO_COMA .)
    ALTERB          reduce using rule 46 (while_statement -> WHILE condition_statement LPARENTESIS list_statement RPARENTESIS PUNTO_COMA .)
    ISTRUE          reduce using rule 46 (while_statement -> WHILE condition_statement LPARENTESIS list_statement RPARENTESIS PUNTO_COMA .)
    REPEAT          reduce using rule 46 (while_statement -> WHILE condition_statement LPARENTESIS list_statement RPARENTESIS PUNTO_COMA .)
    UNTIL           reduce using rule 46 (while_statement -> WHILE condition_statement LPARENTESIS list_statement RPARENTESIS PUNTO_COMA .)
    WHILE           reduce using rule 46 (while_statement -> WHILE condition_statement LPARENTESIS list_statement RPARENTESIS PUNTO_COMA .)
    CASE            reduce using rule 46 (while_statement -> WHILE condition_statement LPARENTESIS list_statement RPARENTESIS PUNTO_COMA .)
    PRINTVALUES     reduce using rule 46 (while_statement -> WHILE condition_statement LPARENTESIS list_statement RPARENTESIS PUNTO_COMA .)
    SIGNAL          reduce using rule 46 (while_statement -> WHILE condition_statement LPARENTESIS list_statement RPARENTESIS PUNTO_COMA .)
    VIEWSIGNAL      reduce using rule 46 (while_statement -> WHILE condition_statement LPARENTESIS list_statement RPARENTESIS PUNTO_COMA .)
    VARIABLE        reduce using rule 46 (while_statement -> WHILE condition_statement LPARENTESIS list_statement RPARENTESIS PUNTO_COMA .)
    LPARENTESIS     reduce using rule 46 (while_statement -> WHILE condition_statement LPARENTESIS list_statement RPARENTESIS PUNTO_COMA .)
    NUMERO          reduce using rule 46 (while_statement -> WHILE condition_statement LPARENTESIS list_statement RPARENTESIS PUNTO_COMA .)
    TRUE            reduce using rule 46 (while_statement -> WHILE condition_statement LPARENTESIS list_statement RPARENTESIS PUNTO_COMA .)
    FALSE           reduce using rule 46 (while_statement -> WHILE condition_statement LPARENTESIS list_statement RPARENTESIS PUNTO_COMA .)
    RPARENTESIS     reduce using rule 46 (while_statement -> WHILE condition_statement LPARENTESIS list_statement RPARENTESIS PUNTO_COMA .)
    MAYOR_QUE       reduce using rule 46 (while_statement -> WHILE condition_statement LPARENTESIS list_statement RPARENTESIS PUNTO_COMA .)
    MENOR_QUE       reduce using rule 46 (while_statement -> WHILE condition_statement LPARENTESIS list_statement RPARENTESIS PUNTO_COMA .)
    IGUAL           reduce using rule 46 (while_statement -> WHILE condition_statement LPARENTESIS list_statement RPARENTESIS PUNTO_COMA .)
    DISTINTO_QUE    reduce using rule 46 (while_statement -> WHILE condition_statement LPARENTESIS list_statement RPARENTESIS PUNTO_COMA .)
    MAYOR_IGUAL_QUE reduce using rule 46 (while_statement -> WHILE condition_statement LPARENTESIS list_statement RPARENTESIS PUNTO_COMA .)
    MENOR_IGUAL_QUE reduce using rule 46 (while_statement -> WHILE condition_statement LPARENTESIS list_statement RPARENTESIS PUNTO_COMA .)
    BREAK           reduce using rule 46 (while_statement -> WHILE condition_statement LPARENTESIS list_statement RPARENTESIS PUNTO_COMA .)
    WHEN            reduce using rule 46 (while_statement -> WHILE condition_statement LPARENTESIS list_statement RPARENTESIS PUNTO_COMA .)
    ELSE            reduce using rule 46 (while_statement -> WHILE condition_statement LPARENTESIS list_statement RPARENTESIS PUNTO_COMA .)
    PUNTO_COMA      reduce using rule 46 (while_statement -> WHILE condition_statement LPARENTESIS list_statement RPARENTESIS PUNTO_COMA .)


state 172

    (47) while_statement -> WHILE istrue LPARENTESIS list_statement RPARENTESIS PUNTO_COMA .

    NEW             reduce using rule 47 (while_statement -> WHILE istrue LPARENTESIS list_statement RPARENTESIS PUNTO_COMA .)
    VALUES          reduce using rule 47 (while_statement -> WHILE istrue LPARENTESIS list_statement RPARENTESIS PUNTO_COMA .)
    ALTER           reduce using rule 47 (while_statement -> WHILE istrue LPARENTESIS list_statement RPARENTESIS PUNTO_COMA .)
    ALTERB          reduce using rule 47 (while_statement -> WHILE istrue LPARENTESIS list_statement RPARENTESIS PUNTO_COMA .)
    ISTRUE          reduce using rule 47 (while_statement -> WHILE istrue LPARENTESIS list_statement RPARENTESIS PUNTO_COMA .)
    REPEAT          reduce using rule 47 (while_statement -> WHILE istrue LPARENTESIS list_statement RPARENTESIS PUNTO_COMA .)
    UNTIL           reduce using rule 47 (while_statement -> WHILE istrue LPARENTESIS list_statement RPARENTESIS PUNTO_COMA .)
    WHILE           reduce using rule 47 (while_statement -> WHILE istrue LPARENTESIS list_statement RPARENTESIS PUNTO_COMA .)
    CASE            reduce using rule 47 (while_statement -> WHILE istrue LPARENTESIS list_statement RPARENTESIS PUNTO_COMA .)
    PRINTVALUES     reduce using rule 47 (while_statement -> WHILE istrue LPARENTESIS list_statement RPARENTESIS PUNTO_COMA .)
    SIGNAL          reduce using rule 47 (while_statement -> WHILE istrue LPARENTESIS list_statement RPARENTESIS PUNTO_COMA .)
    VIEWSIGNAL      reduce using rule 47 (while_statement -> WHILE istrue LPARENTESIS list_statement RPARENTESIS PUNTO_COMA .)
    VARIABLE        reduce using rule 47 (while_statement -> WHILE istrue LPARENTESIS list_statement RPARENTESIS PUNTO_COMA .)
    LPARENTESIS     reduce using rule 47 (while_statement -> WHILE istrue LPARENTESIS list_statement RPARENTESIS PUNTO_COMA .)
    NUMERO          reduce using rule 47 (while_statement -> WHILE istrue LPARENTESIS list_statement RPARENTESIS PUNTO_COMA .)
    TRUE            reduce using rule 47 (while_statement -> WHILE istrue LPARENTESIS list_statement RPARENTESIS PUNTO_COMA .)
    FALSE           reduce using rule 47 (while_statement -> WHILE istrue LPARENTESIS list_statement RPARENTESIS PUNTO_COMA .)
    RPARENTESIS     reduce using rule 47 (while_statement -> WHILE istrue LPARENTESIS list_statement RPARENTESIS PUNTO_COMA .)
    MAYOR_QUE       reduce using rule 47 (while_statement -> WHILE istrue LPARENTESIS list_statement RPARENTESIS PUNTO_COMA .)
    MENOR_QUE       reduce using rule 47 (while_statement -> WHILE istrue LPARENTESIS list_statement RPARENTESIS PUNTO_COMA .)
    IGUAL           reduce using rule 47 (while_statement -> WHILE istrue LPARENTESIS list_statement RPARENTESIS PUNTO_COMA .)
    DISTINTO_QUE    reduce using rule 47 (while_statement -> WHILE istrue LPARENTESIS list_statement RPARENTESIS PUNTO_COMA .)
    MAYOR_IGUAL_QUE reduce using rule 47 (while_statement -> WHILE istrue LPARENTESIS list_statement RPARENTESIS PUNTO_COMA .)
    MENOR_IGUAL_QUE reduce using rule 47 (while_statement -> WHILE istrue LPARENTESIS list_statement RPARENTESIS PUNTO_COMA .)
    BREAK           reduce using rule 47 (while_statement -> WHILE istrue LPARENTESIS list_statement RPARENTESIS PUNTO_COMA .)
    WHEN            reduce using rule 47 (while_statement -> WHILE istrue LPARENTESIS list_statement RPARENTESIS PUNTO_COMA .)
    ELSE            reduce using rule 47 (while_statement -> WHILE istrue LPARENTESIS list_statement RPARENTESIS PUNTO_COMA .)
    PUNTO_COMA      reduce using rule 47 (while_statement -> WHILE istrue LPARENTESIS list_statement RPARENTESIS PUNTO_COMA .)


state 173

    (53) case_when_statement -> WHEN value THEN list_statement .

    WHEN            reduce using rule 53 (case_when_statement -> WHEN value THEN list_statement .)
    ELSE            reduce using rule 53 (case_when_statement -> WHEN value THEN list_statement .)
    PUNTO_COMA      reduce using rule 53 (case_when_statement -> WHEN value THEN list_statement .)


state 174

    (57) signal_statement -> SIGNAL LPARENTESIS VARIABLE COMA value RPARENTESIS . PUNTO_COMA

    PUNTO_COMA      shift and go to state 179


state 175

    (29) new_variable_statement -> NEW VARIABLE COMA LPARENTESIS DATATYPE COMA value . RPARENTESIS PUNTO_COMA

    RPARENTESIS     shift and go to state 180


state 176

    (30) values_statement -> VALUES LPARENTESIS VARIABLE COMA value RPARENTESIS PUNTO_COMA .

    NEW             reduce using rule 30 (values_statement -> VALUES LPARENTESIS VARIABLE COMA value RPARENTESIS PUNTO_COMA .)
    VALUES          reduce using rule 30 (values_statement -> VALUES LPARENTESIS VARIABLE COMA value RPARENTESIS PUNTO_COMA .)
    ALTER           reduce using rule 30 (values_statement -> VALUES LPARENTESIS VARIABLE COMA value RPARENTESIS PUNTO_COMA .)
    ALTERB          reduce using rule 30 (values_statement -> VALUES LPARENTESIS VARIABLE COMA value RPARENTESIS PUNTO_COMA .)
    ISTRUE          reduce using rule 30 (values_statement -> VALUES LPARENTESIS VARIABLE COMA value RPARENTESIS PUNTO_COMA .)
    REPEAT          reduce using rule 30 (values_statement -> VALUES LPARENTESIS VARIABLE COMA value RPARENTESIS PUNTO_COMA .)
    UNTIL           reduce using rule 30 (values_statement -> VALUES LPARENTESIS VARIABLE COMA value RPARENTESIS PUNTO_COMA .)
    WHILE           reduce using rule 30 (values_statement -> VALUES LPARENTESIS VARIABLE COMA value RPARENTESIS PUNTO_COMA .)
    CASE            reduce using rule 30 (values_statement -> VALUES LPARENTESIS VARIABLE COMA value RPARENTESIS PUNTO_COMA .)
    PRINTVALUES     reduce using rule 30 (values_statement -> VALUES LPARENTESIS VARIABLE COMA value RPARENTESIS PUNTO_COMA .)
    SIGNAL          reduce using rule 30 (values_statement -> VALUES LPARENTESIS VARIABLE COMA value RPARENTESIS PUNTO_COMA .)
    VIEWSIGNAL      reduce using rule 30 (values_statement -> VALUES LPARENTESIS VARIABLE COMA value RPARENTESIS PUNTO_COMA .)
    VARIABLE        reduce using rule 30 (values_statement -> VALUES LPARENTESIS VARIABLE COMA value RPARENTESIS PUNTO_COMA .)
    LPARENTESIS     reduce using rule 30 (values_statement -> VALUES LPARENTESIS VARIABLE COMA value RPARENTESIS PUNTO_COMA .)
    NUMERO          reduce using rule 30 (values_statement -> VALUES LPARENTESIS VARIABLE COMA value RPARENTESIS PUNTO_COMA .)
    TRUE            reduce using rule 30 (values_statement -> VALUES LPARENTESIS VARIABLE COMA value RPARENTESIS PUNTO_COMA .)
    FALSE           reduce using rule 30 (values_statement -> VALUES LPARENTESIS VARIABLE COMA value RPARENTESIS PUNTO_COMA .)
    RPARENTESIS     reduce using rule 30 (values_statement -> VALUES LPARENTESIS VARIABLE COMA value RPARENTESIS PUNTO_COMA .)
    MAYOR_QUE       reduce using rule 30 (values_statement -> VALUES LPARENTESIS VARIABLE COMA value RPARENTESIS PUNTO_COMA .)
    MENOR_QUE       reduce using rule 30 (values_statement -> VALUES LPARENTESIS VARIABLE COMA value RPARENTESIS PUNTO_COMA .)
    IGUAL           reduce using rule 30 (values_statement -> VALUES LPARENTESIS VARIABLE COMA value RPARENTESIS PUNTO_COMA .)
    DISTINTO_QUE    reduce using rule 30 (values_statement -> VALUES LPARENTESIS VARIABLE COMA value RPARENTESIS PUNTO_COMA .)
    MAYOR_IGUAL_QUE reduce using rule 30 (values_statement -> VALUES LPARENTESIS VARIABLE COMA value RPARENTESIS PUNTO_COMA .)
    MENOR_IGUAL_QUE reduce using rule 30 (values_statement -> VALUES LPARENTESIS VARIABLE COMA value RPARENTESIS PUNTO_COMA .)
    BREAK           reduce using rule 30 (values_statement -> VALUES LPARENTESIS VARIABLE COMA value RPARENTESIS PUNTO_COMA .)
    WHEN            reduce using rule 30 (values_statement -> VALUES LPARENTESIS VARIABLE COMA value RPARENTESIS PUNTO_COMA .)
    ELSE            reduce using rule 30 (values_statement -> VALUES LPARENTESIS VARIABLE COMA value RPARENTESIS PUNTO_COMA .)
    PUNTO_COMA      reduce using rule 30 (values_statement -> VALUES LPARENTESIS VARIABLE COMA value RPARENTESIS PUNTO_COMA .)


state 177

    (31) values_statement -> VALUES LPARENTESIS VARIABLE COMA alter_statement RPARENTESIS PUNTO_COMA .

    NEW             reduce using rule 31 (values_statement -> VALUES LPARENTESIS VARIABLE COMA alter_statement RPARENTESIS PUNTO_COMA .)
    VALUES          reduce using rule 31 (values_statement -> VALUES LPARENTESIS VARIABLE COMA alter_statement RPARENTESIS PUNTO_COMA .)
    ALTER           reduce using rule 31 (values_statement -> VALUES LPARENTESIS VARIABLE COMA alter_statement RPARENTESIS PUNTO_COMA .)
    ALTERB          reduce using rule 31 (values_statement -> VALUES LPARENTESIS VARIABLE COMA alter_statement RPARENTESIS PUNTO_COMA .)
    ISTRUE          reduce using rule 31 (values_statement -> VALUES LPARENTESIS VARIABLE COMA alter_statement RPARENTESIS PUNTO_COMA .)
    REPEAT          reduce using rule 31 (values_statement -> VALUES LPARENTESIS VARIABLE COMA alter_statement RPARENTESIS PUNTO_COMA .)
    UNTIL           reduce using rule 31 (values_statement -> VALUES LPARENTESIS VARIABLE COMA alter_statement RPARENTESIS PUNTO_COMA .)
    WHILE           reduce using rule 31 (values_statement -> VALUES LPARENTESIS VARIABLE COMA alter_statement RPARENTESIS PUNTO_COMA .)
    CASE            reduce using rule 31 (values_statement -> VALUES LPARENTESIS VARIABLE COMA alter_statement RPARENTESIS PUNTO_COMA .)
    PRINTVALUES     reduce using rule 31 (values_statement -> VALUES LPARENTESIS VARIABLE COMA alter_statement RPARENTESIS PUNTO_COMA .)
    SIGNAL          reduce using rule 31 (values_statement -> VALUES LPARENTESIS VARIABLE COMA alter_statement RPARENTESIS PUNTO_COMA .)
    VIEWSIGNAL      reduce using rule 31 (values_statement -> VALUES LPARENTESIS VARIABLE COMA alter_statement RPARENTESIS PUNTO_COMA .)
    VARIABLE        reduce using rule 31 (values_statement -> VALUES LPARENTESIS VARIABLE COMA alter_statement RPARENTESIS PUNTO_COMA .)
    LPARENTESIS     reduce using rule 31 (values_statement -> VALUES LPARENTESIS VARIABLE COMA alter_statement RPARENTESIS PUNTO_COMA .)
    NUMERO          reduce using rule 31 (values_statement -> VALUES LPARENTESIS VARIABLE COMA alter_statement RPARENTESIS PUNTO_COMA .)
    TRUE            reduce using rule 31 (values_statement -> VALUES LPARENTESIS VARIABLE COMA alter_statement RPARENTESIS PUNTO_COMA .)
    FALSE           reduce using rule 31 (values_statement -> VALUES LPARENTESIS VARIABLE COMA alter_statement RPARENTESIS PUNTO_COMA .)
    RPARENTESIS     reduce using rule 31 (values_statement -> VALUES LPARENTESIS VARIABLE COMA alter_statement RPARENTESIS PUNTO_COMA .)
    MAYOR_QUE       reduce using rule 31 (values_statement -> VALUES LPARENTESIS VARIABLE COMA alter_statement RPARENTESIS PUNTO_COMA .)
    MENOR_QUE       reduce using rule 31 (values_statement -> VALUES LPARENTESIS VARIABLE COMA alter_statement RPARENTESIS PUNTO_COMA .)
    IGUAL           reduce using rule 31 (values_statement -> VALUES LPARENTESIS VARIABLE COMA alter_statement RPARENTESIS PUNTO_COMA .)
    DISTINTO_QUE    reduce using rule 31 (values_statement -> VALUES LPARENTESIS VARIABLE COMA alter_statement RPARENTESIS PUNTO_COMA .)
    MAYOR_IGUAL_QUE reduce using rule 31 (values_statement -> VALUES LPARENTESIS VARIABLE COMA alter_statement RPARENTESIS PUNTO_COMA .)
    MENOR_IGUAL_QUE reduce using rule 31 (values_statement -> VALUES LPARENTESIS VARIABLE COMA alter_statement RPARENTESIS PUNTO_COMA .)
    BREAK           reduce using rule 31 (values_statement -> VALUES LPARENTESIS VARIABLE COMA alter_statement RPARENTESIS PUNTO_COMA .)
    WHEN            reduce using rule 31 (values_statement -> VALUES LPARENTESIS VARIABLE COMA alter_statement RPARENTESIS PUNTO_COMA .)
    ELSE            reduce using rule 31 (values_statement -> VALUES LPARENTESIS VARIABLE COMA alter_statement RPARENTESIS PUNTO_COMA .)
    PUNTO_COMA      reduce using rule 31 (values_statement -> VALUES LPARENTESIS VARIABLE COMA alter_statement RPARENTESIS PUNTO_COMA .)


state 178

    (32) alter_statement -> ALTER LPARENTESIS VARIABLE COMA operador COMA value . RPARENTESIS PUNTO_COMA

    RPARENTESIS     shift and go to state 181


state 179

    (57) signal_statement -> SIGNAL LPARENTESIS VARIABLE COMA value RPARENTESIS PUNTO_COMA .

    NEW             reduce using rule 57 (signal_statement -> SIGNAL LPARENTESIS VARIABLE COMA value RPARENTESIS PUNTO_COMA .)
    VALUES          reduce using rule 57 (signal_statement -> SIGNAL LPARENTESIS VARIABLE COMA value RPARENTESIS PUNTO_COMA .)
    ALTER           reduce using rule 57 (signal_statement -> SIGNAL LPARENTESIS VARIABLE COMA value RPARENTESIS PUNTO_COMA .)
    ALTERB          reduce using rule 57 (signal_statement -> SIGNAL LPARENTESIS VARIABLE COMA value RPARENTESIS PUNTO_COMA .)
    ISTRUE          reduce using rule 57 (signal_statement -> SIGNAL LPARENTESIS VARIABLE COMA value RPARENTESIS PUNTO_COMA .)
    REPEAT          reduce using rule 57 (signal_statement -> SIGNAL LPARENTESIS VARIABLE COMA value RPARENTESIS PUNTO_COMA .)
    UNTIL           reduce using rule 57 (signal_statement -> SIGNAL LPARENTESIS VARIABLE COMA value RPARENTESIS PUNTO_COMA .)
    WHILE           reduce using rule 57 (signal_statement -> SIGNAL LPARENTESIS VARIABLE COMA value RPARENTESIS PUNTO_COMA .)
    CASE            reduce using rule 57 (signal_statement -> SIGNAL LPARENTESIS VARIABLE COMA value RPARENTESIS PUNTO_COMA .)
    PRINTVALUES     reduce using rule 57 (signal_statement -> SIGNAL LPARENTESIS VARIABLE COMA value RPARENTESIS PUNTO_COMA .)
    SIGNAL          reduce using rule 57 (signal_statement -> SIGNAL LPARENTESIS VARIABLE COMA value RPARENTESIS PUNTO_COMA .)
    VIEWSIGNAL      reduce using rule 57 (signal_statement -> SIGNAL LPARENTESIS VARIABLE COMA value RPARENTESIS PUNTO_COMA .)
    VARIABLE        reduce using rule 57 (signal_statement -> SIGNAL LPARENTESIS VARIABLE COMA value RPARENTESIS PUNTO_COMA .)
    LPARENTESIS     reduce using rule 57 (signal_statement -> SIGNAL LPARENTESIS VARIABLE COMA value RPARENTESIS PUNTO_COMA .)
    NUMERO          reduce using rule 57 (signal_statement -> SIGNAL LPARENTESIS VARIABLE COMA value RPARENTESIS PUNTO_COMA .)
    TRUE            reduce using rule 57 (signal_statement -> SIGNAL LPARENTESIS VARIABLE COMA value RPARENTESIS PUNTO_COMA .)
    FALSE           reduce using rule 57 (signal_statement -> SIGNAL LPARENTESIS VARIABLE COMA value RPARENTESIS PUNTO_COMA .)
    RPARENTESIS     reduce using rule 57 (signal_statement -> SIGNAL LPARENTESIS VARIABLE COMA value RPARENTESIS PUNTO_COMA .)
    MAYOR_QUE       reduce using rule 57 (signal_statement -> SIGNAL LPARENTESIS VARIABLE COMA value RPARENTESIS PUNTO_COMA .)
    MENOR_QUE       reduce using rule 57 (signal_statement -> SIGNAL LPARENTESIS VARIABLE COMA value RPARENTESIS PUNTO_COMA .)
    IGUAL           reduce using rule 57 (signal_statement -> SIGNAL LPARENTESIS VARIABLE COMA value RPARENTESIS PUNTO_COMA .)
    DISTINTO_QUE    reduce using rule 57 (signal_statement -> SIGNAL LPARENTESIS VARIABLE COMA value RPARENTESIS PUNTO_COMA .)
    MAYOR_IGUAL_QUE reduce using rule 57 (signal_statement -> SIGNAL LPARENTESIS VARIABLE COMA value RPARENTESIS PUNTO_COMA .)
    MENOR_IGUAL_QUE reduce using rule 57 (signal_statement -> SIGNAL LPARENTESIS VARIABLE COMA value RPARENTESIS PUNTO_COMA .)
    BREAK           reduce using rule 57 (signal_statement -> SIGNAL LPARENTESIS VARIABLE COMA value RPARENTESIS PUNTO_COMA .)
    WHEN            reduce using rule 57 (signal_statement -> SIGNAL LPARENTESIS VARIABLE COMA value RPARENTESIS PUNTO_COMA .)
    ELSE            reduce using rule 57 (signal_statement -> SIGNAL LPARENTESIS VARIABLE COMA value RPARENTESIS PUNTO_COMA .)
    PUNTO_COMA      reduce using rule 57 (signal_statement -> SIGNAL LPARENTESIS VARIABLE COMA value RPARENTESIS PUNTO_COMA .)


state 180

    (29) new_variable_statement -> NEW VARIABLE COMA LPARENTESIS DATATYPE COMA value RPARENTESIS . PUNTO_COMA

    PUNTO_COMA      shift and go to state 182


state 181

    (32) alter_statement -> ALTER LPARENTESIS VARIABLE COMA operador COMA value RPARENTESIS . PUNTO_COMA

    PUNTO_COMA      shift and go to state 183


state 182

    (29) new_variable_statement -> NEW VARIABLE COMA LPARENTESIS DATATYPE COMA value RPARENTESIS PUNTO_COMA .

    NEW             reduce using rule 29 (new_variable_statement -> NEW VARIABLE COMA LPARENTESIS DATATYPE COMA value RPARENTESIS PUNTO_COMA .)
    VALUES          reduce using rule 29 (new_variable_statement -> NEW VARIABLE COMA LPARENTESIS DATATYPE COMA value RPARENTESIS PUNTO_COMA .)
    ALTER           reduce using rule 29 (new_variable_statement -> NEW VARIABLE COMA LPARENTESIS DATATYPE COMA value RPARENTESIS PUNTO_COMA .)
    ALTERB          reduce using rule 29 (new_variable_statement -> NEW VARIABLE COMA LPARENTESIS DATATYPE COMA value RPARENTESIS PUNTO_COMA .)
    ISTRUE          reduce using rule 29 (new_variable_statement -> NEW VARIABLE COMA LPARENTESIS DATATYPE COMA value RPARENTESIS PUNTO_COMA .)
    REPEAT          reduce using rule 29 (new_variable_statement -> NEW VARIABLE COMA LPARENTESIS DATATYPE COMA value RPARENTESIS PUNTO_COMA .)
    UNTIL           reduce using rule 29 (new_variable_statement -> NEW VARIABLE COMA LPARENTESIS DATATYPE COMA value RPARENTESIS PUNTO_COMA .)
    WHILE           reduce using rule 29 (new_variable_statement -> NEW VARIABLE COMA LPARENTESIS DATATYPE COMA value RPARENTESIS PUNTO_COMA .)
    CASE            reduce using rule 29 (new_variable_statement -> NEW VARIABLE COMA LPARENTESIS DATATYPE COMA value RPARENTESIS PUNTO_COMA .)
    PRINTVALUES     reduce using rule 29 (new_variable_statement -> NEW VARIABLE COMA LPARENTESIS DATATYPE COMA value RPARENTESIS PUNTO_COMA .)
    SIGNAL          reduce using rule 29 (new_variable_statement -> NEW VARIABLE COMA LPARENTESIS DATATYPE COMA value RPARENTESIS PUNTO_COMA .)
    VIEWSIGNAL      reduce using rule 29 (new_variable_statement -> NEW VARIABLE COMA LPARENTESIS DATATYPE COMA value RPARENTESIS PUNTO_COMA .)
    VARIABLE        reduce using rule 29 (new_variable_statement -> NEW VARIABLE COMA LPARENTESIS DATATYPE COMA value RPARENTESIS PUNTO_COMA .)
    LPARENTESIS     reduce using rule 29 (new_variable_statement -> NEW VARIABLE COMA LPARENTESIS DATATYPE COMA value RPARENTESIS PUNTO_COMA .)
    NUMERO          reduce using rule 29 (new_variable_statement -> NEW VARIABLE COMA LPARENTESIS DATATYPE COMA value RPARENTESIS PUNTO_COMA .)
    TRUE            reduce using rule 29 (new_variable_statement -> NEW VARIABLE COMA LPARENTESIS DATATYPE COMA value RPARENTESIS PUNTO_COMA .)
    FALSE           reduce using rule 29 (new_variable_statement -> NEW VARIABLE COMA LPARENTESIS DATATYPE COMA value RPARENTESIS PUNTO_COMA .)
    RPARENTESIS     reduce using rule 29 (new_variable_statement -> NEW VARIABLE COMA LPARENTESIS DATATYPE COMA value RPARENTESIS PUNTO_COMA .)
    MAYOR_QUE       reduce using rule 29 (new_variable_statement -> NEW VARIABLE COMA LPARENTESIS DATATYPE COMA value RPARENTESIS PUNTO_COMA .)
    MENOR_QUE       reduce using rule 29 (new_variable_statement -> NEW VARIABLE COMA LPARENTESIS DATATYPE COMA value RPARENTESIS PUNTO_COMA .)
    IGUAL           reduce using rule 29 (new_variable_statement -> NEW VARIABLE COMA LPARENTESIS DATATYPE COMA value RPARENTESIS PUNTO_COMA .)
    DISTINTO_QUE    reduce using rule 29 (new_variable_statement -> NEW VARIABLE COMA LPARENTESIS DATATYPE COMA value RPARENTESIS PUNTO_COMA .)
    MAYOR_IGUAL_QUE reduce using rule 29 (new_variable_statement -> NEW VARIABLE COMA LPARENTESIS DATATYPE COMA value RPARENTESIS PUNTO_COMA .)
    MENOR_IGUAL_QUE reduce using rule 29 (new_variable_statement -> NEW VARIABLE COMA LPARENTESIS DATATYPE COMA value RPARENTESIS PUNTO_COMA .)
    BREAK           reduce using rule 29 (new_variable_statement -> NEW VARIABLE COMA LPARENTESIS DATATYPE COMA value RPARENTESIS PUNTO_COMA .)
    WHEN            reduce using rule 29 (new_variable_statement -> NEW VARIABLE COMA LPARENTESIS DATATYPE COMA value RPARENTESIS PUNTO_COMA .)
    ELSE            reduce using rule 29 (new_variable_statement -> NEW VARIABLE COMA LPARENTESIS DATATYPE COMA value RPARENTESIS PUNTO_COMA .)
    PUNTO_COMA      reduce using rule 29 (new_variable_statement -> NEW VARIABLE COMA LPARENTESIS DATATYPE COMA value RPARENTESIS PUNTO_COMA .)


state 183

    (32) alter_statement -> ALTER LPARENTESIS VARIABLE COMA operador COMA value RPARENTESIS PUNTO_COMA .

    NEW             reduce using rule 32 (alter_statement -> ALTER LPARENTESIS VARIABLE COMA operador COMA value RPARENTESIS PUNTO_COMA .)
    VALUES          reduce using rule 32 (alter_statement -> ALTER LPARENTESIS VARIABLE COMA operador COMA value RPARENTESIS PUNTO_COMA .)
    ALTER           reduce using rule 32 (alter_statement -> ALTER LPARENTESIS VARIABLE COMA operador COMA value RPARENTESIS PUNTO_COMA .)
    ALTERB          reduce using rule 32 (alter_statement -> ALTER LPARENTESIS VARIABLE COMA operador COMA value RPARENTESIS PUNTO_COMA .)
    ISTRUE          reduce using rule 32 (alter_statement -> ALTER LPARENTESIS VARIABLE COMA operador COMA value RPARENTESIS PUNTO_COMA .)
    REPEAT          reduce using rule 32 (alter_statement -> ALTER LPARENTESIS VARIABLE COMA operador COMA value RPARENTESIS PUNTO_COMA .)
    UNTIL           reduce using rule 32 (alter_statement -> ALTER LPARENTESIS VARIABLE COMA operador COMA value RPARENTESIS PUNTO_COMA .)
    WHILE           reduce using rule 32 (alter_statement -> ALTER LPARENTESIS VARIABLE COMA operador COMA value RPARENTESIS PUNTO_COMA .)
    CASE            reduce using rule 32 (alter_statement -> ALTER LPARENTESIS VARIABLE COMA operador COMA value RPARENTESIS PUNTO_COMA .)
    PRINTVALUES     reduce using rule 32 (alter_statement -> ALTER LPARENTESIS VARIABLE COMA operador COMA value RPARENTESIS PUNTO_COMA .)
    SIGNAL          reduce using rule 32 (alter_statement -> ALTER LPARENTESIS VARIABLE COMA operador COMA value RPARENTESIS PUNTO_COMA .)
    VIEWSIGNAL      reduce using rule 32 (alter_statement -> ALTER LPARENTESIS VARIABLE COMA operador COMA value RPARENTESIS PUNTO_COMA .)
    VARIABLE        reduce using rule 32 (alter_statement -> ALTER LPARENTESIS VARIABLE COMA operador COMA value RPARENTESIS PUNTO_COMA .)
    LPARENTESIS     reduce using rule 32 (alter_statement -> ALTER LPARENTESIS VARIABLE COMA operador COMA value RPARENTESIS PUNTO_COMA .)
    NUMERO          reduce using rule 32 (alter_statement -> ALTER LPARENTESIS VARIABLE COMA operador COMA value RPARENTESIS PUNTO_COMA .)
    TRUE            reduce using rule 32 (alter_statement -> ALTER LPARENTESIS VARIABLE COMA operador COMA value RPARENTESIS PUNTO_COMA .)
    FALSE           reduce using rule 32 (alter_statement -> ALTER LPARENTESIS VARIABLE COMA operador COMA value RPARENTESIS PUNTO_COMA .)
    RPARENTESIS     reduce using rule 32 (alter_statement -> ALTER LPARENTESIS VARIABLE COMA operador COMA value RPARENTESIS PUNTO_COMA .)
    MAYOR_QUE       reduce using rule 32 (alter_statement -> ALTER LPARENTESIS VARIABLE COMA operador COMA value RPARENTESIS PUNTO_COMA .)
    MENOR_QUE       reduce using rule 32 (alter_statement -> ALTER LPARENTESIS VARIABLE COMA operador COMA value RPARENTESIS PUNTO_COMA .)
    IGUAL           reduce using rule 32 (alter_statement -> ALTER LPARENTESIS VARIABLE COMA operador COMA value RPARENTESIS PUNTO_COMA .)
    DISTINTO_QUE    reduce using rule 32 (alter_statement -> ALTER LPARENTESIS VARIABLE COMA operador COMA value RPARENTESIS PUNTO_COMA .)
    MAYOR_IGUAL_QUE reduce using rule 32 (alter_statement -> ALTER LPARENTESIS VARIABLE COMA operador COMA value RPARENTESIS PUNTO_COMA .)
    MENOR_IGUAL_QUE reduce using rule 32 (alter_statement -> ALTER LPARENTESIS VARIABLE COMA operador COMA value RPARENTESIS PUNTO_COMA .)
    BREAK           reduce using rule 32 (alter_statement -> ALTER LPARENTESIS VARIABLE COMA operador COMA value RPARENTESIS PUNTO_COMA .)
    WHEN            reduce using rule 32 (alter_statement -> ALTER LPARENTESIS VARIABLE COMA operador COMA value RPARENTESIS PUNTO_COMA .)
    ELSE            reduce using rule 32 (alter_statement -> ALTER LPARENTESIS VARIABLE COMA operador COMA value RPARENTESIS PUNTO_COMA .)
    PUNTO_COMA      reduce using rule 32 (alter_statement -> ALTER LPARENTESIS VARIABLE COMA operador COMA value RPARENTESIS PUNTO_COMA .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for PROC in state 2 resolved as shift
WARNING: shift/reduce conflict for + in state 98 resolved as shift
WARNING: shift/reduce conflict for - in state 98 resolved as shift
WARNING: shift/reduce conflict for * in state 98 resolved as shift
WARNING: shift/reduce conflict for / in state 98 resolved as shift
WARNING: shift/reduce conflict for + in state 99 resolved as shift
WARNING: shift/reduce conflict for - in state 99 resolved as shift
WARNING: shift/reduce conflict for * in state 99 resolved as shift
WARNING: shift/reduce conflict for / in state 99 resolved as shift
WARNING: shift/reduce conflict for + in state 100 resolved as shift
WARNING: shift/reduce conflict for - in state 100 resolved as shift
WARNING: shift/reduce conflict for * in state 100 resolved as shift
WARNING: shift/reduce conflict for / in state 100 resolved as shift
WARNING: shift/reduce conflict for + in state 101 resolved as shift
WARNING: shift/reduce conflict for - in state 101 resolved as shift
WARNING: shift/reduce conflict for * in state 101 resolved as shift
WARNING: shift/reduce conflict for / in state 101 resolved as shift
WARNING: shift/reduce conflict for PROC in state 117 resolved as shift
WARNING: shift/reduce conflict for PROC in state 133 resolved as shift
