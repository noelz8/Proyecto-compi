Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ARROBA
    BOOL
    CALL
    COMILLAS
    DER_EXCLAMACION
    DER_INTERROGACION
    DISTINTO_QUE
    DIVISION
    ENYE
    GUION
    ID
    IGUAL
    IGUALDAD
    IZQ_EXCLAMACION
    IZQ_INTERROGACION
    LETRA
    MAYOR_IGUAL_QUE
    MAYOR_QUE
    MAYUSCULA
    MENOR_IGUAL_QUE
    MENOR_QUE
    MULTIPLICACION
    PUNTO
    RESTA
    STRING
    SUMA
    TILDE
    UNDERSCORE

Grammar

Rule 0     S' -> program
Rule 1     program -> lista_comentarios code_block
Rule 2     lista_comentarios -> comentario lista_comentarios
Rule 3     lista_comentarios -> empty
Rule 4     comentario -> COMENTARIO
Rule 5     code_block -> proc MASTER LPARENTESIS comentario list_statement RPARENTESIS PUNTO_COMA group_proc
Rule 6     code_block -> group_proc proc MASTER LPARENTESIS comentario list_statement RPARENTESIS PUNTO_COMA group_proc
Rule 7     proc -> PROC
Rule 8     group_proc -> PROC VARIABLE LPARENTESIS COMENTARIO statement RPARENTESIS PUNTO_COMA group_proc
Rule 9     group_proc -> empty
Rule 10    operador -> ADD
Rule 11    operador -> SUB
Rule 12    operador -> MUL
Rule 13    operador -> DIV
Rule 14    list_statement -> statement list_statement
Rule 15    list_statement -> empty
Rule 16    statement -> new_variable_statement
Rule 17    statement -> values_statement
Rule 18    statement -> alter_statement
Rule 19    statement -> alterb_statement
Rule 20    statement -> condition_statement
Rule 21    statement -> istrue_statement
Rule 22    statement -> repeat_statement
Rule 23    statement -> until_statement
Rule 24    statement -> while_statement
Rule 25    statement -> case_statement
Rule 26    statement -> printvalues_statement
Rule 27    statement -> signal_statement
Rule 28    statement -> viewsignal_statement
Rule 29    new_variable_statement -> NEW VARIABLE COMA LPARENTESIS DATATYPE COMA value RPARENTESIS PUNTO_COMA
Rule 30    values_statement -> VALUES LPARENTESIS VARIABLE COMA value RPARENTESIS PUNTO_COMA
Rule 31    alter_statement -> ALTER LPARENTESIS VARIABLE COMA operador COMA value RPARENTESIS PUNTO_COMA
Rule 32    alterb_statement -> ALTERB LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA
Rule 33    condition_statement -> expression COND_NUMERICA expression
Rule 34    istrue_statement -> ISTRUE LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA
Rule 35    repeat_statement -> REPEAT LPARENTESIS list_statement break_statement RPARENTESIS PUNTO_COMA
Rule 36    break_statement -> BREAK PUNTO_COMA
Rule 37    until_statement -> UNTIL list_statement condition PUNTO_COMA
Rule 38    condition -> expression COND_NUMERICA expression
Rule 39    while_statement -> WHILE expression LPARENTESIS list_statement RPARENTESIS PUNTO_COMA
Rule 40    while_statement -> WHILE istrue LPARENTESIS list_statement RPARENTESIS PUNTO_COMA
Rule 41    bool -> TRUE
Rule 42    bool -> FALSE
Rule 43    case_statement -> CASE VARIABLE case_when_statements else_statement PUNTO_COMA
Rule 44    case_when_statements -> case_when_statement case_when_statements
Rule 45    case_when_statements -> empty
Rule 46    case_when_statement -> WHEN value THEN list_statement
Rule 47    else_statement -> ELSE code_block
Rule 48    else_statement -> empty
Rule 49    printvalues_statement -> PRINTVALUES LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA
Rule 50    signal_statement -> SIGNAL LPARENTESIS VARIABLE COMA value RPARENTESIS PUNTO_COMA
Rule 51    viewsignal_statement -> VIEWSIGNAL LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA
Rule 52    expression -> value
Rule 53    expression -> VARIABLE
Rule 54    expression -> LPARENTESIS expression RPARENTESIS
Rule 55    expression -> expression + expression
Rule 56    expression -> expression - expression
Rule 57    expression -> expression * expression
Rule 58    expression -> expression / expression
Rule 59    istrue -> ISTRUE LPARENTESIS VARIABLE RPARENTESIS
Rule 60    value -> NUMERO
Rule 61    value -> bool
Rule 62    empty -> <empty>
Rule 63    values -> VALUES

Terminals, with rules where they appear

*                    : 57
+                    : 55
-                    : 56
/                    : 58
ADD                  : 10
ALTER                : 31
ALTERB               : 32
ARROBA               : 
BOOL                 : 
BREAK                : 36
CALL                 : 
CASE                 : 43
COMA                 : 29 29 30 31 31 50
COMENTARIO           : 4 8
COMILLAS             : 
COND_NUMERICA        : 33 38
DATATYPE             : 29
DER_EXCLAMACION      : 
DER_INTERROGACION    : 
DISTINTO_QUE         : 
DIV                  : 13
DIVISION             : 
ELSE                 : 47
ENYE                 : 
FALSE                : 42
GUION                : 
ID                   : 
IGUAL                : 
IGUALDAD             : 
ISTRUE               : 34 59
IZQ_EXCLAMACION      : 
IZQ_INTERROGACION    : 
LETRA                : 
LPARENTESIS          : 5 6 8 29 30 31 32 34 35 39 40 49 50 51 54 59
MASTER               : 5 6
MAYOR_IGUAL_QUE      : 
MAYOR_QUE            : 
MAYUSCULA            : 
MENOR_IGUAL_QUE      : 
MENOR_QUE            : 
MUL                  : 12
MULTIPLICACION       : 
NEW                  : 29
NUMERO               : 60
PRINTVALUES          : 49
PROC                 : 7 8
PUNTO                : 
PUNTO_COMA           : 5 6 8 29 30 31 32 34 35 36 37 39 40 43 49 50 51
REPEAT               : 35
RESTA                : 
RPARENTESIS          : 5 6 8 29 30 31 32 34 35 39 40 49 50 51 54 59
SIGNAL               : 50
STRING               : 
SUB                  : 11
SUMA                 : 
THEN                 : 46
TILDE                : 
TRUE                 : 41
UNDERSCORE           : 
UNTIL                : 37
VALUES               : 30 63
VARIABLE             : 8 29 30 31 32 34 43 49 50 51 53 59
VIEWSIGNAL           : 51
WHEN                 : 46
WHILE                : 39 40
error                : 

Nonterminals, with rules where they appear

alter_statement      : 18
alterb_statement     : 19
bool                 : 61
break_statement      : 35
case_statement       : 25
case_when_statement  : 44
case_when_statements : 43 44
code_block           : 1 47
comentario           : 2 5 6
condition            : 37
condition_statement  : 20
else_statement       : 43
empty                : 3 9 15 45 48
expression           : 33 33 38 38 39 54 55 55 56 56 57 57 58 58
group_proc           : 5 6 6 8
istrue               : 40
istrue_statement     : 21
list_statement       : 5 6 14 35 37 39 40 46
lista_comentarios    : 1 2
new_variable_statement : 16
operador             : 31
printvalues_statement : 26
proc                 : 5 6
program              : 0
repeat_statement     : 22
signal_statement     : 27
statement            : 8 14
until_statement      : 23
value                : 29 30 31 46 50 52
values               : 
values_statement     : 17
viewsignal_statement : 28
while_statement      : 24

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . lista_comentarios code_block
    (2) lista_comentarios -> . comentario lista_comentarios
    (3) lista_comentarios -> . empty
    (4) comentario -> . COMENTARIO
    (62) empty -> .

    COMENTARIO      shift and go to state 5
    PROC            reduce using rule 62 (empty -> .)

    program                        shift and go to state 1
    lista_comentarios              shift and go to state 2
    comentario                     shift and go to state 3
    empty                          shift and go to state 4

state 1

    (0) S' -> program .



state 2

    (1) program -> lista_comentarios . code_block
    (5) code_block -> . proc MASTER LPARENTESIS comentario list_statement RPARENTESIS PUNTO_COMA group_proc
    (6) code_block -> . group_proc proc MASTER LPARENTESIS comentario list_statement RPARENTESIS PUNTO_COMA group_proc
    (7) proc -> . PROC
    (8) group_proc -> . PROC VARIABLE LPARENTESIS COMENTARIO statement RPARENTESIS PUNTO_COMA group_proc
    (9) group_proc -> . empty
    (62) empty -> .

  ! shift/reduce conflict for PROC resolved as shift
    PROC            shift and go to state 9

  ! PROC            [ reduce using rule 62 (empty -> .) ]

    code_block                     shift and go to state 6
    proc                           shift and go to state 7
    group_proc                     shift and go to state 8
    empty                          shift and go to state 10

state 3

    (2) lista_comentarios -> comentario . lista_comentarios
    (2) lista_comentarios -> . comentario lista_comentarios
    (3) lista_comentarios -> . empty
    (4) comentario -> . COMENTARIO
    (62) empty -> .

    COMENTARIO      shift and go to state 5
    PROC            reduce using rule 62 (empty -> .)

    comentario                     shift and go to state 3
    lista_comentarios              shift and go to state 11
    empty                          shift and go to state 4

state 4

    (3) lista_comentarios -> empty .

    PROC            reduce using rule 3 (lista_comentarios -> empty .)


state 5

    (4) comentario -> COMENTARIO .

    COMENTARIO      reduce using rule 4 (comentario -> COMENTARIO .)
    PROC            reduce using rule 4 (comentario -> COMENTARIO .)
    NEW             reduce using rule 4 (comentario -> COMENTARIO .)
    VALUES          reduce using rule 4 (comentario -> COMENTARIO .)
    ALTER           reduce using rule 4 (comentario -> COMENTARIO .)
    ALTERB          reduce using rule 4 (comentario -> COMENTARIO .)
    ISTRUE          reduce using rule 4 (comentario -> COMENTARIO .)
    REPEAT          reduce using rule 4 (comentario -> COMENTARIO .)
    UNTIL           reduce using rule 4 (comentario -> COMENTARIO .)
    WHILE           reduce using rule 4 (comentario -> COMENTARIO .)
    CASE            reduce using rule 4 (comentario -> COMENTARIO .)
    PRINTVALUES     reduce using rule 4 (comentario -> COMENTARIO .)
    SIGNAL          reduce using rule 4 (comentario -> COMENTARIO .)
    VIEWSIGNAL      reduce using rule 4 (comentario -> COMENTARIO .)
    VARIABLE        reduce using rule 4 (comentario -> COMENTARIO .)
    LPARENTESIS     reduce using rule 4 (comentario -> COMENTARIO .)
    NUMERO          reduce using rule 4 (comentario -> COMENTARIO .)
    TRUE            reduce using rule 4 (comentario -> COMENTARIO .)
    FALSE           reduce using rule 4 (comentario -> COMENTARIO .)
    RPARENTESIS     reduce using rule 4 (comentario -> COMENTARIO .)


state 6

    (1) program -> lista_comentarios code_block .

    $end            reduce using rule 1 (program -> lista_comentarios code_block .)


state 7

    (5) code_block -> proc . MASTER LPARENTESIS comentario list_statement RPARENTESIS PUNTO_COMA group_proc

    MASTER          shift and go to state 12


state 8

    (6) code_block -> group_proc . proc MASTER LPARENTESIS comentario list_statement RPARENTESIS PUNTO_COMA group_proc
    (7) proc -> . PROC

    PROC            shift and go to state 14

    proc                           shift and go to state 13

state 9

    (7) proc -> PROC .
    (8) group_proc -> PROC . VARIABLE LPARENTESIS COMENTARIO statement RPARENTESIS PUNTO_COMA group_proc

    MASTER          reduce using rule 7 (proc -> PROC .)
    VARIABLE        shift and go to state 15


state 10

    (9) group_proc -> empty .

    PROC            reduce using rule 9 (group_proc -> empty .)
    $end            reduce using rule 9 (group_proc -> empty .)
    PUNTO_COMA      reduce using rule 9 (group_proc -> empty .)


state 11

    (2) lista_comentarios -> comentario lista_comentarios .

    PROC            reduce using rule 2 (lista_comentarios -> comentario lista_comentarios .)


state 12

    (5) code_block -> proc MASTER . LPARENTESIS comentario list_statement RPARENTESIS PUNTO_COMA group_proc

    LPARENTESIS     shift and go to state 16


state 13

    (6) code_block -> group_proc proc . MASTER LPARENTESIS comentario list_statement RPARENTESIS PUNTO_COMA group_proc

    MASTER          shift and go to state 17


state 14

    (7) proc -> PROC .

    MASTER          reduce using rule 7 (proc -> PROC .)


state 15

    (8) group_proc -> PROC VARIABLE . LPARENTESIS COMENTARIO statement RPARENTESIS PUNTO_COMA group_proc

    LPARENTESIS     shift and go to state 18


state 16

    (5) code_block -> proc MASTER LPARENTESIS . comentario list_statement RPARENTESIS PUNTO_COMA group_proc
    (4) comentario -> . COMENTARIO

    COMENTARIO      shift and go to state 5

    comentario                     shift and go to state 19

state 17

    (6) code_block -> group_proc proc MASTER . LPARENTESIS comentario list_statement RPARENTESIS PUNTO_COMA group_proc

    LPARENTESIS     shift and go to state 20


state 18

    (8) group_proc -> PROC VARIABLE LPARENTESIS . COMENTARIO statement RPARENTESIS PUNTO_COMA group_proc

    COMENTARIO      shift and go to state 21


state 19

    (5) code_block -> proc MASTER LPARENTESIS comentario . list_statement RPARENTESIS PUNTO_COMA group_proc
    (14) list_statement -> . statement list_statement
    (15) list_statement -> . empty
    (16) statement -> . new_variable_statement
    (17) statement -> . values_statement
    (18) statement -> . alter_statement
    (19) statement -> . alterb_statement
    (20) statement -> . condition_statement
    (21) statement -> . istrue_statement
    (22) statement -> . repeat_statement
    (23) statement -> . until_statement
    (24) statement -> . while_statement
    (25) statement -> . case_statement
    (26) statement -> . printvalues_statement
    (27) statement -> . signal_statement
    (28) statement -> . viewsignal_statement
    (62) empty -> .
    (29) new_variable_statement -> . NEW VARIABLE COMA LPARENTESIS DATATYPE COMA value RPARENTESIS PUNTO_COMA
    (30) values_statement -> . VALUES LPARENTESIS VARIABLE COMA value RPARENTESIS PUNTO_COMA
    (31) alter_statement -> . ALTER LPARENTESIS VARIABLE COMA operador COMA value RPARENTESIS PUNTO_COMA
    (32) alterb_statement -> . ALTERB LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA
    (33) condition_statement -> . expression COND_NUMERICA expression
    (34) istrue_statement -> . ISTRUE LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA
    (35) repeat_statement -> . REPEAT LPARENTESIS list_statement break_statement RPARENTESIS PUNTO_COMA
    (37) until_statement -> . UNTIL list_statement condition PUNTO_COMA
    (39) while_statement -> . WHILE expression LPARENTESIS list_statement RPARENTESIS PUNTO_COMA
    (40) while_statement -> . WHILE istrue LPARENTESIS list_statement RPARENTESIS PUNTO_COMA
    (43) case_statement -> . CASE VARIABLE case_when_statements else_statement PUNTO_COMA
    (49) printvalues_statement -> . PRINTVALUES LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA
    (50) signal_statement -> . SIGNAL LPARENTESIS VARIABLE COMA value RPARENTESIS PUNTO_COMA
    (51) viewsignal_statement -> . VIEWSIGNAL LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA
    (52) expression -> . value
    (53) expression -> . VARIABLE
    (54) expression -> . LPARENTESIS expression RPARENTESIS
    (55) expression -> . expression + expression
    (56) expression -> . expression - expression
    (57) expression -> . expression * expression
    (58) expression -> . expression / expression
    (60) value -> . NUMERO
    (61) value -> . bool
    (41) bool -> . TRUE
    (42) bool -> . FALSE

    RPARENTESIS     reduce using rule 62 (empty -> .)
    NEW             shift and go to state 39
    VALUES          shift and go to state 42
    ALTER           shift and go to state 43
    ALTERB          shift and go to state 44
    ISTRUE          shift and go to state 46
    REPEAT          shift and go to state 47
    UNTIL           shift and go to state 48
    WHILE           shift and go to state 49
    CASE            shift and go to state 50
    PRINTVALUES     shift and go to state 51
    SIGNAL          shift and go to state 52
    VIEWSIGNAL      shift and go to state 53
    VARIABLE        shift and go to state 40
    LPARENTESIS     shift and go to state 22
    NUMERO          shift and go to state 54
    TRUE            shift and go to state 56
    FALSE           shift and go to state 57

    list_statement                 shift and go to state 23
    statement                      shift and go to state 24
    empty                          shift and go to state 25
    new_variable_statement         shift and go to state 26
    values_statement               shift and go to state 27
    alter_statement                shift and go to state 28
    alterb_statement               shift and go to state 29
    condition_statement            shift and go to state 30
    istrue_statement               shift and go to state 31
    repeat_statement               shift and go to state 32
    until_statement                shift and go to state 33
    while_statement                shift and go to state 34
    case_statement                 shift and go to state 35
    printvalues_statement          shift and go to state 36
    signal_statement               shift and go to state 37
    viewsignal_statement           shift and go to state 38
    value                          shift and go to state 41
    expression                     shift and go to state 45
    bool                           shift and go to state 55

state 20

    (6) code_block -> group_proc proc MASTER LPARENTESIS . comentario list_statement RPARENTESIS PUNTO_COMA group_proc
    (4) comentario -> . COMENTARIO

    COMENTARIO      shift and go to state 5

    comentario                     shift and go to state 58

state 21

    (8) group_proc -> PROC VARIABLE LPARENTESIS COMENTARIO . statement RPARENTESIS PUNTO_COMA group_proc
    (16) statement -> . new_variable_statement
    (17) statement -> . values_statement
    (18) statement -> . alter_statement
    (19) statement -> . alterb_statement
    (20) statement -> . condition_statement
    (21) statement -> . istrue_statement
    (22) statement -> . repeat_statement
    (23) statement -> . until_statement
    (24) statement -> . while_statement
    (25) statement -> . case_statement
    (26) statement -> . printvalues_statement
    (27) statement -> . signal_statement
    (28) statement -> . viewsignal_statement
    (29) new_variable_statement -> . NEW VARIABLE COMA LPARENTESIS DATATYPE COMA value RPARENTESIS PUNTO_COMA
    (30) values_statement -> . VALUES LPARENTESIS VARIABLE COMA value RPARENTESIS PUNTO_COMA
    (31) alter_statement -> . ALTER LPARENTESIS VARIABLE COMA operador COMA value RPARENTESIS PUNTO_COMA
    (32) alterb_statement -> . ALTERB LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA
    (33) condition_statement -> . expression COND_NUMERICA expression
    (34) istrue_statement -> . ISTRUE LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA
    (35) repeat_statement -> . REPEAT LPARENTESIS list_statement break_statement RPARENTESIS PUNTO_COMA
    (37) until_statement -> . UNTIL list_statement condition PUNTO_COMA
    (39) while_statement -> . WHILE expression LPARENTESIS list_statement RPARENTESIS PUNTO_COMA
    (40) while_statement -> . WHILE istrue LPARENTESIS list_statement RPARENTESIS PUNTO_COMA
    (43) case_statement -> . CASE VARIABLE case_when_statements else_statement PUNTO_COMA
    (49) printvalues_statement -> . PRINTVALUES LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA
    (50) signal_statement -> . SIGNAL LPARENTESIS VARIABLE COMA value RPARENTESIS PUNTO_COMA
    (51) viewsignal_statement -> . VIEWSIGNAL LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA
    (52) expression -> . value
    (53) expression -> . VARIABLE
    (54) expression -> . LPARENTESIS expression RPARENTESIS
    (55) expression -> . expression + expression
    (56) expression -> . expression - expression
    (57) expression -> . expression * expression
    (58) expression -> . expression / expression
    (60) value -> . NUMERO
    (61) value -> . bool
    (41) bool -> . TRUE
    (42) bool -> . FALSE

    NEW             shift and go to state 39
    VALUES          shift and go to state 42
    ALTER           shift and go to state 43
    ALTERB          shift and go to state 44
    ISTRUE          shift and go to state 46
    REPEAT          shift and go to state 47
    UNTIL           shift and go to state 48
    WHILE           shift and go to state 49
    CASE            shift and go to state 50
    PRINTVALUES     shift and go to state 51
    SIGNAL          shift and go to state 52
    VIEWSIGNAL      shift and go to state 53
    VARIABLE        shift and go to state 40
    LPARENTESIS     shift and go to state 22
    NUMERO          shift and go to state 54
    TRUE            shift and go to state 56
    FALSE           shift and go to state 57

    statement                      shift and go to state 59
    new_variable_statement         shift and go to state 26
    values_statement               shift and go to state 27
    alter_statement                shift and go to state 28
    alterb_statement               shift and go to state 29
    condition_statement            shift and go to state 30
    istrue_statement               shift and go to state 31
    repeat_statement               shift and go to state 32
    until_statement                shift and go to state 33
    while_statement                shift and go to state 34
    case_statement                 shift and go to state 35
    printvalues_statement          shift and go to state 36
    signal_statement               shift and go to state 37
    viewsignal_statement           shift and go to state 38
    value                          shift and go to state 41
    expression                     shift and go to state 45
    bool                           shift and go to state 55

state 22

    (54) expression -> LPARENTESIS . expression RPARENTESIS
    (52) expression -> . value
    (53) expression -> . VARIABLE
    (54) expression -> . LPARENTESIS expression RPARENTESIS
    (55) expression -> . expression + expression
    (56) expression -> . expression - expression
    (57) expression -> . expression * expression
    (58) expression -> . expression / expression
    (60) value -> . NUMERO
    (61) value -> . bool
    (41) bool -> . TRUE
    (42) bool -> . FALSE

    VARIABLE        shift and go to state 40
    LPARENTESIS     shift and go to state 22
    NUMERO          shift and go to state 54
    TRUE            shift and go to state 56
    FALSE           shift and go to state 57

    expression                     shift and go to state 60
    value                          shift and go to state 41
    bool                           shift and go to state 55

state 23

    (5) code_block -> proc MASTER LPARENTESIS comentario list_statement . RPARENTESIS PUNTO_COMA group_proc

    RPARENTESIS     shift and go to state 61


state 24

    (14) list_statement -> statement . list_statement
    (14) list_statement -> . statement list_statement
    (15) list_statement -> . empty
    (16) statement -> . new_variable_statement
    (17) statement -> . values_statement
    (18) statement -> . alter_statement
    (19) statement -> . alterb_statement
    (20) statement -> . condition_statement
    (21) statement -> . istrue_statement
    (22) statement -> . repeat_statement
    (23) statement -> . until_statement
    (24) statement -> . while_statement
    (25) statement -> . case_statement
    (26) statement -> . printvalues_statement
    (27) statement -> . signal_statement
    (28) statement -> . viewsignal_statement
    (62) empty -> .
    (29) new_variable_statement -> . NEW VARIABLE COMA LPARENTESIS DATATYPE COMA value RPARENTESIS PUNTO_COMA
    (30) values_statement -> . VALUES LPARENTESIS VARIABLE COMA value RPARENTESIS PUNTO_COMA
    (31) alter_statement -> . ALTER LPARENTESIS VARIABLE COMA operador COMA value RPARENTESIS PUNTO_COMA
    (32) alterb_statement -> . ALTERB LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA
    (33) condition_statement -> . expression COND_NUMERICA expression
    (34) istrue_statement -> . ISTRUE LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA
    (35) repeat_statement -> . REPEAT LPARENTESIS list_statement break_statement RPARENTESIS PUNTO_COMA
    (37) until_statement -> . UNTIL list_statement condition PUNTO_COMA
    (39) while_statement -> . WHILE expression LPARENTESIS list_statement RPARENTESIS PUNTO_COMA
    (40) while_statement -> . WHILE istrue LPARENTESIS list_statement RPARENTESIS PUNTO_COMA
    (43) case_statement -> . CASE VARIABLE case_when_statements else_statement PUNTO_COMA
    (49) printvalues_statement -> . PRINTVALUES LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA
    (50) signal_statement -> . SIGNAL LPARENTESIS VARIABLE COMA value RPARENTESIS PUNTO_COMA
    (51) viewsignal_statement -> . VIEWSIGNAL LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA
    (52) expression -> . value
    (53) expression -> . VARIABLE
    (54) expression -> . LPARENTESIS expression RPARENTESIS
    (55) expression -> . expression + expression
    (56) expression -> . expression - expression
    (57) expression -> . expression * expression
    (58) expression -> . expression / expression
    (60) value -> . NUMERO
    (61) value -> . bool
    (41) bool -> . TRUE
    (42) bool -> . FALSE

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for LPARENTESIS resolved as shift
  ! shift/reduce conflict for NUMERO resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
    RPARENTESIS     reduce using rule 62 (empty -> .)
    BREAK           reduce using rule 62 (empty -> .)
    WHEN            reduce using rule 62 (empty -> .)
    ELSE            reduce using rule 62 (empty -> .)
    PUNTO_COMA      reduce using rule 62 (empty -> .)
    NEW             shift and go to state 39
    VALUES          shift and go to state 42
    ALTER           shift and go to state 43
    ALTERB          shift and go to state 44
    ISTRUE          shift and go to state 46
    REPEAT          shift and go to state 47
    UNTIL           shift and go to state 48
    WHILE           shift and go to state 49
    CASE            shift and go to state 50
    PRINTVALUES     shift and go to state 51
    SIGNAL          shift and go to state 52
    VIEWSIGNAL      shift and go to state 53
    VARIABLE        shift and go to state 40
    LPARENTESIS     shift and go to state 22
    NUMERO          shift and go to state 54
    TRUE            shift and go to state 56
    FALSE           shift and go to state 57

  ! VARIABLE        [ reduce using rule 62 (empty -> .) ]
  ! LPARENTESIS     [ reduce using rule 62 (empty -> .) ]
  ! NUMERO          [ reduce using rule 62 (empty -> .) ]
  ! TRUE            [ reduce using rule 62 (empty -> .) ]
  ! FALSE           [ reduce using rule 62 (empty -> .) ]

    statement                      shift and go to state 24
    list_statement                 shift and go to state 62
    empty                          shift and go to state 25
    new_variable_statement         shift and go to state 26
    values_statement               shift and go to state 27
    alter_statement                shift and go to state 28
    alterb_statement               shift and go to state 29
    condition_statement            shift and go to state 30
    istrue_statement               shift and go to state 31
    repeat_statement               shift and go to state 32
    until_statement                shift and go to state 33
    while_statement                shift and go to state 34
    case_statement                 shift and go to state 35
    printvalues_statement          shift and go to state 36
    signal_statement               shift and go to state 37
    viewsignal_statement           shift and go to state 38
    value                          shift and go to state 41
    expression                     shift and go to state 45
    bool                           shift and go to state 55

state 25

    (15) list_statement -> empty .

    RPARENTESIS     reduce using rule 15 (list_statement -> empty .)
    VARIABLE        reduce using rule 15 (list_statement -> empty .)
    LPARENTESIS     reduce using rule 15 (list_statement -> empty .)
    NUMERO          reduce using rule 15 (list_statement -> empty .)
    TRUE            reduce using rule 15 (list_statement -> empty .)
    FALSE           reduce using rule 15 (list_statement -> empty .)
    BREAK           reduce using rule 15 (list_statement -> empty .)
    WHEN            reduce using rule 15 (list_statement -> empty .)
    ELSE            reduce using rule 15 (list_statement -> empty .)
    PUNTO_COMA      reduce using rule 15 (list_statement -> empty .)


state 26

    (16) statement -> new_variable_statement .

    NEW             reduce using rule 16 (statement -> new_variable_statement .)
    VALUES          reduce using rule 16 (statement -> new_variable_statement .)
    ALTER           reduce using rule 16 (statement -> new_variable_statement .)
    ALTERB          reduce using rule 16 (statement -> new_variable_statement .)
    ISTRUE          reduce using rule 16 (statement -> new_variable_statement .)
    REPEAT          reduce using rule 16 (statement -> new_variable_statement .)
    UNTIL           reduce using rule 16 (statement -> new_variable_statement .)
    WHILE           reduce using rule 16 (statement -> new_variable_statement .)
    CASE            reduce using rule 16 (statement -> new_variable_statement .)
    PRINTVALUES     reduce using rule 16 (statement -> new_variable_statement .)
    SIGNAL          reduce using rule 16 (statement -> new_variable_statement .)
    VIEWSIGNAL      reduce using rule 16 (statement -> new_variable_statement .)
    VARIABLE        reduce using rule 16 (statement -> new_variable_statement .)
    LPARENTESIS     reduce using rule 16 (statement -> new_variable_statement .)
    NUMERO          reduce using rule 16 (statement -> new_variable_statement .)
    TRUE            reduce using rule 16 (statement -> new_variable_statement .)
    FALSE           reduce using rule 16 (statement -> new_variable_statement .)
    RPARENTESIS     reduce using rule 16 (statement -> new_variable_statement .)
    BREAK           reduce using rule 16 (statement -> new_variable_statement .)
    WHEN            reduce using rule 16 (statement -> new_variable_statement .)
    ELSE            reduce using rule 16 (statement -> new_variable_statement .)
    PUNTO_COMA      reduce using rule 16 (statement -> new_variable_statement .)


state 27

    (17) statement -> values_statement .

    NEW             reduce using rule 17 (statement -> values_statement .)
    VALUES          reduce using rule 17 (statement -> values_statement .)
    ALTER           reduce using rule 17 (statement -> values_statement .)
    ALTERB          reduce using rule 17 (statement -> values_statement .)
    ISTRUE          reduce using rule 17 (statement -> values_statement .)
    REPEAT          reduce using rule 17 (statement -> values_statement .)
    UNTIL           reduce using rule 17 (statement -> values_statement .)
    WHILE           reduce using rule 17 (statement -> values_statement .)
    CASE            reduce using rule 17 (statement -> values_statement .)
    PRINTVALUES     reduce using rule 17 (statement -> values_statement .)
    SIGNAL          reduce using rule 17 (statement -> values_statement .)
    VIEWSIGNAL      reduce using rule 17 (statement -> values_statement .)
    VARIABLE        reduce using rule 17 (statement -> values_statement .)
    LPARENTESIS     reduce using rule 17 (statement -> values_statement .)
    NUMERO          reduce using rule 17 (statement -> values_statement .)
    TRUE            reduce using rule 17 (statement -> values_statement .)
    FALSE           reduce using rule 17 (statement -> values_statement .)
    RPARENTESIS     reduce using rule 17 (statement -> values_statement .)
    BREAK           reduce using rule 17 (statement -> values_statement .)
    WHEN            reduce using rule 17 (statement -> values_statement .)
    ELSE            reduce using rule 17 (statement -> values_statement .)
    PUNTO_COMA      reduce using rule 17 (statement -> values_statement .)


state 28

    (18) statement -> alter_statement .

    NEW             reduce using rule 18 (statement -> alter_statement .)
    VALUES          reduce using rule 18 (statement -> alter_statement .)
    ALTER           reduce using rule 18 (statement -> alter_statement .)
    ALTERB          reduce using rule 18 (statement -> alter_statement .)
    ISTRUE          reduce using rule 18 (statement -> alter_statement .)
    REPEAT          reduce using rule 18 (statement -> alter_statement .)
    UNTIL           reduce using rule 18 (statement -> alter_statement .)
    WHILE           reduce using rule 18 (statement -> alter_statement .)
    CASE            reduce using rule 18 (statement -> alter_statement .)
    PRINTVALUES     reduce using rule 18 (statement -> alter_statement .)
    SIGNAL          reduce using rule 18 (statement -> alter_statement .)
    VIEWSIGNAL      reduce using rule 18 (statement -> alter_statement .)
    VARIABLE        reduce using rule 18 (statement -> alter_statement .)
    LPARENTESIS     reduce using rule 18 (statement -> alter_statement .)
    NUMERO          reduce using rule 18 (statement -> alter_statement .)
    TRUE            reduce using rule 18 (statement -> alter_statement .)
    FALSE           reduce using rule 18 (statement -> alter_statement .)
    RPARENTESIS     reduce using rule 18 (statement -> alter_statement .)
    BREAK           reduce using rule 18 (statement -> alter_statement .)
    WHEN            reduce using rule 18 (statement -> alter_statement .)
    ELSE            reduce using rule 18 (statement -> alter_statement .)
    PUNTO_COMA      reduce using rule 18 (statement -> alter_statement .)


state 29

    (19) statement -> alterb_statement .

    NEW             reduce using rule 19 (statement -> alterb_statement .)
    VALUES          reduce using rule 19 (statement -> alterb_statement .)
    ALTER           reduce using rule 19 (statement -> alterb_statement .)
    ALTERB          reduce using rule 19 (statement -> alterb_statement .)
    ISTRUE          reduce using rule 19 (statement -> alterb_statement .)
    REPEAT          reduce using rule 19 (statement -> alterb_statement .)
    UNTIL           reduce using rule 19 (statement -> alterb_statement .)
    WHILE           reduce using rule 19 (statement -> alterb_statement .)
    CASE            reduce using rule 19 (statement -> alterb_statement .)
    PRINTVALUES     reduce using rule 19 (statement -> alterb_statement .)
    SIGNAL          reduce using rule 19 (statement -> alterb_statement .)
    VIEWSIGNAL      reduce using rule 19 (statement -> alterb_statement .)
    VARIABLE        reduce using rule 19 (statement -> alterb_statement .)
    LPARENTESIS     reduce using rule 19 (statement -> alterb_statement .)
    NUMERO          reduce using rule 19 (statement -> alterb_statement .)
    TRUE            reduce using rule 19 (statement -> alterb_statement .)
    FALSE           reduce using rule 19 (statement -> alterb_statement .)
    RPARENTESIS     reduce using rule 19 (statement -> alterb_statement .)
    BREAK           reduce using rule 19 (statement -> alterb_statement .)
    WHEN            reduce using rule 19 (statement -> alterb_statement .)
    ELSE            reduce using rule 19 (statement -> alterb_statement .)
    PUNTO_COMA      reduce using rule 19 (statement -> alterb_statement .)


state 30

    (20) statement -> condition_statement .

    NEW             reduce using rule 20 (statement -> condition_statement .)
    VALUES          reduce using rule 20 (statement -> condition_statement .)
    ALTER           reduce using rule 20 (statement -> condition_statement .)
    ALTERB          reduce using rule 20 (statement -> condition_statement .)
    ISTRUE          reduce using rule 20 (statement -> condition_statement .)
    REPEAT          reduce using rule 20 (statement -> condition_statement .)
    UNTIL           reduce using rule 20 (statement -> condition_statement .)
    WHILE           reduce using rule 20 (statement -> condition_statement .)
    CASE            reduce using rule 20 (statement -> condition_statement .)
    PRINTVALUES     reduce using rule 20 (statement -> condition_statement .)
    SIGNAL          reduce using rule 20 (statement -> condition_statement .)
    VIEWSIGNAL      reduce using rule 20 (statement -> condition_statement .)
    VARIABLE        reduce using rule 20 (statement -> condition_statement .)
    LPARENTESIS     reduce using rule 20 (statement -> condition_statement .)
    NUMERO          reduce using rule 20 (statement -> condition_statement .)
    TRUE            reduce using rule 20 (statement -> condition_statement .)
    FALSE           reduce using rule 20 (statement -> condition_statement .)
    RPARENTESIS     reduce using rule 20 (statement -> condition_statement .)
    BREAK           reduce using rule 20 (statement -> condition_statement .)
    WHEN            reduce using rule 20 (statement -> condition_statement .)
    ELSE            reduce using rule 20 (statement -> condition_statement .)
    PUNTO_COMA      reduce using rule 20 (statement -> condition_statement .)


state 31

    (21) statement -> istrue_statement .

    NEW             reduce using rule 21 (statement -> istrue_statement .)
    VALUES          reduce using rule 21 (statement -> istrue_statement .)
    ALTER           reduce using rule 21 (statement -> istrue_statement .)
    ALTERB          reduce using rule 21 (statement -> istrue_statement .)
    ISTRUE          reduce using rule 21 (statement -> istrue_statement .)
    REPEAT          reduce using rule 21 (statement -> istrue_statement .)
    UNTIL           reduce using rule 21 (statement -> istrue_statement .)
    WHILE           reduce using rule 21 (statement -> istrue_statement .)
    CASE            reduce using rule 21 (statement -> istrue_statement .)
    PRINTVALUES     reduce using rule 21 (statement -> istrue_statement .)
    SIGNAL          reduce using rule 21 (statement -> istrue_statement .)
    VIEWSIGNAL      reduce using rule 21 (statement -> istrue_statement .)
    VARIABLE        reduce using rule 21 (statement -> istrue_statement .)
    LPARENTESIS     reduce using rule 21 (statement -> istrue_statement .)
    NUMERO          reduce using rule 21 (statement -> istrue_statement .)
    TRUE            reduce using rule 21 (statement -> istrue_statement .)
    FALSE           reduce using rule 21 (statement -> istrue_statement .)
    RPARENTESIS     reduce using rule 21 (statement -> istrue_statement .)
    BREAK           reduce using rule 21 (statement -> istrue_statement .)
    WHEN            reduce using rule 21 (statement -> istrue_statement .)
    ELSE            reduce using rule 21 (statement -> istrue_statement .)
    PUNTO_COMA      reduce using rule 21 (statement -> istrue_statement .)


state 32

    (22) statement -> repeat_statement .

    NEW             reduce using rule 22 (statement -> repeat_statement .)
    VALUES          reduce using rule 22 (statement -> repeat_statement .)
    ALTER           reduce using rule 22 (statement -> repeat_statement .)
    ALTERB          reduce using rule 22 (statement -> repeat_statement .)
    ISTRUE          reduce using rule 22 (statement -> repeat_statement .)
    REPEAT          reduce using rule 22 (statement -> repeat_statement .)
    UNTIL           reduce using rule 22 (statement -> repeat_statement .)
    WHILE           reduce using rule 22 (statement -> repeat_statement .)
    CASE            reduce using rule 22 (statement -> repeat_statement .)
    PRINTVALUES     reduce using rule 22 (statement -> repeat_statement .)
    SIGNAL          reduce using rule 22 (statement -> repeat_statement .)
    VIEWSIGNAL      reduce using rule 22 (statement -> repeat_statement .)
    VARIABLE        reduce using rule 22 (statement -> repeat_statement .)
    LPARENTESIS     reduce using rule 22 (statement -> repeat_statement .)
    NUMERO          reduce using rule 22 (statement -> repeat_statement .)
    TRUE            reduce using rule 22 (statement -> repeat_statement .)
    FALSE           reduce using rule 22 (statement -> repeat_statement .)
    RPARENTESIS     reduce using rule 22 (statement -> repeat_statement .)
    BREAK           reduce using rule 22 (statement -> repeat_statement .)
    WHEN            reduce using rule 22 (statement -> repeat_statement .)
    ELSE            reduce using rule 22 (statement -> repeat_statement .)
    PUNTO_COMA      reduce using rule 22 (statement -> repeat_statement .)


state 33

    (23) statement -> until_statement .

    NEW             reduce using rule 23 (statement -> until_statement .)
    VALUES          reduce using rule 23 (statement -> until_statement .)
    ALTER           reduce using rule 23 (statement -> until_statement .)
    ALTERB          reduce using rule 23 (statement -> until_statement .)
    ISTRUE          reduce using rule 23 (statement -> until_statement .)
    REPEAT          reduce using rule 23 (statement -> until_statement .)
    UNTIL           reduce using rule 23 (statement -> until_statement .)
    WHILE           reduce using rule 23 (statement -> until_statement .)
    CASE            reduce using rule 23 (statement -> until_statement .)
    PRINTVALUES     reduce using rule 23 (statement -> until_statement .)
    SIGNAL          reduce using rule 23 (statement -> until_statement .)
    VIEWSIGNAL      reduce using rule 23 (statement -> until_statement .)
    VARIABLE        reduce using rule 23 (statement -> until_statement .)
    LPARENTESIS     reduce using rule 23 (statement -> until_statement .)
    NUMERO          reduce using rule 23 (statement -> until_statement .)
    TRUE            reduce using rule 23 (statement -> until_statement .)
    FALSE           reduce using rule 23 (statement -> until_statement .)
    RPARENTESIS     reduce using rule 23 (statement -> until_statement .)
    BREAK           reduce using rule 23 (statement -> until_statement .)
    WHEN            reduce using rule 23 (statement -> until_statement .)
    ELSE            reduce using rule 23 (statement -> until_statement .)
    PUNTO_COMA      reduce using rule 23 (statement -> until_statement .)


state 34

    (24) statement -> while_statement .

    NEW             reduce using rule 24 (statement -> while_statement .)
    VALUES          reduce using rule 24 (statement -> while_statement .)
    ALTER           reduce using rule 24 (statement -> while_statement .)
    ALTERB          reduce using rule 24 (statement -> while_statement .)
    ISTRUE          reduce using rule 24 (statement -> while_statement .)
    REPEAT          reduce using rule 24 (statement -> while_statement .)
    UNTIL           reduce using rule 24 (statement -> while_statement .)
    WHILE           reduce using rule 24 (statement -> while_statement .)
    CASE            reduce using rule 24 (statement -> while_statement .)
    PRINTVALUES     reduce using rule 24 (statement -> while_statement .)
    SIGNAL          reduce using rule 24 (statement -> while_statement .)
    VIEWSIGNAL      reduce using rule 24 (statement -> while_statement .)
    VARIABLE        reduce using rule 24 (statement -> while_statement .)
    LPARENTESIS     reduce using rule 24 (statement -> while_statement .)
    NUMERO          reduce using rule 24 (statement -> while_statement .)
    TRUE            reduce using rule 24 (statement -> while_statement .)
    FALSE           reduce using rule 24 (statement -> while_statement .)
    RPARENTESIS     reduce using rule 24 (statement -> while_statement .)
    BREAK           reduce using rule 24 (statement -> while_statement .)
    WHEN            reduce using rule 24 (statement -> while_statement .)
    ELSE            reduce using rule 24 (statement -> while_statement .)
    PUNTO_COMA      reduce using rule 24 (statement -> while_statement .)


state 35

    (25) statement -> case_statement .

    NEW             reduce using rule 25 (statement -> case_statement .)
    VALUES          reduce using rule 25 (statement -> case_statement .)
    ALTER           reduce using rule 25 (statement -> case_statement .)
    ALTERB          reduce using rule 25 (statement -> case_statement .)
    ISTRUE          reduce using rule 25 (statement -> case_statement .)
    REPEAT          reduce using rule 25 (statement -> case_statement .)
    UNTIL           reduce using rule 25 (statement -> case_statement .)
    WHILE           reduce using rule 25 (statement -> case_statement .)
    CASE            reduce using rule 25 (statement -> case_statement .)
    PRINTVALUES     reduce using rule 25 (statement -> case_statement .)
    SIGNAL          reduce using rule 25 (statement -> case_statement .)
    VIEWSIGNAL      reduce using rule 25 (statement -> case_statement .)
    VARIABLE        reduce using rule 25 (statement -> case_statement .)
    LPARENTESIS     reduce using rule 25 (statement -> case_statement .)
    NUMERO          reduce using rule 25 (statement -> case_statement .)
    TRUE            reduce using rule 25 (statement -> case_statement .)
    FALSE           reduce using rule 25 (statement -> case_statement .)
    RPARENTESIS     reduce using rule 25 (statement -> case_statement .)
    BREAK           reduce using rule 25 (statement -> case_statement .)
    WHEN            reduce using rule 25 (statement -> case_statement .)
    ELSE            reduce using rule 25 (statement -> case_statement .)
    PUNTO_COMA      reduce using rule 25 (statement -> case_statement .)


state 36

    (26) statement -> printvalues_statement .

    NEW             reduce using rule 26 (statement -> printvalues_statement .)
    VALUES          reduce using rule 26 (statement -> printvalues_statement .)
    ALTER           reduce using rule 26 (statement -> printvalues_statement .)
    ALTERB          reduce using rule 26 (statement -> printvalues_statement .)
    ISTRUE          reduce using rule 26 (statement -> printvalues_statement .)
    REPEAT          reduce using rule 26 (statement -> printvalues_statement .)
    UNTIL           reduce using rule 26 (statement -> printvalues_statement .)
    WHILE           reduce using rule 26 (statement -> printvalues_statement .)
    CASE            reduce using rule 26 (statement -> printvalues_statement .)
    PRINTVALUES     reduce using rule 26 (statement -> printvalues_statement .)
    SIGNAL          reduce using rule 26 (statement -> printvalues_statement .)
    VIEWSIGNAL      reduce using rule 26 (statement -> printvalues_statement .)
    VARIABLE        reduce using rule 26 (statement -> printvalues_statement .)
    LPARENTESIS     reduce using rule 26 (statement -> printvalues_statement .)
    NUMERO          reduce using rule 26 (statement -> printvalues_statement .)
    TRUE            reduce using rule 26 (statement -> printvalues_statement .)
    FALSE           reduce using rule 26 (statement -> printvalues_statement .)
    RPARENTESIS     reduce using rule 26 (statement -> printvalues_statement .)
    BREAK           reduce using rule 26 (statement -> printvalues_statement .)
    WHEN            reduce using rule 26 (statement -> printvalues_statement .)
    ELSE            reduce using rule 26 (statement -> printvalues_statement .)
    PUNTO_COMA      reduce using rule 26 (statement -> printvalues_statement .)


state 37

    (27) statement -> signal_statement .

    NEW             reduce using rule 27 (statement -> signal_statement .)
    VALUES          reduce using rule 27 (statement -> signal_statement .)
    ALTER           reduce using rule 27 (statement -> signal_statement .)
    ALTERB          reduce using rule 27 (statement -> signal_statement .)
    ISTRUE          reduce using rule 27 (statement -> signal_statement .)
    REPEAT          reduce using rule 27 (statement -> signal_statement .)
    UNTIL           reduce using rule 27 (statement -> signal_statement .)
    WHILE           reduce using rule 27 (statement -> signal_statement .)
    CASE            reduce using rule 27 (statement -> signal_statement .)
    PRINTVALUES     reduce using rule 27 (statement -> signal_statement .)
    SIGNAL          reduce using rule 27 (statement -> signal_statement .)
    VIEWSIGNAL      reduce using rule 27 (statement -> signal_statement .)
    VARIABLE        reduce using rule 27 (statement -> signal_statement .)
    LPARENTESIS     reduce using rule 27 (statement -> signal_statement .)
    NUMERO          reduce using rule 27 (statement -> signal_statement .)
    TRUE            reduce using rule 27 (statement -> signal_statement .)
    FALSE           reduce using rule 27 (statement -> signal_statement .)
    RPARENTESIS     reduce using rule 27 (statement -> signal_statement .)
    BREAK           reduce using rule 27 (statement -> signal_statement .)
    WHEN            reduce using rule 27 (statement -> signal_statement .)
    ELSE            reduce using rule 27 (statement -> signal_statement .)
    PUNTO_COMA      reduce using rule 27 (statement -> signal_statement .)


state 38

    (28) statement -> viewsignal_statement .

    NEW             reduce using rule 28 (statement -> viewsignal_statement .)
    VALUES          reduce using rule 28 (statement -> viewsignal_statement .)
    ALTER           reduce using rule 28 (statement -> viewsignal_statement .)
    ALTERB          reduce using rule 28 (statement -> viewsignal_statement .)
    ISTRUE          reduce using rule 28 (statement -> viewsignal_statement .)
    REPEAT          reduce using rule 28 (statement -> viewsignal_statement .)
    UNTIL           reduce using rule 28 (statement -> viewsignal_statement .)
    WHILE           reduce using rule 28 (statement -> viewsignal_statement .)
    CASE            reduce using rule 28 (statement -> viewsignal_statement .)
    PRINTVALUES     reduce using rule 28 (statement -> viewsignal_statement .)
    SIGNAL          reduce using rule 28 (statement -> viewsignal_statement .)
    VIEWSIGNAL      reduce using rule 28 (statement -> viewsignal_statement .)
    VARIABLE        reduce using rule 28 (statement -> viewsignal_statement .)
    LPARENTESIS     reduce using rule 28 (statement -> viewsignal_statement .)
    NUMERO          reduce using rule 28 (statement -> viewsignal_statement .)
    TRUE            reduce using rule 28 (statement -> viewsignal_statement .)
    FALSE           reduce using rule 28 (statement -> viewsignal_statement .)
    RPARENTESIS     reduce using rule 28 (statement -> viewsignal_statement .)
    BREAK           reduce using rule 28 (statement -> viewsignal_statement .)
    WHEN            reduce using rule 28 (statement -> viewsignal_statement .)
    ELSE            reduce using rule 28 (statement -> viewsignal_statement .)
    PUNTO_COMA      reduce using rule 28 (statement -> viewsignal_statement .)


state 39

    (29) new_variable_statement -> NEW . VARIABLE COMA LPARENTESIS DATATYPE COMA value RPARENTESIS PUNTO_COMA

    VARIABLE        shift and go to state 63


state 40

    (53) expression -> VARIABLE .

    COND_NUMERICA   reduce using rule 53 (expression -> VARIABLE .)
    +               reduce using rule 53 (expression -> VARIABLE .)
    -               reduce using rule 53 (expression -> VARIABLE .)
    *               reduce using rule 53 (expression -> VARIABLE .)
    /               reduce using rule 53 (expression -> VARIABLE .)
    RPARENTESIS     reduce using rule 53 (expression -> VARIABLE .)
    LPARENTESIS     reduce using rule 53 (expression -> VARIABLE .)
    NEW             reduce using rule 53 (expression -> VARIABLE .)
    VALUES          reduce using rule 53 (expression -> VARIABLE .)
    ALTER           reduce using rule 53 (expression -> VARIABLE .)
    ALTERB          reduce using rule 53 (expression -> VARIABLE .)
    ISTRUE          reduce using rule 53 (expression -> VARIABLE .)
    REPEAT          reduce using rule 53 (expression -> VARIABLE .)
    UNTIL           reduce using rule 53 (expression -> VARIABLE .)
    WHILE           reduce using rule 53 (expression -> VARIABLE .)
    CASE            reduce using rule 53 (expression -> VARIABLE .)
    PRINTVALUES     reduce using rule 53 (expression -> VARIABLE .)
    SIGNAL          reduce using rule 53 (expression -> VARIABLE .)
    VIEWSIGNAL      reduce using rule 53 (expression -> VARIABLE .)
    VARIABLE        reduce using rule 53 (expression -> VARIABLE .)
    NUMERO          reduce using rule 53 (expression -> VARIABLE .)
    TRUE            reduce using rule 53 (expression -> VARIABLE .)
    FALSE           reduce using rule 53 (expression -> VARIABLE .)
    BREAK           reduce using rule 53 (expression -> VARIABLE .)
    WHEN            reduce using rule 53 (expression -> VARIABLE .)
    ELSE            reduce using rule 53 (expression -> VARIABLE .)
    PUNTO_COMA      reduce using rule 53 (expression -> VARIABLE .)


state 41

    (52) expression -> value .

    COND_NUMERICA   reduce using rule 52 (expression -> value .)
    +               reduce using rule 52 (expression -> value .)
    -               reduce using rule 52 (expression -> value .)
    *               reduce using rule 52 (expression -> value .)
    /               reduce using rule 52 (expression -> value .)
    RPARENTESIS     reduce using rule 52 (expression -> value .)
    LPARENTESIS     reduce using rule 52 (expression -> value .)
    NEW             reduce using rule 52 (expression -> value .)
    VALUES          reduce using rule 52 (expression -> value .)
    ALTER           reduce using rule 52 (expression -> value .)
    ALTERB          reduce using rule 52 (expression -> value .)
    ISTRUE          reduce using rule 52 (expression -> value .)
    REPEAT          reduce using rule 52 (expression -> value .)
    UNTIL           reduce using rule 52 (expression -> value .)
    WHILE           reduce using rule 52 (expression -> value .)
    CASE            reduce using rule 52 (expression -> value .)
    PRINTVALUES     reduce using rule 52 (expression -> value .)
    SIGNAL          reduce using rule 52 (expression -> value .)
    VIEWSIGNAL      reduce using rule 52 (expression -> value .)
    VARIABLE        reduce using rule 52 (expression -> value .)
    NUMERO          reduce using rule 52 (expression -> value .)
    TRUE            reduce using rule 52 (expression -> value .)
    FALSE           reduce using rule 52 (expression -> value .)
    BREAK           reduce using rule 52 (expression -> value .)
    WHEN            reduce using rule 52 (expression -> value .)
    ELSE            reduce using rule 52 (expression -> value .)
    PUNTO_COMA      reduce using rule 52 (expression -> value .)


state 42

    (30) values_statement -> VALUES . LPARENTESIS VARIABLE COMA value RPARENTESIS PUNTO_COMA

    LPARENTESIS     shift and go to state 64


state 43

    (31) alter_statement -> ALTER . LPARENTESIS VARIABLE COMA operador COMA value RPARENTESIS PUNTO_COMA

    LPARENTESIS     shift and go to state 65


state 44

    (32) alterb_statement -> ALTERB . LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA

    LPARENTESIS     shift and go to state 66


state 45

    (33) condition_statement -> expression . COND_NUMERICA expression
    (55) expression -> expression . + expression
    (56) expression -> expression . - expression
    (57) expression -> expression . * expression
    (58) expression -> expression . / expression

    COND_NUMERICA   shift and go to state 67
    +               shift and go to state 68
    -               shift and go to state 69
    *               shift and go to state 70
    /               shift and go to state 71


state 46

    (34) istrue_statement -> ISTRUE . LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA

    LPARENTESIS     shift and go to state 72


state 47

    (35) repeat_statement -> REPEAT . LPARENTESIS list_statement break_statement RPARENTESIS PUNTO_COMA

    LPARENTESIS     shift and go to state 73


state 48

    (37) until_statement -> UNTIL . list_statement condition PUNTO_COMA
    (14) list_statement -> . statement list_statement
    (15) list_statement -> . empty
    (16) statement -> . new_variable_statement
    (17) statement -> . values_statement
    (18) statement -> . alter_statement
    (19) statement -> . alterb_statement
    (20) statement -> . condition_statement
    (21) statement -> . istrue_statement
    (22) statement -> . repeat_statement
    (23) statement -> . until_statement
    (24) statement -> . while_statement
    (25) statement -> . case_statement
    (26) statement -> . printvalues_statement
    (27) statement -> . signal_statement
    (28) statement -> . viewsignal_statement
    (62) empty -> .
    (29) new_variable_statement -> . NEW VARIABLE COMA LPARENTESIS DATATYPE COMA value RPARENTESIS PUNTO_COMA
    (30) values_statement -> . VALUES LPARENTESIS VARIABLE COMA value RPARENTESIS PUNTO_COMA
    (31) alter_statement -> . ALTER LPARENTESIS VARIABLE COMA operador COMA value RPARENTESIS PUNTO_COMA
    (32) alterb_statement -> . ALTERB LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA
    (33) condition_statement -> . expression COND_NUMERICA expression
    (34) istrue_statement -> . ISTRUE LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA
    (35) repeat_statement -> . REPEAT LPARENTESIS list_statement break_statement RPARENTESIS PUNTO_COMA
    (37) until_statement -> . UNTIL list_statement condition PUNTO_COMA
    (39) while_statement -> . WHILE expression LPARENTESIS list_statement RPARENTESIS PUNTO_COMA
    (40) while_statement -> . WHILE istrue LPARENTESIS list_statement RPARENTESIS PUNTO_COMA
    (43) case_statement -> . CASE VARIABLE case_when_statements else_statement PUNTO_COMA
    (49) printvalues_statement -> . PRINTVALUES LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA
    (50) signal_statement -> . SIGNAL LPARENTESIS VARIABLE COMA value RPARENTESIS PUNTO_COMA
    (51) viewsignal_statement -> . VIEWSIGNAL LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA
    (52) expression -> . value
    (53) expression -> . VARIABLE
    (54) expression -> . LPARENTESIS expression RPARENTESIS
    (55) expression -> . expression + expression
    (56) expression -> . expression - expression
    (57) expression -> . expression * expression
    (58) expression -> . expression / expression
    (60) value -> . NUMERO
    (61) value -> . bool
    (41) bool -> . TRUE
    (42) bool -> . FALSE

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for LPARENTESIS resolved as shift
  ! shift/reduce conflict for NUMERO resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
    NEW             shift and go to state 39
    VALUES          shift and go to state 42
    ALTER           shift and go to state 43
    ALTERB          shift and go to state 44
    ISTRUE          shift and go to state 46
    REPEAT          shift and go to state 47
    UNTIL           shift and go to state 48
    WHILE           shift and go to state 49
    CASE            shift and go to state 50
    PRINTVALUES     shift and go to state 51
    SIGNAL          shift and go to state 52
    VIEWSIGNAL      shift and go to state 53
    VARIABLE        shift and go to state 40
    LPARENTESIS     shift and go to state 22
    NUMERO          shift and go to state 54
    TRUE            shift and go to state 56
    FALSE           shift and go to state 57

  ! VARIABLE        [ reduce using rule 62 (empty -> .) ]
  ! LPARENTESIS     [ reduce using rule 62 (empty -> .) ]
  ! NUMERO          [ reduce using rule 62 (empty -> .) ]
  ! TRUE            [ reduce using rule 62 (empty -> .) ]
  ! FALSE           [ reduce using rule 62 (empty -> .) ]

    list_statement                 shift and go to state 74
    statement                      shift and go to state 24
    empty                          shift and go to state 25
    new_variable_statement         shift and go to state 26
    values_statement               shift and go to state 27
    alter_statement                shift and go to state 28
    alterb_statement               shift and go to state 29
    condition_statement            shift and go to state 30
    istrue_statement               shift and go to state 31
    repeat_statement               shift and go to state 32
    until_statement                shift and go to state 33
    while_statement                shift and go to state 34
    case_statement                 shift and go to state 35
    printvalues_statement          shift and go to state 36
    signal_statement               shift and go to state 37
    viewsignal_statement           shift and go to state 38
    value                          shift and go to state 41
    expression                     shift and go to state 45
    bool                           shift and go to state 55

state 49

    (39) while_statement -> WHILE . expression LPARENTESIS list_statement RPARENTESIS PUNTO_COMA
    (40) while_statement -> WHILE . istrue LPARENTESIS list_statement RPARENTESIS PUNTO_COMA
    (52) expression -> . value
    (53) expression -> . VARIABLE
    (54) expression -> . LPARENTESIS expression RPARENTESIS
    (55) expression -> . expression + expression
    (56) expression -> . expression - expression
    (57) expression -> . expression * expression
    (58) expression -> . expression / expression
    (59) istrue -> . ISTRUE LPARENTESIS VARIABLE RPARENTESIS
    (60) value -> . NUMERO
    (61) value -> . bool
    (41) bool -> . TRUE
    (42) bool -> . FALSE

    VARIABLE        shift and go to state 40
    LPARENTESIS     shift and go to state 22
    ISTRUE          shift and go to state 77
    NUMERO          shift and go to state 54
    TRUE            shift and go to state 56
    FALSE           shift and go to state 57

    expression                     shift and go to state 75
    istrue                         shift and go to state 76
    value                          shift and go to state 41
    bool                           shift and go to state 55

state 50

    (43) case_statement -> CASE . VARIABLE case_when_statements else_statement PUNTO_COMA

    VARIABLE        shift and go to state 78


state 51

    (49) printvalues_statement -> PRINTVALUES . LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA

    LPARENTESIS     shift and go to state 79


state 52

    (50) signal_statement -> SIGNAL . LPARENTESIS VARIABLE COMA value RPARENTESIS PUNTO_COMA

    LPARENTESIS     shift and go to state 80


state 53

    (51) viewsignal_statement -> VIEWSIGNAL . LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA

    LPARENTESIS     shift and go to state 81


state 54

    (60) value -> NUMERO .

    COND_NUMERICA   reduce using rule 60 (value -> NUMERO .)
    +               reduce using rule 60 (value -> NUMERO .)
    -               reduce using rule 60 (value -> NUMERO .)
    *               reduce using rule 60 (value -> NUMERO .)
    /               reduce using rule 60 (value -> NUMERO .)
    RPARENTESIS     reduce using rule 60 (value -> NUMERO .)
    LPARENTESIS     reduce using rule 60 (value -> NUMERO .)
    NEW             reduce using rule 60 (value -> NUMERO .)
    VALUES          reduce using rule 60 (value -> NUMERO .)
    ALTER           reduce using rule 60 (value -> NUMERO .)
    ALTERB          reduce using rule 60 (value -> NUMERO .)
    ISTRUE          reduce using rule 60 (value -> NUMERO .)
    REPEAT          reduce using rule 60 (value -> NUMERO .)
    UNTIL           reduce using rule 60 (value -> NUMERO .)
    WHILE           reduce using rule 60 (value -> NUMERO .)
    CASE            reduce using rule 60 (value -> NUMERO .)
    PRINTVALUES     reduce using rule 60 (value -> NUMERO .)
    SIGNAL          reduce using rule 60 (value -> NUMERO .)
    VIEWSIGNAL      reduce using rule 60 (value -> NUMERO .)
    VARIABLE        reduce using rule 60 (value -> NUMERO .)
    NUMERO          reduce using rule 60 (value -> NUMERO .)
    TRUE            reduce using rule 60 (value -> NUMERO .)
    FALSE           reduce using rule 60 (value -> NUMERO .)
    BREAK           reduce using rule 60 (value -> NUMERO .)
    WHEN            reduce using rule 60 (value -> NUMERO .)
    ELSE            reduce using rule 60 (value -> NUMERO .)
    PUNTO_COMA      reduce using rule 60 (value -> NUMERO .)
    THEN            reduce using rule 60 (value -> NUMERO .)


state 55

    (61) value -> bool .

    COND_NUMERICA   reduce using rule 61 (value -> bool .)
    +               reduce using rule 61 (value -> bool .)
    -               reduce using rule 61 (value -> bool .)
    *               reduce using rule 61 (value -> bool .)
    /               reduce using rule 61 (value -> bool .)
    RPARENTESIS     reduce using rule 61 (value -> bool .)
    LPARENTESIS     reduce using rule 61 (value -> bool .)
    NEW             reduce using rule 61 (value -> bool .)
    VALUES          reduce using rule 61 (value -> bool .)
    ALTER           reduce using rule 61 (value -> bool .)
    ALTERB          reduce using rule 61 (value -> bool .)
    ISTRUE          reduce using rule 61 (value -> bool .)
    REPEAT          reduce using rule 61 (value -> bool .)
    UNTIL           reduce using rule 61 (value -> bool .)
    WHILE           reduce using rule 61 (value -> bool .)
    CASE            reduce using rule 61 (value -> bool .)
    PRINTVALUES     reduce using rule 61 (value -> bool .)
    SIGNAL          reduce using rule 61 (value -> bool .)
    VIEWSIGNAL      reduce using rule 61 (value -> bool .)
    VARIABLE        reduce using rule 61 (value -> bool .)
    NUMERO          reduce using rule 61 (value -> bool .)
    TRUE            reduce using rule 61 (value -> bool .)
    FALSE           reduce using rule 61 (value -> bool .)
    BREAK           reduce using rule 61 (value -> bool .)
    WHEN            reduce using rule 61 (value -> bool .)
    ELSE            reduce using rule 61 (value -> bool .)
    PUNTO_COMA      reduce using rule 61 (value -> bool .)
    THEN            reduce using rule 61 (value -> bool .)


state 56

    (41) bool -> TRUE .

    COND_NUMERICA   reduce using rule 41 (bool -> TRUE .)
    +               reduce using rule 41 (bool -> TRUE .)
    -               reduce using rule 41 (bool -> TRUE .)
    *               reduce using rule 41 (bool -> TRUE .)
    /               reduce using rule 41 (bool -> TRUE .)
    RPARENTESIS     reduce using rule 41 (bool -> TRUE .)
    LPARENTESIS     reduce using rule 41 (bool -> TRUE .)
    NEW             reduce using rule 41 (bool -> TRUE .)
    VALUES          reduce using rule 41 (bool -> TRUE .)
    ALTER           reduce using rule 41 (bool -> TRUE .)
    ALTERB          reduce using rule 41 (bool -> TRUE .)
    ISTRUE          reduce using rule 41 (bool -> TRUE .)
    REPEAT          reduce using rule 41 (bool -> TRUE .)
    UNTIL           reduce using rule 41 (bool -> TRUE .)
    WHILE           reduce using rule 41 (bool -> TRUE .)
    CASE            reduce using rule 41 (bool -> TRUE .)
    PRINTVALUES     reduce using rule 41 (bool -> TRUE .)
    SIGNAL          reduce using rule 41 (bool -> TRUE .)
    VIEWSIGNAL      reduce using rule 41 (bool -> TRUE .)
    VARIABLE        reduce using rule 41 (bool -> TRUE .)
    NUMERO          reduce using rule 41 (bool -> TRUE .)
    TRUE            reduce using rule 41 (bool -> TRUE .)
    FALSE           reduce using rule 41 (bool -> TRUE .)
    BREAK           reduce using rule 41 (bool -> TRUE .)
    WHEN            reduce using rule 41 (bool -> TRUE .)
    ELSE            reduce using rule 41 (bool -> TRUE .)
    PUNTO_COMA      reduce using rule 41 (bool -> TRUE .)
    THEN            reduce using rule 41 (bool -> TRUE .)


state 57

    (42) bool -> FALSE .

    COND_NUMERICA   reduce using rule 42 (bool -> FALSE .)
    +               reduce using rule 42 (bool -> FALSE .)
    -               reduce using rule 42 (bool -> FALSE .)
    *               reduce using rule 42 (bool -> FALSE .)
    /               reduce using rule 42 (bool -> FALSE .)
    RPARENTESIS     reduce using rule 42 (bool -> FALSE .)
    LPARENTESIS     reduce using rule 42 (bool -> FALSE .)
    NEW             reduce using rule 42 (bool -> FALSE .)
    VALUES          reduce using rule 42 (bool -> FALSE .)
    ALTER           reduce using rule 42 (bool -> FALSE .)
    ALTERB          reduce using rule 42 (bool -> FALSE .)
    ISTRUE          reduce using rule 42 (bool -> FALSE .)
    REPEAT          reduce using rule 42 (bool -> FALSE .)
    UNTIL           reduce using rule 42 (bool -> FALSE .)
    WHILE           reduce using rule 42 (bool -> FALSE .)
    CASE            reduce using rule 42 (bool -> FALSE .)
    PRINTVALUES     reduce using rule 42 (bool -> FALSE .)
    SIGNAL          reduce using rule 42 (bool -> FALSE .)
    VIEWSIGNAL      reduce using rule 42 (bool -> FALSE .)
    VARIABLE        reduce using rule 42 (bool -> FALSE .)
    NUMERO          reduce using rule 42 (bool -> FALSE .)
    TRUE            reduce using rule 42 (bool -> FALSE .)
    FALSE           reduce using rule 42 (bool -> FALSE .)
    BREAK           reduce using rule 42 (bool -> FALSE .)
    WHEN            reduce using rule 42 (bool -> FALSE .)
    ELSE            reduce using rule 42 (bool -> FALSE .)
    PUNTO_COMA      reduce using rule 42 (bool -> FALSE .)
    THEN            reduce using rule 42 (bool -> FALSE .)


state 58

    (6) code_block -> group_proc proc MASTER LPARENTESIS comentario . list_statement RPARENTESIS PUNTO_COMA group_proc
    (14) list_statement -> . statement list_statement
    (15) list_statement -> . empty
    (16) statement -> . new_variable_statement
    (17) statement -> . values_statement
    (18) statement -> . alter_statement
    (19) statement -> . alterb_statement
    (20) statement -> . condition_statement
    (21) statement -> . istrue_statement
    (22) statement -> . repeat_statement
    (23) statement -> . until_statement
    (24) statement -> . while_statement
    (25) statement -> . case_statement
    (26) statement -> . printvalues_statement
    (27) statement -> . signal_statement
    (28) statement -> . viewsignal_statement
    (62) empty -> .
    (29) new_variable_statement -> . NEW VARIABLE COMA LPARENTESIS DATATYPE COMA value RPARENTESIS PUNTO_COMA
    (30) values_statement -> . VALUES LPARENTESIS VARIABLE COMA value RPARENTESIS PUNTO_COMA
    (31) alter_statement -> . ALTER LPARENTESIS VARIABLE COMA operador COMA value RPARENTESIS PUNTO_COMA
    (32) alterb_statement -> . ALTERB LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA
    (33) condition_statement -> . expression COND_NUMERICA expression
    (34) istrue_statement -> . ISTRUE LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA
    (35) repeat_statement -> . REPEAT LPARENTESIS list_statement break_statement RPARENTESIS PUNTO_COMA
    (37) until_statement -> . UNTIL list_statement condition PUNTO_COMA
    (39) while_statement -> . WHILE expression LPARENTESIS list_statement RPARENTESIS PUNTO_COMA
    (40) while_statement -> . WHILE istrue LPARENTESIS list_statement RPARENTESIS PUNTO_COMA
    (43) case_statement -> . CASE VARIABLE case_when_statements else_statement PUNTO_COMA
    (49) printvalues_statement -> . PRINTVALUES LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA
    (50) signal_statement -> . SIGNAL LPARENTESIS VARIABLE COMA value RPARENTESIS PUNTO_COMA
    (51) viewsignal_statement -> . VIEWSIGNAL LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA
    (52) expression -> . value
    (53) expression -> . VARIABLE
    (54) expression -> . LPARENTESIS expression RPARENTESIS
    (55) expression -> . expression + expression
    (56) expression -> . expression - expression
    (57) expression -> . expression * expression
    (58) expression -> . expression / expression
    (60) value -> . NUMERO
    (61) value -> . bool
    (41) bool -> . TRUE
    (42) bool -> . FALSE

    RPARENTESIS     reduce using rule 62 (empty -> .)
    NEW             shift and go to state 39
    VALUES          shift and go to state 42
    ALTER           shift and go to state 43
    ALTERB          shift and go to state 44
    ISTRUE          shift and go to state 46
    REPEAT          shift and go to state 47
    UNTIL           shift and go to state 48
    WHILE           shift and go to state 49
    CASE            shift and go to state 50
    PRINTVALUES     shift and go to state 51
    SIGNAL          shift and go to state 52
    VIEWSIGNAL      shift and go to state 53
    VARIABLE        shift and go to state 40
    LPARENTESIS     shift and go to state 22
    NUMERO          shift and go to state 54
    TRUE            shift and go to state 56
    FALSE           shift and go to state 57

    list_statement                 shift and go to state 82
    statement                      shift and go to state 24
    empty                          shift and go to state 25
    new_variable_statement         shift and go to state 26
    values_statement               shift and go to state 27
    alter_statement                shift and go to state 28
    alterb_statement               shift and go to state 29
    condition_statement            shift and go to state 30
    istrue_statement               shift and go to state 31
    repeat_statement               shift and go to state 32
    until_statement                shift and go to state 33
    while_statement                shift and go to state 34
    case_statement                 shift and go to state 35
    printvalues_statement          shift and go to state 36
    signal_statement               shift and go to state 37
    viewsignal_statement           shift and go to state 38
    value                          shift and go to state 41
    expression                     shift and go to state 45
    bool                           shift and go to state 55

state 59

    (8) group_proc -> PROC VARIABLE LPARENTESIS COMENTARIO statement . RPARENTESIS PUNTO_COMA group_proc

    RPARENTESIS     shift and go to state 83


state 60

    (54) expression -> LPARENTESIS expression . RPARENTESIS
    (55) expression -> expression . + expression
    (56) expression -> expression . - expression
    (57) expression -> expression . * expression
    (58) expression -> expression . / expression

    RPARENTESIS     shift and go to state 84
    +               shift and go to state 68
    -               shift and go to state 69
    *               shift and go to state 70
    /               shift and go to state 71


state 61

    (5) code_block -> proc MASTER LPARENTESIS comentario list_statement RPARENTESIS . PUNTO_COMA group_proc

    PUNTO_COMA      shift and go to state 85


state 62

    (14) list_statement -> statement list_statement .

    RPARENTESIS     reduce using rule 14 (list_statement -> statement list_statement .)
    VARIABLE        reduce using rule 14 (list_statement -> statement list_statement .)
    LPARENTESIS     reduce using rule 14 (list_statement -> statement list_statement .)
    NUMERO          reduce using rule 14 (list_statement -> statement list_statement .)
    TRUE            reduce using rule 14 (list_statement -> statement list_statement .)
    FALSE           reduce using rule 14 (list_statement -> statement list_statement .)
    BREAK           reduce using rule 14 (list_statement -> statement list_statement .)
    WHEN            reduce using rule 14 (list_statement -> statement list_statement .)
    ELSE            reduce using rule 14 (list_statement -> statement list_statement .)
    PUNTO_COMA      reduce using rule 14 (list_statement -> statement list_statement .)


state 63

    (29) new_variable_statement -> NEW VARIABLE . COMA LPARENTESIS DATATYPE COMA value RPARENTESIS PUNTO_COMA

    COMA            shift and go to state 86


state 64

    (30) values_statement -> VALUES LPARENTESIS . VARIABLE COMA value RPARENTESIS PUNTO_COMA

    VARIABLE        shift and go to state 87


state 65

    (31) alter_statement -> ALTER LPARENTESIS . VARIABLE COMA operador COMA value RPARENTESIS PUNTO_COMA

    VARIABLE        shift and go to state 88


state 66

    (32) alterb_statement -> ALTERB LPARENTESIS . VARIABLE RPARENTESIS PUNTO_COMA

    VARIABLE        shift and go to state 89


state 67

    (33) condition_statement -> expression COND_NUMERICA . expression
    (52) expression -> . value
    (53) expression -> . VARIABLE
    (54) expression -> . LPARENTESIS expression RPARENTESIS
    (55) expression -> . expression + expression
    (56) expression -> . expression - expression
    (57) expression -> . expression * expression
    (58) expression -> . expression / expression
    (60) value -> . NUMERO
    (61) value -> . bool
    (41) bool -> . TRUE
    (42) bool -> . FALSE

    VARIABLE        shift and go to state 40
    LPARENTESIS     shift and go to state 22
    NUMERO          shift and go to state 54
    TRUE            shift and go to state 56
    FALSE           shift and go to state 57

    expression                     shift and go to state 90
    value                          shift and go to state 41
    bool                           shift and go to state 55

state 68

    (55) expression -> expression + . expression
    (52) expression -> . value
    (53) expression -> . VARIABLE
    (54) expression -> . LPARENTESIS expression RPARENTESIS
    (55) expression -> . expression + expression
    (56) expression -> . expression - expression
    (57) expression -> . expression * expression
    (58) expression -> . expression / expression
    (60) value -> . NUMERO
    (61) value -> . bool
    (41) bool -> . TRUE
    (42) bool -> . FALSE

    VARIABLE        shift and go to state 40
    LPARENTESIS     shift and go to state 22
    NUMERO          shift and go to state 54
    TRUE            shift and go to state 56
    FALSE           shift and go to state 57

    expression                     shift and go to state 91
    value                          shift and go to state 41
    bool                           shift and go to state 55

state 69

    (56) expression -> expression - . expression
    (52) expression -> . value
    (53) expression -> . VARIABLE
    (54) expression -> . LPARENTESIS expression RPARENTESIS
    (55) expression -> . expression + expression
    (56) expression -> . expression - expression
    (57) expression -> . expression * expression
    (58) expression -> . expression / expression
    (60) value -> . NUMERO
    (61) value -> . bool
    (41) bool -> . TRUE
    (42) bool -> . FALSE

    VARIABLE        shift and go to state 40
    LPARENTESIS     shift and go to state 22
    NUMERO          shift and go to state 54
    TRUE            shift and go to state 56
    FALSE           shift and go to state 57

    expression                     shift and go to state 92
    value                          shift and go to state 41
    bool                           shift and go to state 55

state 70

    (57) expression -> expression * . expression
    (52) expression -> . value
    (53) expression -> . VARIABLE
    (54) expression -> . LPARENTESIS expression RPARENTESIS
    (55) expression -> . expression + expression
    (56) expression -> . expression - expression
    (57) expression -> . expression * expression
    (58) expression -> . expression / expression
    (60) value -> . NUMERO
    (61) value -> . bool
    (41) bool -> . TRUE
    (42) bool -> . FALSE

    VARIABLE        shift and go to state 40
    LPARENTESIS     shift and go to state 22
    NUMERO          shift and go to state 54
    TRUE            shift and go to state 56
    FALSE           shift and go to state 57

    expression                     shift and go to state 93
    value                          shift and go to state 41
    bool                           shift and go to state 55

state 71

    (58) expression -> expression / . expression
    (52) expression -> . value
    (53) expression -> . VARIABLE
    (54) expression -> . LPARENTESIS expression RPARENTESIS
    (55) expression -> . expression + expression
    (56) expression -> . expression - expression
    (57) expression -> . expression * expression
    (58) expression -> . expression / expression
    (60) value -> . NUMERO
    (61) value -> . bool
    (41) bool -> . TRUE
    (42) bool -> . FALSE

    VARIABLE        shift and go to state 40
    LPARENTESIS     shift and go to state 22
    NUMERO          shift and go to state 54
    TRUE            shift and go to state 56
    FALSE           shift and go to state 57

    expression                     shift and go to state 94
    value                          shift and go to state 41
    bool                           shift and go to state 55

state 72

    (34) istrue_statement -> ISTRUE LPARENTESIS . VARIABLE RPARENTESIS PUNTO_COMA

    VARIABLE        shift and go to state 95


state 73

    (35) repeat_statement -> REPEAT LPARENTESIS . list_statement break_statement RPARENTESIS PUNTO_COMA
    (14) list_statement -> . statement list_statement
    (15) list_statement -> . empty
    (16) statement -> . new_variable_statement
    (17) statement -> . values_statement
    (18) statement -> . alter_statement
    (19) statement -> . alterb_statement
    (20) statement -> . condition_statement
    (21) statement -> . istrue_statement
    (22) statement -> . repeat_statement
    (23) statement -> . until_statement
    (24) statement -> . while_statement
    (25) statement -> . case_statement
    (26) statement -> . printvalues_statement
    (27) statement -> . signal_statement
    (28) statement -> . viewsignal_statement
    (62) empty -> .
    (29) new_variable_statement -> . NEW VARIABLE COMA LPARENTESIS DATATYPE COMA value RPARENTESIS PUNTO_COMA
    (30) values_statement -> . VALUES LPARENTESIS VARIABLE COMA value RPARENTESIS PUNTO_COMA
    (31) alter_statement -> . ALTER LPARENTESIS VARIABLE COMA operador COMA value RPARENTESIS PUNTO_COMA
    (32) alterb_statement -> . ALTERB LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA
    (33) condition_statement -> . expression COND_NUMERICA expression
    (34) istrue_statement -> . ISTRUE LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA
    (35) repeat_statement -> . REPEAT LPARENTESIS list_statement break_statement RPARENTESIS PUNTO_COMA
    (37) until_statement -> . UNTIL list_statement condition PUNTO_COMA
    (39) while_statement -> . WHILE expression LPARENTESIS list_statement RPARENTESIS PUNTO_COMA
    (40) while_statement -> . WHILE istrue LPARENTESIS list_statement RPARENTESIS PUNTO_COMA
    (43) case_statement -> . CASE VARIABLE case_when_statements else_statement PUNTO_COMA
    (49) printvalues_statement -> . PRINTVALUES LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA
    (50) signal_statement -> . SIGNAL LPARENTESIS VARIABLE COMA value RPARENTESIS PUNTO_COMA
    (51) viewsignal_statement -> . VIEWSIGNAL LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA
    (52) expression -> . value
    (53) expression -> . VARIABLE
    (54) expression -> . LPARENTESIS expression RPARENTESIS
    (55) expression -> . expression + expression
    (56) expression -> . expression - expression
    (57) expression -> . expression * expression
    (58) expression -> . expression / expression
    (60) value -> . NUMERO
    (61) value -> . bool
    (41) bool -> . TRUE
    (42) bool -> . FALSE

    BREAK           reduce using rule 62 (empty -> .)
    NEW             shift and go to state 39
    VALUES          shift and go to state 42
    ALTER           shift and go to state 43
    ALTERB          shift and go to state 44
    ISTRUE          shift and go to state 46
    REPEAT          shift and go to state 47
    UNTIL           shift and go to state 48
    WHILE           shift and go to state 49
    CASE            shift and go to state 50
    PRINTVALUES     shift and go to state 51
    SIGNAL          shift and go to state 52
    VIEWSIGNAL      shift and go to state 53
    VARIABLE        shift and go to state 40
    LPARENTESIS     shift and go to state 22
    NUMERO          shift and go to state 54
    TRUE            shift and go to state 56
    FALSE           shift and go to state 57

    list_statement                 shift and go to state 96
    statement                      shift and go to state 24
    empty                          shift and go to state 25
    new_variable_statement         shift and go to state 26
    values_statement               shift and go to state 27
    alter_statement                shift and go to state 28
    alterb_statement               shift and go to state 29
    condition_statement            shift and go to state 30
    istrue_statement               shift and go to state 31
    repeat_statement               shift and go to state 32
    until_statement                shift and go to state 33
    while_statement                shift and go to state 34
    case_statement                 shift and go to state 35
    printvalues_statement          shift and go to state 36
    signal_statement               shift and go to state 37
    viewsignal_statement           shift and go to state 38
    value                          shift and go to state 41
    expression                     shift and go to state 45
    bool                           shift and go to state 55

state 74

    (37) until_statement -> UNTIL list_statement . condition PUNTO_COMA
    (38) condition -> . expression COND_NUMERICA expression
    (52) expression -> . value
    (53) expression -> . VARIABLE
    (54) expression -> . LPARENTESIS expression RPARENTESIS
    (55) expression -> . expression + expression
    (56) expression -> . expression - expression
    (57) expression -> . expression * expression
    (58) expression -> . expression / expression
    (60) value -> . NUMERO
    (61) value -> . bool
    (41) bool -> . TRUE
    (42) bool -> . FALSE

    VARIABLE        shift and go to state 40
    LPARENTESIS     shift and go to state 22
    NUMERO          shift and go to state 54
    TRUE            shift and go to state 56
    FALSE           shift and go to state 57

    condition                      shift and go to state 97
    expression                     shift and go to state 98
    value                          shift and go to state 41
    bool                           shift and go to state 55

state 75

    (39) while_statement -> WHILE expression . LPARENTESIS list_statement RPARENTESIS PUNTO_COMA
    (55) expression -> expression . + expression
    (56) expression -> expression . - expression
    (57) expression -> expression . * expression
    (58) expression -> expression . / expression

    LPARENTESIS     shift and go to state 99
    +               shift and go to state 68
    -               shift and go to state 69
    *               shift and go to state 70
    /               shift and go to state 71


state 76

    (40) while_statement -> WHILE istrue . LPARENTESIS list_statement RPARENTESIS PUNTO_COMA

    LPARENTESIS     shift and go to state 100


state 77

    (59) istrue -> ISTRUE . LPARENTESIS VARIABLE RPARENTESIS

    LPARENTESIS     shift and go to state 101


state 78

    (43) case_statement -> CASE VARIABLE . case_when_statements else_statement PUNTO_COMA
    (44) case_when_statements -> . case_when_statement case_when_statements
    (45) case_when_statements -> . empty
    (46) case_when_statement -> . WHEN value THEN list_statement
    (62) empty -> .

    WHEN            shift and go to state 105
    ELSE            reduce using rule 62 (empty -> .)
    PUNTO_COMA      reduce using rule 62 (empty -> .)

    case_when_statements           shift and go to state 102
    case_when_statement            shift and go to state 103
    empty                          shift and go to state 104

state 79

    (49) printvalues_statement -> PRINTVALUES LPARENTESIS . VARIABLE RPARENTESIS PUNTO_COMA

    VARIABLE        shift and go to state 106


state 80

    (50) signal_statement -> SIGNAL LPARENTESIS . VARIABLE COMA value RPARENTESIS PUNTO_COMA

    VARIABLE        shift and go to state 107


state 81

    (51) viewsignal_statement -> VIEWSIGNAL LPARENTESIS . VARIABLE RPARENTESIS PUNTO_COMA

    VARIABLE        shift and go to state 108


state 82

    (6) code_block -> group_proc proc MASTER LPARENTESIS comentario list_statement . RPARENTESIS PUNTO_COMA group_proc

    RPARENTESIS     shift and go to state 109


state 83

    (8) group_proc -> PROC VARIABLE LPARENTESIS COMENTARIO statement RPARENTESIS . PUNTO_COMA group_proc

    PUNTO_COMA      shift and go to state 110


state 84

    (54) expression -> LPARENTESIS expression RPARENTESIS .

    COND_NUMERICA   reduce using rule 54 (expression -> LPARENTESIS expression RPARENTESIS .)
    +               reduce using rule 54 (expression -> LPARENTESIS expression RPARENTESIS .)
    -               reduce using rule 54 (expression -> LPARENTESIS expression RPARENTESIS .)
    *               reduce using rule 54 (expression -> LPARENTESIS expression RPARENTESIS .)
    /               reduce using rule 54 (expression -> LPARENTESIS expression RPARENTESIS .)
    RPARENTESIS     reduce using rule 54 (expression -> LPARENTESIS expression RPARENTESIS .)
    LPARENTESIS     reduce using rule 54 (expression -> LPARENTESIS expression RPARENTESIS .)
    NEW             reduce using rule 54 (expression -> LPARENTESIS expression RPARENTESIS .)
    VALUES          reduce using rule 54 (expression -> LPARENTESIS expression RPARENTESIS .)
    ALTER           reduce using rule 54 (expression -> LPARENTESIS expression RPARENTESIS .)
    ALTERB          reduce using rule 54 (expression -> LPARENTESIS expression RPARENTESIS .)
    ISTRUE          reduce using rule 54 (expression -> LPARENTESIS expression RPARENTESIS .)
    REPEAT          reduce using rule 54 (expression -> LPARENTESIS expression RPARENTESIS .)
    UNTIL           reduce using rule 54 (expression -> LPARENTESIS expression RPARENTESIS .)
    WHILE           reduce using rule 54 (expression -> LPARENTESIS expression RPARENTESIS .)
    CASE            reduce using rule 54 (expression -> LPARENTESIS expression RPARENTESIS .)
    PRINTVALUES     reduce using rule 54 (expression -> LPARENTESIS expression RPARENTESIS .)
    SIGNAL          reduce using rule 54 (expression -> LPARENTESIS expression RPARENTESIS .)
    VIEWSIGNAL      reduce using rule 54 (expression -> LPARENTESIS expression RPARENTESIS .)
    VARIABLE        reduce using rule 54 (expression -> LPARENTESIS expression RPARENTESIS .)
    NUMERO          reduce using rule 54 (expression -> LPARENTESIS expression RPARENTESIS .)
    TRUE            reduce using rule 54 (expression -> LPARENTESIS expression RPARENTESIS .)
    FALSE           reduce using rule 54 (expression -> LPARENTESIS expression RPARENTESIS .)
    BREAK           reduce using rule 54 (expression -> LPARENTESIS expression RPARENTESIS .)
    WHEN            reduce using rule 54 (expression -> LPARENTESIS expression RPARENTESIS .)
    ELSE            reduce using rule 54 (expression -> LPARENTESIS expression RPARENTESIS .)
    PUNTO_COMA      reduce using rule 54 (expression -> LPARENTESIS expression RPARENTESIS .)


state 85

    (5) code_block -> proc MASTER LPARENTESIS comentario list_statement RPARENTESIS PUNTO_COMA . group_proc
    (8) group_proc -> . PROC VARIABLE LPARENTESIS COMENTARIO statement RPARENTESIS PUNTO_COMA group_proc
    (9) group_proc -> . empty
    (62) empty -> .

    PROC            shift and go to state 112
    $end            reduce using rule 62 (empty -> .)
    PUNTO_COMA      reduce using rule 62 (empty -> .)

    group_proc                     shift and go to state 111
    empty                          shift and go to state 10

state 86

    (29) new_variable_statement -> NEW VARIABLE COMA . LPARENTESIS DATATYPE COMA value RPARENTESIS PUNTO_COMA

    LPARENTESIS     shift and go to state 113


state 87

    (30) values_statement -> VALUES LPARENTESIS VARIABLE . COMA value RPARENTESIS PUNTO_COMA

    COMA            shift and go to state 114


state 88

    (31) alter_statement -> ALTER LPARENTESIS VARIABLE . COMA operador COMA value RPARENTESIS PUNTO_COMA

    COMA            shift and go to state 115


state 89

    (32) alterb_statement -> ALTERB LPARENTESIS VARIABLE . RPARENTESIS PUNTO_COMA

    RPARENTESIS     shift and go to state 116


state 90

    (33) condition_statement -> expression COND_NUMERICA expression .
    (55) expression -> expression . + expression
    (56) expression -> expression . - expression
    (57) expression -> expression . * expression
    (58) expression -> expression . / expression

    NEW             reduce using rule 33 (condition_statement -> expression COND_NUMERICA expression .)
    VALUES          reduce using rule 33 (condition_statement -> expression COND_NUMERICA expression .)
    ALTER           reduce using rule 33 (condition_statement -> expression COND_NUMERICA expression .)
    ALTERB          reduce using rule 33 (condition_statement -> expression COND_NUMERICA expression .)
    ISTRUE          reduce using rule 33 (condition_statement -> expression COND_NUMERICA expression .)
    REPEAT          reduce using rule 33 (condition_statement -> expression COND_NUMERICA expression .)
    UNTIL           reduce using rule 33 (condition_statement -> expression COND_NUMERICA expression .)
    WHILE           reduce using rule 33 (condition_statement -> expression COND_NUMERICA expression .)
    CASE            reduce using rule 33 (condition_statement -> expression COND_NUMERICA expression .)
    PRINTVALUES     reduce using rule 33 (condition_statement -> expression COND_NUMERICA expression .)
    SIGNAL          reduce using rule 33 (condition_statement -> expression COND_NUMERICA expression .)
    VIEWSIGNAL      reduce using rule 33 (condition_statement -> expression COND_NUMERICA expression .)
    VARIABLE        reduce using rule 33 (condition_statement -> expression COND_NUMERICA expression .)
    LPARENTESIS     reduce using rule 33 (condition_statement -> expression COND_NUMERICA expression .)
    NUMERO          reduce using rule 33 (condition_statement -> expression COND_NUMERICA expression .)
    TRUE            reduce using rule 33 (condition_statement -> expression COND_NUMERICA expression .)
    FALSE           reduce using rule 33 (condition_statement -> expression COND_NUMERICA expression .)
    RPARENTESIS     reduce using rule 33 (condition_statement -> expression COND_NUMERICA expression .)
    BREAK           reduce using rule 33 (condition_statement -> expression COND_NUMERICA expression .)
    WHEN            reduce using rule 33 (condition_statement -> expression COND_NUMERICA expression .)
    ELSE            reduce using rule 33 (condition_statement -> expression COND_NUMERICA expression .)
    PUNTO_COMA      reduce using rule 33 (condition_statement -> expression COND_NUMERICA expression .)
    +               shift and go to state 68
    -               shift and go to state 69
    *               shift and go to state 70
    /               shift and go to state 71


state 91

    (55) expression -> expression + expression .
    (55) expression -> expression . + expression
    (56) expression -> expression . - expression
    (57) expression -> expression . * expression
    (58) expression -> expression . / expression

  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for / resolved as shift
    COND_NUMERICA   reduce using rule 55 (expression -> expression + expression .)
    RPARENTESIS     reduce using rule 55 (expression -> expression + expression .)
    LPARENTESIS     reduce using rule 55 (expression -> expression + expression .)
    NEW             reduce using rule 55 (expression -> expression + expression .)
    VALUES          reduce using rule 55 (expression -> expression + expression .)
    ALTER           reduce using rule 55 (expression -> expression + expression .)
    ALTERB          reduce using rule 55 (expression -> expression + expression .)
    ISTRUE          reduce using rule 55 (expression -> expression + expression .)
    REPEAT          reduce using rule 55 (expression -> expression + expression .)
    UNTIL           reduce using rule 55 (expression -> expression + expression .)
    WHILE           reduce using rule 55 (expression -> expression + expression .)
    CASE            reduce using rule 55 (expression -> expression + expression .)
    PRINTVALUES     reduce using rule 55 (expression -> expression + expression .)
    SIGNAL          reduce using rule 55 (expression -> expression + expression .)
    VIEWSIGNAL      reduce using rule 55 (expression -> expression + expression .)
    VARIABLE        reduce using rule 55 (expression -> expression + expression .)
    NUMERO          reduce using rule 55 (expression -> expression + expression .)
    TRUE            reduce using rule 55 (expression -> expression + expression .)
    FALSE           reduce using rule 55 (expression -> expression + expression .)
    BREAK           reduce using rule 55 (expression -> expression + expression .)
    WHEN            reduce using rule 55 (expression -> expression + expression .)
    ELSE            reduce using rule 55 (expression -> expression + expression .)
    PUNTO_COMA      reduce using rule 55 (expression -> expression + expression .)
    +               shift and go to state 68
    -               shift and go to state 69
    *               shift and go to state 70
    /               shift and go to state 71

  ! +               [ reduce using rule 55 (expression -> expression + expression .) ]
  ! -               [ reduce using rule 55 (expression -> expression + expression .) ]
  ! *               [ reduce using rule 55 (expression -> expression + expression .) ]
  ! /               [ reduce using rule 55 (expression -> expression + expression .) ]


state 92

    (56) expression -> expression - expression .
    (55) expression -> expression . + expression
    (56) expression -> expression . - expression
    (57) expression -> expression . * expression
    (58) expression -> expression . / expression

  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for / resolved as shift
    COND_NUMERICA   reduce using rule 56 (expression -> expression - expression .)
    RPARENTESIS     reduce using rule 56 (expression -> expression - expression .)
    LPARENTESIS     reduce using rule 56 (expression -> expression - expression .)
    NEW             reduce using rule 56 (expression -> expression - expression .)
    VALUES          reduce using rule 56 (expression -> expression - expression .)
    ALTER           reduce using rule 56 (expression -> expression - expression .)
    ALTERB          reduce using rule 56 (expression -> expression - expression .)
    ISTRUE          reduce using rule 56 (expression -> expression - expression .)
    REPEAT          reduce using rule 56 (expression -> expression - expression .)
    UNTIL           reduce using rule 56 (expression -> expression - expression .)
    WHILE           reduce using rule 56 (expression -> expression - expression .)
    CASE            reduce using rule 56 (expression -> expression - expression .)
    PRINTVALUES     reduce using rule 56 (expression -> expression - expression .)
    SIGNAL          reduce using rule 56 (expression -> expression - expression .)
    VIEWSIGNAL      reduce using rule 56 (expression -> expression - expression .)
    VARIABLE        reduce using rule 56 (expression -> expression - expression .)
    NUMERO          reduce using rule 56 (expression -> expression - expression .)
    TRUE            reduce using rule 56 (expression -> expression - expression .)
    FALSE           reduce using rule 56 (expression -> expression - expression .)
    BREAK           reduce using rule 56 (expression -> expression - expression .)
    WHEN            reduce using rule 56 (expression -> expression - expression .)
    ELSE            reduce using rule 56 (expression -> expression - expression .)
    PUNTO_COMA      reduce using rule 56 (expression -> expression - expression .)
    +               shift and go to state 68
    -               shift and go to state 69
    *               shift and go to state 70
    /               shift and go to state 71

  ! +               [ reduce using rule 56 (expression -> expression - expression .) ]
  ! -               [ reduce using rule 56 (expression -> expression - expression .) ]
  ! *               [ reduce using rule 56 (expression -> expression - expression .) ]
  ! /               [ reduce using rule 56 (expression -> expression - expression .) ]


state 93

    (57) expression -> expression * expression .
    (55) expression -> expression . + expression
    (56) expression -> expression . - expression
    (57) expression -> expression . * expression
    (58) expression -> expression . / expression

  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for / resolved as shift
    COND_NUMERICA   reduce using rule 57 (expression -> expression * expression .)
    RPARENTESIS     reduce using rule 57 (expression -> expression * expression .)
    LPARENTESIS     reduce using rule 57 (expression -> expression * expression .)
    NEW             reduce using rule 57 (expression -> expression * expression .)
    VALUES          reduce using rule 57 (expression -> expression * expression .)
    ALTER           reduce using rule 57 (expression -> expression * expression .)
    ALTERB          reduce using rule 57 (expression -> expression * expression .)
    ISTRUE          reduce using rule 57 (expression -> expression * expression .)
    REPEAT          reduce using rule 57 (expression -> expression * expression .)
    UNTIL           reduce using rule 57 (expression -> expression * expression .)
    WHILE           reduce using rule 57 (expression -> expression * expression .)
    CASE            reduce using rule 57 (expression -> expression * expression .)
    PRINTVALUES     reduce using rule 57 (expression -> expression * expression .)
    SIGNAL          reduce using rule 57 (expression -> expression * expression .)
    VIEWSIGNAL      reduce using rule 57 (expression -> expression * expression .)
    VARIABLE        reduce using rule 57 (expression -> expression * expression .)
    NUMERO          reduce using rule 57 (expression -> expression * expression .)
    TRUE            reduce using rule 57 (expression -> expression * expression .)
    FALSE           reduce using rule 57 (expression -> expression * expression .)
    BREAK           reduce using rule 57 (expression -> expression * expression .)
    WHEN            reduce using rule 57 (expression -> expression * expression .)
    ELSE            reduce using rule 57 (expression -> expression * expression .)
    PUNTO_COMA      reduce using rule 57 (expression -> expression * expression .)
    +               shift and go to state 68
    -               shift and go to state 69
    *               shift and go to state 70
    /               shift and go to state 71

  ! +               [ reduce using rule 57 (expression -> expression * expression .) ]
  ! -               [ reduce using rule 57 (expression -> expression * expression .) ]
  ! *               [ reduce using rule 57 (expression -> expression * expression .) ]
  ! /               [ reduce using rule 57 (expression -> expression * expression .) ]


state 94

    (58) expression -> expression / expression .
    (55) expression -> expression . + expression
    (56) expression -> expression . - expression
    (57) expression -> expression . * expression
    (58) expression -> expression . / expression

  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for / resolved as shift
    COND_NUMERICA   reduce using rule 58 (expression -> expression / expression .)
    RPARENTESIS     reduce using rule 58 (expression -> expression / expression .)
    LPARENTESIS     reduce using rule 58 (expression -> expression / expression .)
    NEW             reduce using rule 58 (expression -> expression / expression .)
    VALUES          reduce using rule 58 (expression -> expression / expression .)
    ALTER           reduce using rule 58 (expression -> expression / expression .)
    ALTERB          reduce using rule 58 (expression -> expression / expression .)
    ISTRUE          reduce using rule 58 (expression -> expression / expression .)
    REPEAT          reduce using rule 58 (expression -> expression / expression .)
    UNTIL           reduce using rule 58 (expression -> expression / expression .)
    WHILE           reduce using rule 58 (expression -> expression / expression .)
    CASE            reduce using rule 58 (expression -> expression / expression .)
    PRINTVALUES     reduce using rule 58 (expression -> expression / expression .)
    SIGNAL          reduce using rule 58 (expression -> expression / expression .)
    VIEWSIGNAL      reduce using rule 58 (expression -> expression / expression .)
    VARIABLE        reduce using rule 58 (expression -> expression / expression .)
    NUMERO          reduce using rule 58 (expression -> expression / expression .)
    TRUE            reduce using rule 58 (expression -> expression / expression .)
    FALSE           reduce using rule 58 (expression -> expression / expression .)
    BREAK           reduce using rule 58 (expression -> expression / expression .)
    WHEN            reduce using rule 58 (expression -> expression / expression .)
    ELSE            reduce using rule 58 (expression -> expression / expression .)
    PUNTO_COMA      reduce using rule 58 (expression -> expression / expression .)
    +               shift and go to state 68
    -               shift and go to state 69
    *               shift and go to state 70
    /               shift and go to state 71

  ! +               [ reduce using rule 58 (expression -> expression / expression .) ]
  ! -               [ reduce using rule 58 (expression -> expression / expression .) ]
  ! *               [ reduce using rule 58 (expression -> expression / expression .) ]
  ! /               [ reduce using rule 58 (expression -> expression / expression .) ]


state 95

    (34) istrue_statement -> ISTRUE LPARENTESIS VARIABLE . RPARENTESIS PUNTO_COMA

    RPARENTESIS     shift and go to state 117


state 96

    (35) repeat_statement -> REPEAT LPARENTESIS list_statement . break_statement RPARENTESIS PUNTO_COMA
    (36) break_statement -> . BREAK PUNTO_COMA

    BREAK           shift and go to state 119

    break_statement                shift and go to state 118

state 97

    (37) until_statement -> UNTIL list_statement condition . PUNTO_COMA

    PUNTO_COMA      shift and go to state 120


state 98

    (38) condition -> expression . COND_NUMERICA expression
    (55) expression -> expression . + expression
    (56) expression -> expression . - expression
    (57) expression -> expression . * expression
    (58) expression -> expression . / expression

    COND_NUMERICA   shift and go to state 121
    +               shift and go to state 68
    -               shift and go to state 69
    *               shift and go to state 70
    /               shift and go to state 71


state 99

    (39) while_statement -> WHILE expression LPARENTESIS . list_statement RPARENTESIS PUNTO_COMA
    (14) list_statement -> . statement list_statement
    (15) list_statement -> . empty
    (16) statement -> . new_variable_statement
    (17) statement -> . values_statement
    (18) statement -> . alter_statement
    (19) statement -> . alterb_statement
    (20) statement -> . condition_statement
    (21) statement -> . istrue_statement
    (22) statement -> . repeat_statement
    (23) statement -> . until_statement
    (24) statement -> . while_statement
    (25) statement -> . case_statement
    (26) statement -> . printvalues_statement
    (27) statement -> . signal_statement
    (28) statement -> . viewsignal_statement
    (62) empty -> .
    (29) new_variable_statement -> . NEW VARIABLE COMA LPARENTESIS DATATYPE COMA value RPARENTESIS PUNTO_COMA
    (30) values_statement -> . VALUES LPARENTESIS VARIABLE COMA value RPARENTESIS PUNTO_COMA
    (31) alter_statement -> . ALTER LPARENTESIS VARIABLE COMA operador COMA value RPARENTESIS PUNTO_COMA
    (32) alterb_statement -> . ALTERB LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA
    (33) condition_statement -> . expression COND_NUMERICA expression
    (34) istrue_statement -> . ISTRUE LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA
    (35) repeat_statement -> . REPEAT LPARENTESIS list_statement break_statement RPARENTESIS PUNTO_COMA
    (37) until_statement -> . UNTIL list_statement condition PUNTO_COMA
    (39) while_statement -> . WHILE expression LPARENTESIS list_statement RPARENTESIS PUNTO_COMA
    (40) while_statement -> . WHILE istrue LPARENTESIS list_statement RPARENTESIS PUNTO_COMA
    (43) case_statement -> . CASE VARIABLE case_when_statements else_statement PUNTO_COMA
    (49) printvalues_statement -> . PRINTVALUES LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA
    (50) signal_statement -> . SIGNAL LPARENTESIS VARIABLE COMA value RPARENTESIS PUNTO_COMA
    (51) viewsignal_statement -> . VIEWSIGNAL LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA
    (52) expression -> . value
    (53) expression -> . VARIABLE
    (54) expression -> . LPARENTESIS expression RPARENTESIS
    (55) expression -> . expression + expression
    (56) expression -> . expression - expression
    (57) expression -> . expression * expression
    (58) expression -> . expression / expression
    (60) value -> . NUMERO
    (61) value -> . bool
    (41) bool -> . TRUE
    (42) bool -> . FALSE

    RPARENTESIS     reduce using rule 62 (empty -> .)
    NEW             shift and go to state 39
    VALUES          shift and go to state 42
    ALTER           shift and go to state 43
    ALTERB          shift and go to state 44
    ISTRUE          shift and go to state 46
    REPEAT          shift and go to state 47
    UNTIL           shift and go to state 48
    WHILE           shift and go to state 49
    CASE            shift and go to state 50
    PRINTVALUES     shift and go to state 51
    SIGNAL          shift and go to state 52
    VIEWSIGNAL      shift and go to state 53
    VARIABLE        shift and go to state 40
    LPARENTESIS     shift and go to state 22
    NUMERO          shift and go to state 54
    TRUE            shift and go to state 56
    FALSE           shift and go to state 57

    expression                     shift and go to state 45
    list_statement                 shift and go to state 122
    statement                      shift and go to state 24
    empty                          shift and go to state 25
    new_variable_statement         shift and go to state 26
    values_statement               shift and go to state 27
    alter_statement                shift and go to state 28
    alterb_statement               shift and go to state 29
    condition_statement            shift and go to state 30
    istrue_statement               shift and go to state 31
    repeat_statement               shift and go to state 32
    until_statement                shift and go to state 33
    while_statement                shift and go to state 34
    case_statement                 shift and go to state 35
    printvalues_statement          shift and go to state 36
    signal_statement               shift and go to state 37
    viewsignal_statement           shift and go to state 38
    value                          shift and go to state 41
    bool                           shift and go to state 55

state 100

    (40) while_statement -> WHILE istrue LPARENTESIS . list_statement RPARENTESIS PUNTO_COMA
    (14) list_statement -> . statement list_statement
    (15) list_statement -> . empty
    (16) statement -> . new_variable_statement
    (17) statement -> . values_statement
    (18) statement -> . alter_statement
    (19) statement -> . alterb_statement
    (20) statement -> . condition_statement
    (21) statement -> . istrue_statement
    (22) statement -> . repeat_statement
    (23) statement -> . until_statement
    (24) statement -> . while_statement
    (25) statement -> . case_statement
    (26) statement -> . printvalues_statement
    (27) statement -> . signal_statement
    (28) statement -> . viewsignal_statement
    (62) empty -> .
    (29) new_variable_statement -> . NEW VARIABLE COMA LPARENTESIS DATATYPE COMA value RPARENTESIS PUNTO_COMA
    (30) values_statement -> . VALUES LPARENTESIS VARIABLE COMA value RPARENTESIS PUNTO_COMA
    (31) alter_statement -> . ALTER LPARENTESIS VARIABLE COMA operador COMA value RPARENTESIS PUNTO_COMA
    (32) alterb_statement -> . ALTERB LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA
    (33) condition_statement -> . expression COND_NUMERICA expression
    (34) istrue_statement -> . ISTRUE LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA
    (35) repeat_statement -> . REPEAT LPARENTESIS list_statement break_statement RPARENTESIS PUNTO_COMA
    (37) until_statement -> . UNTIL list_statement condition PUNTO_COMA
    (39) while_statement -> . WHILE expression LPARENTESIS list_statement RPARENTESIS PUNTO_COMA
    (40) while_statement -> . WHILE istrue LPARENTESIS list_statement RPARENTESIS PUNTO_COMA
    (43) case_statement -> . CASE VARIABLE case_when_statements else_statement PUNTO_COMA
    (49) printvalues_statement -> . PRINTVALUES LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA
    (50) signal_statement -> . SIGNAL LPARENTESIS VARIABLE COMA value RPARENTESIS PUNTO_COMA
    (51) viewsignal_statement -> . VIEWSIGNAL LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA
    (52) expression -> . value
    (53) expression -> . VARIABLE
    (54) expression -> . LPARENTESIS expression RPARENTESIS
    (55) expression -> . expression + expression
    (56) expression -> . expression - expression
    (57) expression -> . expression * expression
    (58) expression -> . expression / expression
    (60) value -> . NUMERO
    (61) value -> . bool
    (41) bool -> . TRUE
    (42) bool -> . FALSE

    RPARENTESIS     reduce using rule 62 (empty -> .)
    NEW             shift and go to state 39
    VALUES          shift and go to state 42
    ALTER           shift and go to state 43
    ALTERB          shift and go to state 44
    ISTRUE          shift and go to state 46
    REPEAT          shift and go to state 47
    UNTIL           shift and go to state 48
    WHILE           shift and go to state 49
    CASE            shift and go to state 50
    PRINTVALUES     shift and go to state 51
    SIGNAL          shift and go to state 52
    VIEWSIGNAL      shift and go to state 53
    VARIABLE        shift and go to state 40
    LPARENTESIS     shift and go to state 22
    NUMERO          shift and go to state 54
    TRUE            shift and go to state 56
    FALSE           shift and go to state 57

    list_statement                 shift and go to state 123
    statement                      shift and go to state 24
    empty                          shift and go to state 25
    new_variable_statement         shift and go to state 26
    values_statement               shift and go to state 27
    alter_statement                shift and go to state 28
    alterb_statement               shift and go to state 29
    condition_statement            shift and go to state 30
    istrue_statement               shift and go to state 31
    repeat_statement               shift and go to state 32
    until_statement                shift and go to state 33
    while_statement                shift and go to state 34
    case_statement                 shift and go to state 35
    printvalues_statement          shift and go to state 36
    signal_statement               shift and go to state 37
    viewsignal_statement           shift and go to state 38
    value                          shift and go to state 41
    expression                     shift and go to state 45
    bool                           shift and go to state 55

state 101

    (59) istrue -> ISTRUE LPARENTESIS . VARIABLE RPARENTESIS

    VARIABLE        shift and go to state 124


state 102

    (43) case_statement -> CASE VARIABLE case_when_statements . else_statement PUNTO_COMA
    (47) else_statement -> . ELSE code_block
    (48) else_statement -> . empty
    (62) empty -> .

    ELSE            shift and go to state 126
    PUNTO_COMA      reduce using rule 62 (empty -> .)

    else_statement                 shift and go to state 125
    empty                          shift and go to state 127

state 103

    (44) case_when_statements -> case_when_statement . case_when_statements
    (44) case_when_statements -> . case_when_statement case_when_statements
    (45) case_when_statements -> . empty
    (46) case_when_statement -> . WHEN value THEN list_statement
    (62) empty -> .

    WHEN            shift and go to state 105
    ELSE            reduce using rule 62 (empty -> .)
    PUNTO_COMA      reduce using rule 62 (empty -> .)

    case_when_statement            shift and go to state 103
    case_when_statements           shift and go to state 128
    empty                          shift and go to state 104

state 104

    (45) case_when_statements -> empty .

    ELSE            reduce using rule 45 (case_when_statements -> empty .)
    PUNTO_COMA      reduce using rule 45 (case_when_statements -> empty .)


state 105

    (46) case_when_statement -> WHEN . value THEN list_statement
    (60) value -> . NUMERO
    (61) value -> . bool
    (41) bool -> . TRUE
    (42) bool -> . FALSE

    NUMERO          shift and go to state 54
    TRUE            shift and go to state 56
    FALSE           shift and go to state 57

    value                          shift and go to state 129
    bool                           shift and go to state 55

state 106

    (49) printvalues_statement -> PRINTVALUES LPARENTESIS VARIABLE . RPARENTESIS PUNTO_COMA

    RPARENTESIS     shift and go to state 130


state 107

    (50) signal_statement -> SIGNAL LPARENTESIS VARIABLE . COMA value RPARENTESIS PUNTO_COMA

    COMA            shift and go to state 131


state 108

    (51) viewsignal_statement -> VIEWSIGNAL LPARENTESIS VARIABLE . RPARENTESIS PUNTO_COMA

    RPARENTESIS     shift and go to state 132


state 109

    (6) code_block -> group_proc proc MASTER LPARENTESIS comentario list_statement RPARENTESIS . PUNTO_COMA group_proc

    PUNTO_COMA      shift and go to state 133


state 110

    (8) group_proc -> PROC VARIABLE LPARENTESIS COMENTARIO statement RPARENTESIS PUNTO_COMA . group_proc
    (8) group_proc -> . PROC VARIABLE LPARENTESIS COMENTARIO statement RPARENTESIS PUNTO_COMA group_proc
    (9) group_proc -> . empty
    (62) empty -> .

  ! shift/reduce conflict for PROC resolved as shift
    PROC            shift and go to state 112
    $end            reduce using rule 62 (empty -> .)
    PUNTO_COMA      reduce using rule 62 (empty -> .)

  ! PROC            [ reduce using rule 62 (empty -> .) ]

    group_proc                     shift and go to state 134
    empty                          shift and go to state 10

state 111

    (5) code_block -> proc MASTER LPARENTESIS comentario list_statement RPARENTESIS PUNTO_COMA group_proc .

    $end            reduce using rule 5 (code_block -> proc MASTER LPARENTESIS comentario list_statement RPARENTESIS PUNTO_COMA group_proc .)
    PUNTO_COMA      reduce using rule 5 (code_block -> proc MASTER LPARENTESIS comentario list_statement RPARENTESIS PUNTO_COMA group_proc .)


state 112

    (8) group_proc -> PROC . VARIABLE LPARENTESIS COMENTARIO statement RPARENTESIS PUNTO_COMA group_proc

    VARIABLE        shift and go to state 15


state 113

    (29) new_variable_statement -> NEW VARIABLE COMA LPARENTESIS . DATATYPE COMA value RPARENTESIS PUNTO_COMA

    DATATYPE        shift and go to state 135


state 114

    (30) values_statement -> VALUES LPARENTESIS VARIABLE COMA . value RPARENTESIS PUNTO_COMA
    (60) value -> . NUMERO
    (61) value -> . bool
    (41) bool -> . TRUE
    (42) bool -> . FALSE

    NUMERO          shift and go to state 54
    TRUE            shift and go to state 56
    FALSE           shift and go to state 57

    value                          shift and go to state 136
    bool                           shift and go to state 55

state 115

    (31) alter_statement -> ALTER LPARENTESIS VARIABLE COMA . operador COMA value RPARENTESIS PUNTO_COMA
    (10) operador -> . ADD
    (11) operador -> . SUB
    (12) operador -> . MUL
    (13) operador -> . DIV

    ADD             shift and go to state 138
    SUB             shift and go to state 139
    MUL             shift and go to state 140
    DIV             shift and go to state 141

    operador                       shift and go to state 137

state 116

    (32) alterb_statement -> ALTERB LPARENTESIS VARIABLE RPARENTESIS . PUNTO_COMA

    PUNTO_COMA      shift and go to state 142


state 117

    (34) istrue_statement -> ISTRUE LPARENTESIS VARIABLE RPARENTESIS . PUNTO_COMA

    PUNTO_COMA      shift and go to state 143


state 118

    (35) repeat_statement -> REPEAT LPARENTESIS list_statement break_statement . RPARENTESIS PUNTO_COMA

    RPARENTESIS     shift and go to state 144


state 119

    (36) break_statement -> BREAK . PUNTO_COMA

    PUNTO_COMA      shift and go to state 145


state 120

    (37) until_statement -> UNTIL list_statement condition PUNTO_COMA .

    NEW             reduce using rule 37 (until_statement -> UNTIL list_statement condition PUNTO_COMA .)
    VALUES          reduce using rule 37 (until_statement -> UNTIL list_statement condition PUNTO_COMA .)
    ALTER           reduce using rule 37 (until_statement -> UNTIL list_statement condition PUNTO_COMA .)
    ALTERB          reduce using rule 37 (until_statement -> UNTIL list_statement condition PUNTO_COMA .)
    ISTRUE          reduce using rule 37 (until_statement -> UNTIL list_statement condition PUNTO_COMA .)
    REPEAT          reduce using rule 37 (until_statement -> UNTIL list_statement condition PUNTO_COMA .)
    UNTIL           reduce using rule 37 (until_statement -> UNTIL list_statement condition PUNTO_COMA .)
    WHILE           reduce using rule 37 (until_statement -> UNTIL list_statement condition PUNTO_COMA .)
    CASE            reduce using rule 37 (until_statement -> UNTIL list_statement condition PUNTO_COMA .)
    PRINTVALUES     reduce using rule 37 (until_statement -> UNTIL list_statement condition PUNTO_COMA .)
    SIGNAL          reduce using rule 37 (until_statement -> UNTIL list_statement condition PUNTO_COMA .)
    VIEWSIGNAL      reduce using rule 37 (until_statement -> UNTIL list_statement condition PUNTO_COMA .)
    VARIABLE        reduce using rule 37 (until_statement -> UNTIL list_statement condition PUNTO_COMA .)
    LPARENTESIS     reduce using rule 37 (until_statement -> UNTIL list_statement condition PUNTO_COMA .)
    NUMERO          reduce using rule 37 (until_statement -> UNTIL list_statement condition PUNTO_COMA .)
    TRUE            reduce using rule 37 (until_statement -> UNTIL list_statement condition PUNTO_COMA .)
    FALSE           reduce using rule 37 (until_statement -> UNTIL list_statement condition PUNTO_COMA .)
    RPARENTESIS     reduce using rule 37 (until_statement -> UNTIL list_statement condition PUNTO_COMA .)
    BREAK           reduce using rule 37 (until_statement -> UNTIL list_statement condition PUNTO_COMA .)
    WHEN            reduce using rule 37 (until_statement -> UNTIL list_statement condition PUNTO_COMA .)
    ELSE            reduce using rule 37 (until_statement -> UNTIL list_statement condition PUNTO_COMA .)
    PUNTO_COMA      reduce using rule 37 (until_statement -> UNTIL list_statement condition PUNTO_COMA .)


state 121

    (38) condition -> expression COND_NUMERICA . expression
    (52) expression -> . value
    (53) expression -> . VARIABLE
    (54) expression -> . LPARENTESIS expression RPARENTESIS
    (55) expression -> . expression + expression
    (56) expression -> . expression - expression
    (57) expression -> . expression * expression
    (58) expression -> . expression / expression
    (60) value -> . NUMERO
    (61) value -> . bool
    (41) bool -> . TRUE
    (42) bool -> . FALSE

    VARIABLE        shift and go to state 40
    LPARENTESIS     shift and go to state 22
    NUMERO          shift and go to state 54
    TRUE            shift and go to state 56
    FALSE           shift and go to state 57

    expression                     shift and go to state 146
    value                          shift and go to state 41
    bool                           shift and go to state 55

state 122

    (39) while_statement -> WHILE expression LPARENTESIS list_statement . RPARENTESIS PUNTO_COMA

    RPARENTESIS     shift and go to state 147


state 123

    (40) while_statement -> WHILE istrue LPARENTESIS list_statement . RPARENTESIS PUNTO_COMA

    RPARENTESIS     shift and go to state 148


state 124

    (59) istrue -> ISTRUE LPARENTESIS VARIABLE . RPARENTESIS

    RPARENTESIS     shift and go to state 149


state 125

    (43) case_statement -> CASE VARIABLE case_when_statements else_statement . PUNTO_COMA

    PUNTO_COMA      shift and go to state 150


state 126

    (47) else_statement -> ELSE . code_block
    (5) code_block -> . proc MASTER LPARENTESIS comentario list_statement RPARENTESIS PUNTO_COMA group_proc
    (6) code_block -> . group_proc proc MASTER LPARENTESIS comentario list_statement RPARENTESIS PUNTO_COMA group_proc
    (7) proc -> . PROC
    (8) group_proc -> . PROC VARIABLE LPARENTESIS COMENTARIO statement RPARENTESIS PUNTO_COMA group_proc
    (9) group_proc -> . empty
    (62) empty -> .

  ! shift/reduce conflict for PROC resolved as shift
    PROC            shift and go to state 9

  ! PROC            [ reduce using rule 62 (empty -> .) ]

    code_block                     shift and go to state 151
    proc                           shift and go to state 7
    group_proc                     shift and go to state 8
    empty                          shift and go to state 10

state 127

    (48) else_statement -> empty .

    PUNTO_COMA      reduce using rule 48 (else_statement -> empty .)


state 128

    (44) case_when_statements -> case_when_statement case_when_statements .

    ELSE            reduce using rule 44 (case_when_statements -> case_when_statement case_when_statements .)
    PUNTO_COMA      reduce using rule 44 (case_when_statements -> case_when_statement case_when_statements .)


state 129

    (46) case_when_statement -> WHEN value . THEN list_statement

    THEN            shift and go to state 152


state 130

    (49) printvalues_statement -> PRINTVALUES LPARENTESIS VARIABLE RPARENTESIS . PUNTO_COMA

    PUNTO_COMA      shift and go to state 153


state 131

    (50) signal_statement -> SIGNAL LPARENTESIS VARIABLE COMA . value RPARENTESIS PUNTO_COMA
    (60) value -> . NUMERO
    (61) value -> . bool
    (41) bool -> . TRUE
    (42) bool -> . FALSE

    NUMERO          shift and go to state 54
    TRUE            shift and go to state 56
    FALSE           shift and go to state 57

    value                          shift and go to state 154
    bool                           shift and go to state 55

state 132

    (51) viewsignal_statement -> VIEWSIGNAL LPARENTESIS VARIABLE RPARENTESIS . PUNTO_COMA

    PUNTO_COMA      shift and go to state 155


state 133

    (6) code_block -> group_proc proc MASTER LPARENTESIS comentario list_statement RPARENTESIS PUNTO_COMA . group_proc
    (8) group_proc -> . PROC VARIABLE LPARENTESIS COMENTARIO statement RPARENTESIS PUNTO_COMA group_proc
    (9) group_proc -> . empty
    (62) empty -> .

    PROC            shift and go to state 112
    $end            reduce using rule 62 (empty -> .)
    PUNTO_COMA      reduce using rule 62 (empty -> .)

    group_proc                     shift and go to state 156
    empty                          shift and go to state 10

state 134

    (8) group_proc -> PROC VARIABLE LPARENTESIS COMENTARIO statement RPARENTESIS PUNTO_COMA group_proc .

    PROC            reduce using rule 8 (group_proc -> PROC VARIABLE LPARENTESIS COMENTARIO statement RPARENTESIS PUNTO_COMA group_proc .)
    $end            reduce using rule 8 (group_proc -> PROC VARIABLE LPARENTESIS COMENTARIO statement RPARENTESIS PUNTO_COMA group_proc .)
    PUNTO_COMA      reduce using rule 8 (group_proc -> PROC VARIABLE LPARENTESIS COMENTARIO statement RPARENTESIS PUNTO_COMA group_proc .)


state 135

    (29) new_variable_statement -> NEW VARIABLE COMA LPARENTESIS DATATYPE . COMA value RPARENTESIS PUNTO_COMA

    COMA            shift and go to state 157


state 136

    (30) values_statement -> VALUES LPARENTESIS VARIABLE COMA value . RPARENTESIS PUNTO_COMA

    RPARENTESIS     shift and go to state 158


state 137

    (31) alter_statement -> ALTER LPARENTESIS VARIABLE COMA operador . COMA value RPARENTESIS PUNTO_COMA

    COMA            shift and go to state 159


state 138

    (10) operador -> ADD .

    COMA            reduce using rule 10 (operador -> ADD .)


state 139

    (11) operador -> SUB .

    COMA            reduce using rule 11 (operador -> SUB .)


state 140

    (12) operador -> MUL .

    COMA            reduce using rule 12 (operador -> MUL .)


state 141

    (13) operador -> DIV .

    COMA            reduce using rule 13 (operador -> DIV .)


state 142

    (32) alterb_statement -> ALTERB LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .

    NEW             reduce using rule 32 (alterb_statement -> ALTERB LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    VALUES          reduce using rule 32 (alterb_statement -> ALTERB LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    ALTER           reduce using rule 32 (alterb_statement -> ALTERB LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    ALTERB          reduce using rule 32 (alterb_statement -> ALTERB LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    ISTRUE          reduce using rule 32 (alterb_statement -> ALTERB LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    REPEAT          reduce using rule 32 (alterb_statement -> ALTERB LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    UNTIL           reduce using rule 32 (alterb_statement -> ALTERB LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    WHILE           reduce using rule 32 (alterb_statement -> ALTERB LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    CASE            reduce using rule 32 (alterb_statement -> ALTERB LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    PRINTVALUES     reduce using rule 32 (alterb_statement -> ALTERB LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    SIGNAL          reduce using rule 32 (alterb_statement -> ALTERB LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    VIEWSIGNAL      reduce using rule 32 (alterb_statement -> ALTERB LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    VARIABLE        reduce using rule 32 (alterb_statement -> ALTERB LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    LPARENTESIS     reduce using rule 32 (alterb_statement -> ALTERB LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    NUMERO          reduce using rule 32 (alterb_statement -> ALTERB LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    TRUE            reduce using rule 32 (alterb_statement -> ALTERB LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    FALSE           reduce using rule 32 (alterb_statement -> ALTERB LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    RPARENTESIS     reduce using rule 32 (alterb_statement -> ALTERB LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    BREAK           reduce using rule 32 (alterb_statement -> ALTERB LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    WHEN            reduce using rule 32 (alterb_statement -> ALTERB LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    ELSE            reduce using rule 32 (alterb_statement -> ALTERB LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    PUNTO_COMA      reduce using rule 32 (alterb_statement -> ALTERB LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)


state 143

    (34) istrue_statement -> ISTRUE LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .

    NEW             reduce using rule 34 (istrue_statement -> ISTRUE LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    VALUES          reduce using rule 34 (istrue_statement -> ISTRUE LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    ALTER           reduce using rule 34 (istrue_statement -> ISTRUE LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    ALTERB          reduce using rule 34 (istrue_statement -> ISTRUE LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    ISTRUE          reduce using rule 34 (istrue_statement -> ISTRUE LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    REPEAT          reduce using rule 34 (istrue_statement -> ISTRUE LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    UNTIL           reduce using rule 34 (istrue_statement -> ISTRUE LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    WHILE           reduce using rule 34 (istrue_statement -> ISTRUE LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    CASE            reduce using rule 34 (istrue_statement -> ISTRUE LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    PRINTVALUES     reduce using rule 34 (istrue_statement -> ISTRUE LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    SIGNAL          reduce using rule 34 (istrue_statement -> ISTRUE LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    VIEWSIGNAL      reduce using rule 34 (istrue_statement -> ISTRUE LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    VARIABLE        reduce using rule 34 (istrue_statement -> ISTRUE LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    LPARENTESIS     reduce using rule 34 (istrue_statement -> ISTRUE LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    NUMERO          reduce using rule 34 (istrue_statement -> ISTRUE LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    TRUE            reduce using rule 34 (istrue_statement -> ISTRUE LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    FALSE           reduce using rule 34 (istrue_statement -> ISTRUE LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    RPARENTESIS     reduce using rule 34 (istrue_statement -> ISTRUE LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    BREAK           reduce using rule 34 (istrue_statement -> ISTRUE LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    WHEN            reduce using rule 34 (istrue_statement -> ISTRUE LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    ELSE            reduce using rule 34 (istrue_statement -> ISTRUE LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    PUNTO_COMA      reduce using rule 34 (istrue_statement -> ISTRUE LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)


state 144

    (35) repeat_statement -> REPEAT LPARENTESIS list_statement break_statement RPARENTESIS . PUNTO_COMA

    PUNTO_COMA      shift and go to state 160


state 145

    (36) break_statement -> BREAK PUNTO_COMA .

    RPARENTESIS     reduce using rule 36 (break_statement -> BREAK PUNTO_COMA .)


state 146

    (38) condition -> expression COND_NUMERICA expression .
    (55) expression -> expression . + expression
    (56) expression -> expression . - expression
    (57) expression -> expression . * expression
    (58) expression -> expression . / expression

    PUNTO_COMA      reduce using rule 38 (condition -> expression COND_NUMERICA expression .)
    +               shift and go to state 68
    -               shift and go to state 69
    *               shift and go to state 70
    /               shift and go to state 71


state 147

    (39) while_statement -> WHILE expression LPARENTESIS list_statement RPARENTESIS . PUNTO_COMA

    PUNTO_COMA      shift and go to state 161


state 148

    (40) while_statement -> WHILE istrue LPARENTESIS list_statement RPARENTESIS . PUNTO_COMA

    PUNTO_COMA      shift and go to state 162


state 149

    (59) istrue -> ISTRUE LPARENTESIS VARIABLE RPARENTESIS .

    LPARENTESIS     reduce using rule 59 (istrue -> ISTRUE LPARENTESIS VARIABLE RPARENTESIS .)


state 150

    (43) case_statement -> CASE VARIABLE case_when_statements else_statement PUNTO_COMA .

    NEW             reduce using rule 43 (case_statement -> CASE VARIABLE case_when_statements else_statement PUNTO_COMA .)
    VALUES          reduce using rule 43 (case_statement -> CASE VARIABLE case_when_statements else_statement PUNTO_COMA .)
    ALTER           reduce using rule 43 (case_statement -> CASE VARIABLE case_when_statements else_statement PUNTO_COMA .)
    ALTERB          reduce using rule 43 (case_statement -> CASE VARIABLE case_when_statements else_statement PUNTO_COMA .)
    ISTRUE          reduce using rule 43 (case_statement -> CASE VARIABLE case_when_statements else_statement PUNTO_COMA .)
    REPEAT          reduce using rule 43 (case_statement -> CASE VARIABLE case_when_statements else_statement PUNTO_COMA .)
    UNTIL           reduce using rule 43 (case_statement -> CASE VARIABLE case_when_statements else_statement PUNTO_COMA .)
    WHILE           reduce using rule 43 (case_statement -> CASE VARIABLE case_when_statements else_statement PUNTO_COMA .)
    CASE            reduce using rule 43 (case_statement -> CASE VARIABLE case_when_statements else_statement PUNTO_COMA .)
    PRINTVALUES     reduce using rule 43 (case_statement -> CASE VARIABLE case_when_statements else_statement PUNTO_COMA .)
    SIGNAL          reduce using rule 43 (case_statement -> CASE VARIABLE case_when_statements else_statement PUNTO_COMA .)
    VIEWSIGNAL      reduce using rule 43 (case_statement -> CASE VARIABLE case_when_statements else_statement PUNTO_COMA .)
    VARIABLE        reduce using rule 43 (case_statement -> CASE VARIABLE case_when_statements else_statement PUNTO_COMA .)
    LPARENTESIS     reduce using rule 43 (case_statement -> CASE VARIABLE case_when_statements else_statement PUNTO_COMA .)
    NUMERO          reduce using rule 43 (case_statement -> CASE VARIABLE case_when_statements else_statement PUNTO_COMA .)
    TRUE            reduce using rule 43 (case_statement -> CASE VARIABLE case_when_statements else_statement PUNTO_COMA .)
    FALSE           reduce using rule 43 (case_statement -> CASE VARIABLE case_when_statements else_statement PUNTO_COMA .)
    RPARENTESIS     reduce using rule 43 (case_statement -> CASE VARIABLE case_when_statements else_statement PUNTO_COMA .)
    BREAK           reduce using rule 43 (case_statement -> CASE VARIABLE case_when_statements else_statement PUNTO_COMA .)
    WHEN            reduce using rule 43 (case_statement -> CASE VARIABLE case_when_statements else_statement PUNTO_COMA .)
    ELSE            reduce using rule 43 (case_statement -> CASE VARIABLE case_when_statements else_statement PUNTO_COMA .)
    PUNTO_COMA      reduce using rule 43 (case_statement -> CASE VARIABLE case_when_statements else_statement PUNTO_COMA .)


state 151

    (47) else_statement -> ELSE code_block .

    PUNTO_COMA      reduce using rule 47 (else_statement -> ELSE code_block .)


state 152

    (46) case_when_statement -> WHEN value THEN . list_statement
    (14) list_statement -> . statement list_statement
    (15) list_statement -> . empty
    (16) statement -> . new_variable_statement
    (17) statement -> . values_statement
    (18) statement -> . alter_statement
    (19) statement -> . alterb_statement
    (20) statement -> . condition_statement
    (21) statement -> . istrue_statement
    (22) statement -> . repeat_statement
    (23) statement -> . until_statement
    (24) statement -> . while_statement
    (25) statement -> . case_statement
    (26) statement -> . printvalues_statement
    (27) statement -> . signal_statement
    (28) statement -> . viewsignal_statement
    (62) empty -> .
    (29) new_variable_statement -> . NEW VARIABLE COMA LPARENTESIS DATATYPE COMA value RPARENTESIS PUNTO_COMA
    (30) values_statement -> . VALUES LPARENTESIS VARIABLE COMA value RPARENTESIS PUNTO_COMA
    (31) alter_statement -> . ALTER LPARENTESIS VARIABLE COMA operador COMA value RPARENTESIS PUNTO_COMA
    (32) alterb_statement -> . ALTERB LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA
    (33) condition_statement -> . expression COND_NUMERICA expression
    (34) istrue_statement -> . ISTRUE LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA
    (35) repeat_statement -> . REPEAT LPARENTESIS list_statement break_statement RPARENTESIS PUNTO_COMA
    (37) until_statement -> . UNTIL list_statement condition PUNTO_COMA
    (39) while_statement -> . WHILE expression LPARENTESIS list_statement RPARENTESIS PUNTO_COMA
    (40) while_statement -> . WHILE istrue LPARENTESIS list_statement RPARENTESIS PUNTO_COMA
    (43) case_statement -> . CASE VARIABLE case_when_statements else_statement PUNTO_COMA
    (49) printvalues_statement -> . PRINTVALUES LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA
    (50) signal_statement -> . SIGNAL LPARENTESIS VARIABLE COMA value RPARENTESIS PUNTO_COMA
    (51) viewsignal_statement -> . VIEWSIGNAL LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA
    (52) expression -> . value
    (53) expression -> . VARIABLE
    (54) expression -> . LPARENTESIS expression RPARENTESIS
    (55) expression -> . expression + expression
    (56) expression -> . expression - expression
    (57) expression -> . expression * expression
    (58) expression -> . expression / expression
    (60) value -> . NUMERO
    (61) value -> . bool
    (41) bool -> . TRUE
    (42) bool -> . FALSE

    WHEN            reduce using rule 62 (empty -> .)
    ELSE            reduce using rule 62 (empty -> .)
    PUNTO_COMA      reduce using rule 62 (empty -> .)
    NEW             shift and go to state 39
    VALUES          shift and go to state 42
    ALTER           shift and go to state 43
    ALTERB          shift and go to state 44
    ISTRUE          shift and go to state 46
    REPEAT          shift and go to state 47
    UNTIL           shift and go to state 48
    WHILE           shift and go to state 49
    CASE            shift and go to state 50
    PRINTVALUES     shift and go to state 51
    SIGNAL          shift and go to state 52
    VIEWSIGNAL      shift and go to state 53
    VARIABLE        shift and go to state 40
    LPARENTESIS     shift and go to state 22
    NUMERO          shift and go to state 54
    TRUE            shift and go to state 56
    FALSE           shift and go to state 57

    value                          shift and go to state 41
    list_statement                 shift and go to state 163
    statement                      shift and go to state 24
    empty                          shift and go to state 25
    new_variable_statement         shift and go to state 26
    values_statement               shift and go to state 27
    alter_statement                shift and go to state 28
    alterb_statement               shift and go to state 29
    condition_statement            shift and go to state 30
    istrue_statement               shift and go to state 31
    repeat_statement               shift and go to state 32
    until_statement                shift and go to state 33
    while_statement                shift and go to state 34
    case_statement                 shift and go to state 35
    printvalues_statement          shift and go to state 36
    signal_statement               shift and go to state 37
    viewsignal_statement           shift and go to state 38
    expression                     shift and go to state 45
    bool                           shift and go to state 55

state 153

    (49) printvalues_statement -> PRINTVALUES LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .

    NEW             reduce using rule 49 (printvalues_statement -> PRINTVALUES LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    VALUES          reduce using rule 49 (printvalues_statement -> PRINTVALUES LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    ALTER           reduce using rule 49 (printvalues_statement -> PRINTVALUES LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    ALTERB          reduce using rule 49 (printvalues_statement -> PRINTVALUES LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    ISTRUE          reduce using rule 49 (printvalues_statement -> PRINTVALUES LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    REPEAT          reduce using rule 49 (printvalues_statement -> PRINTVALUES LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    UNTIL           reduce using rule 49 (printvalues_statement -> PRINTVALUES LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    WHILE           reduce using rule 49 (printvalues_statement -> PRINTVALUES LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    CASE            reduce using rule 49 (printvalues_statement -> PRINTVALUES LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    PRINTVALUES     reduce using rule 49 (printvalues_statement -> PRINTVALUES LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    SIGNAL          reduce using rule 49 (printvalues_statement -> PRINTVALUES LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    VIEWSIGNAL      reduce using rule 49 (printvalues_statement -> PRINTVALUES LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    VARIABLE        reduce using rule 49 (printvalues_statement -> PRINTVALUES LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    LPARENTESIS     reduce using rule 49 (printvalues_statement -> PRINTVALUES LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    NUMERO          reduce using rule 49 (printvalues_statement -> PRINTVALUES LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    TRUE            reduce using rule 49 (printvalues_statement -> PRINTVALUES LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    FALSE           reduce using rule 49 (printvalues_statement -> PRINTVALUES LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    RPARENTESIS     reduce using rule 49 (printvalues_statement -> PRINTVALUES LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    BREAK           reduce using rule 49 (printvalues_statement -> PRINTVALUES LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    WHEN            reduce using rule 49 (printvalues_statement -> PRINTVALUES LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    ELSE            reduce using rule 49 (printvalues_statement -> PRINTVALUES LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    PUNTO_COMA      reduce using rule 49 (printvalues_statement -> PRINTVALUES LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)


state 154

    (50) signal_statement -> SIGNAL LPARENTESIS VARIABLE COMA value . RPARENTESIS PUNTO_COMA

    RPARENTESIS     shift and go to state 164


state 155

    (51) viewsignal_statement -> VIEWSIGNAL LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .

    NEW             reduce using rule 51 (viewsignal_statement -> VIEWSIGNAL LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    VALUES          reduce using rule 51 (viewsignal_statement -> VIEWSIGNAL LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    ALTER           reduce using rule 51 (viewsignal_statement -> VIEWSIGNAL LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    ALTERB          reduce using rule 51 (viewsignal_statement -> VIEWSIGNAL LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    ISTRUE          reduce using rule 51 (viewsignal_statement -> VIEWSIGNAL LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    REPEAT          reduce using rule 51 (viewsignal_statement -> VIEWSIGNAL LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    UNTIL           reduce using rule 51 (viewsignal_statement -> VIEWSIGNAL LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    WHILE           reduce using rule 51 (viewsignal_statement -> VIEWSIGNAL LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    CASE            reduce using rule 51 (viewsignal_statement -> VIEWSIGNAL LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    PRINTVALUES     reduce using rule 51 (viewsignal_statement -> VIEWSIGNAL LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    SIGNAL          reduce using rule 51 (viewsignal_statement -> VIEWSIGNAL LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    VIEWSIGNAL      reduce using rule 51 (viewsignal_statement -> VIEWSIGNAL LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    VARIABLE        reduce using rule 51 (viewsignal_statement -> VIEWSIGNAL LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    LPARENTESIS     reduce using rule 51 (viewsignal_statement -> VIEWSIGNAL LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    NUMERO          reduce using rule 51 (viewsignal_statement -> VIEWSIGNAL LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    TRUE            reduce using rule 51 (viewsignal_statement -> VIEWSIGNAL LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    FALSE           reduce using rule 51 (viewsignal_statement -> VIEWSIGNAL LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    RPARENTESIS     reduce using rule 51 (viewsignal_statement -> VIEWSIGNAL LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    BREAK           reduce using rule 51 (viewsignal_statement -> VIEWSIGNAL LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    WHEN            reduce using rule 51 (viewsignal_statement -> VIEWSIGNAL LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    ELSE            reduce using rule 51 (viewsignal_statement -> VIEWSIGNAL LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    PUNTO_COMA      reduce using rule 51 (viewsignal_statement -> VIEWSIGNAL LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)


state 156

    (6) code_block -> group_proc proc MASTER LPARENTESIS comentario list_statement RPARENTESIS PUNTO_COMA group_proc .

    $end            reduce using rule 6 (code_block -> group_proc proc MASTER LPARENTESIS comentario list_statement RPARENTESIS PUNTO_COMA group_proc .)
    PUNTO_COMA      reduce using rule 6 (code_block -> group_proc proc MASTER LPARENTESIS comentario list_statement RPARENTESIS PUNTO_COMA group_proc .)


state 157

    (29) new_variable_statement -> NEW VARIABLE COMA LPARENTESIS DATATYPE COMA . value RPARENTESIS PUNTO_COMA
    (60) value -> . NUMERO
    (61) value -> . bool
    (41) bool -> . TRUE
    (42) bool -> . FALSE

    NUMERO          shift and go to state 54
    TRUE            shift and go to state 56
    FALSE           shift and go to state 57

    value                          shift and go to state 165
    bool                           shift and go to state 55

state 158

    (30) values_statement -> VALUES LPARENTESIS VARIABLE COMA value RPARENTESIS . PUNTO_COMA

    PUNTO_COMA      shift and go to state 166


state 159

    (31) alter_statement -> ALTER LPARENTESIS VARIABLE COMA operador COMA . value RPARENTESIS PUNTO_COMA
    (60) value -> . NUMERO
    (61) value -> . bool
    (41) bool -> . TRUE
    (42) bool -> . FALSE

    NUMERO          shift and go to state 54
    TRUE            shift and go to state 56
    FALSE           shift and go to state 57

    value                          shift and go to state 167
    bool                           shift and go to state 55

state 160

    (35) repeat_statement -> REPEAT LPARENTESIS list_statement break_statement RPARENTESIS PUNTO_COMA .

    NEW             reduce using rule 35 (repeat_statement -> REPEAT LPARENTESIS list_statement break_statement RPARENTESIS PUNTO_COMA .)
    VALUES          reduce using rule 35 (repeat_statement -> REPEAT LPARENTESIS list_statement break_statement RPARENTESIS PUNTO_COMA .)
    ALTER           reduce using rule 35 (repeat_statement -> REPEAT LPARENTESIS list_statement break_statement RPARENTESIS PUNTO_COMA .)
    ALTERB          reduce using rule 35 (repeat_statement -> REPEAT LPARENTESIS list_statement break_statement RPARENTESIS PUNTO_COMA .)
    ISTRUE          reduce using rule 35 (repeat_statement -> REPEAT LPARENTESIS list_statement break_statement RPARENTESIS PUNTO_COMA .)
    REPEAT          reduce using rule 35 (repeat_statement -> REPEAT LPARENTESIS list_statement break_statement RPARENTESIS PUNTO_COMA .)
    UNTIL           reduce using rule 35 (repeat_statement -> REPEAT LPARENTESIS list_statement break_statement RPARENTESIS PUNTO_COMA .)
    WHILE           reduce using rule 35 (repeat_statement -> REPEAT LPARENTESIS list_statement break_statement RPARENTESIS PUNTO_COMA .)
    CASE            reduce using rule 35 (repeat_statement -> REPEAT LPARENTESIS list_statement break_statement RPARENTESIS PUNTO_COMA .)
    PRINTVALUES     reduce using rule 35 (repeat_statement -> REPEAT LPARENTESIS list_statement break_statement RPARENTESIS PUNTO_COMA .)
    SIGNAL          reduce using rule 35 (repeat_statement -> REPEAT LPARENTESIS list_statement break_statement RPARENTESIS PUNTO_COMA .)
    VIEWSIGNAL      reduce using rule 35 (repeat_statement -> REPEAT LPARENTESIS list_statement break_statement RPARENTESIS PUNTO_COMA .)
    VARIABLE        reduce using rule 35 (repeat_statement -> REPEAT LPARENTESIS list_statement break_statement RPARENTESIS PUNTO_COMA .)
    LPARENTESIS     reduce using rule 35 (repeat_statement -> REPEAT LPARENTESIS list_statement break_statement RPARENTESIS PUNTO_COMA .)
    NUMERO          reduce using rule 35 (repeat_statement -> REPEAT LPARENTESIS list_statement break_statement RPARENTESIS PUNTO_COMA .)
    TRUE            reduce using rule 35 (repeat_statement -> REPEAT LPARENTESIS list_statement break_statement RPARENTESIS PUNTO_COMA .)
    FALSE           reduce using rule 35 (repeat_statement -> REPEAT LPARENTESIS list_statement break_statement RPARENTESIS PUNTO_COMA .)
    RPARENTESIS     reduce using rule 35 (repeat_statement -> REPEAT LPARENTESIS list_statement break_statement RPARENTESIS PUNTO_COMA .)
    BREAK           reduce using rule 35 (repeat_statement -> REPEAT LPARENTESIS list_statement break_statement RPARENTESIS PUNTO_COMA .)
    WHEN            reduce using rule 35 (repeat_statement -> REPEAT LPARENTESIS list_statement break_statement RPARENTESIS PUNTO_COMA .)
    ELSE            reduce using rule 35 (repeat_statement -> REPEAT LPARENTESIS list_statement break_statement RPARENTESIS PUNTO_COMA .)
    PUNTO_COMA      reduce using rule 35 (repeat_statement -> REPEAT LPARENTESIS list_statement break_statement RPARENTESIS PUNTO_COMA .)


state 161

    (39) while_statement -> WHILE expression LPARENTESIS list_statement RPARENTESIS PUNTO_COMA .

    NEW             reduce using rule 39 (while_statement -> WHILE expression LPARENTESIS list_statement RPARENTESIS PUNTO_COMA .)
    VALUES          reduce using rule 39 (while_statement -> WHILE expression LPARENTESIS list_statement RPARENTESIS PUNTO_COMA .)
    ALTER           reduce using rule 39 (while_statement -> WHILE expression LPARENTESIS list_statement RPARENTESIS PUNTO_COMA .)
    ALTERB          reduce using rule 39 (while_statement -> WHILE expression LPARENTESIS list_statement RPARENTESIS PUNTO_COMA .)
    ISTRUE          reduce using rule 39 (while_statement -> WHILE expression LPARENTESIS list_statement RPARENTESIS PUNTO_COMA .)
    REPEAT          reduce using rule 39 (while_statement -> WHILE expression LPARENTESIS list_statement RPARENTESIS PUNTO_COMA .)
    UNTIL           reduce using rule 39 (while_statement -> WHILE expression LPARENTESIS list_statement RPARENTESIS PUNTO_COMA .)
    WHILE           reduce using rule 39 (while_statement -> WHILE expression LPARENTESIS list_statement RPARENTESIS PUNTO_COMA .)
    CASE            reduce using rule 39 (while_statement -> WHILE expression LPARENTESIS list_statement RPARENTESIS PUNTO_COMA .)
    PRINTVALUES     reduce using rule 39 (while_statement -> WHILE expression LPARENTESIS list_statement RPARENTESIS PUNTO_COMA .)
    SIGNAL          reduce using rule 39 (while_statement -> WHILE expression LPARENTESIS list_statement RPARENTESIS PUNTO_COMA .)
    VIEWSIGNAL      reduce using rule 39 (while_statement -> WHILE expression LPARENTESIS list_statement RPARENTESIS PUNTO_COMA .)
    VARIABLE        reduce using rule 39 (while_statement -> WHILE expression LPARENTESIS list_statement RPARENTESIS PUNTO_COMA .)
    LPARENTESIS     reduce using rule 39 (while_statement -> WHILE expression LPARENTESIS list_statement RPARENTESIS PUNTO_COMA .)
    NUMERO          reduce using rule 39 (while_statement -> WHILE expression LPARENTESIS list_statement RPARENTESIS PUNTO_COMA .)
    TRUE            reduce using rule 39 (while_statement -> WHILE expression LPARENTESIS list_statement RPARENTESIS PUNTO_COMA .)
    FALSE           reduce using rule 39 (while_statement -> WHILE expression LPARENTESIS list_statement RPARENTESIS PUNTO_COMA .)
    RPARENTESIS     reduce using rule 39 (while_statement -> WHILE expression LPARENTESIS list_statement RPARENTESIS PUNTO_COMA .)
    BREAK           reduce using rule 39 (while_statement -> WHILE expression LPARENTESIS list_statement RPARENTESIS PUNTO_COMA .)
    WHEN            reduce using rule 39 (while_statement -> WHILE expression LPARENTESIS list_statement RPARENTESIS PUNTO_COMA .)
    ELSE            reduce using rule 39 (while_statement -> WHILE expression LPARENTESIS list_statement RPARENTESIS PUNTO_COMA .)
    PUNTO_COMA      reduce using rule 39 (while_statement -> WHILE expression LPARENTESIS list_statement RPARENTESIS PUNTO_COMA .)


state 162

    (40) while_statement -> WHILE istrue LPARENTESIS list_statement RPARENTESIS PUNTO_COMA .

    NEW             reduce using rule 40 (while_statement -> WHILE istrue LPARENTESIS list_statement RPARENTESIS PUNTO_COMA .)
    VALUES          reduce using rule 40 (while_statement -> WHILE istrue LPARENTESIS list_statement RPARENTESIS PUNTO_COMA .)
    ALTER           reduce using rule 40 (while_statement -> WHILE istrue LPARENTESIS list_statement RPARENTESIS PUNTO_COMA .)
    ALTERB          reduce using rule 40 (while_statement -> WHILE istrue LPARENTESIS list_statement RPARENTESIS PUNTO_COMA .)
    ISTRUE          reduce using rule 40 (while_statement -> WHILE istrue LPARENTESIS list_statement RPARENTESIS PUNTO_COMA .)
    REPEAT          reduce using rule 40 (while_statement -> WHILE istrue LPARENTESIS list_statement RPARENTESIS PUNTO_COMA .)
    UNTIL           reduce using rule 40 (while_statement -> WHILE istrue LPARENTESIS list_statement RPARENTESIS PUNTO_COMA .)
    WHILE           reduce using rule 40 (while_statement -> WHILE istrue LPARENTESIS list_statement RPARENTESIS PUNTO_COMA .)
    CASE            reduce using rule 40 (while_statement -> WHILE istrue LPARENTESIS list_statement RPARENTESIS PUNTO_COMA .)
    PRINTVALUES     reduce using rule 40 (while_statement -> WHILE istrue LPARENTESIS list_statement RPARENTESIS PUNTO_COMA .)
    SIGNAL          reduce using rule 40 (while_statement -> WHILE istrue LPARENTESIS list_statement RPARENTESIS PUNTO_COMA .)
    VIEWSIGNAL      reduce using rule 40 (while_statement -> WHILE istrue LPARENTESIS list_statement RPARENTESIS PUNTO_COMA .)
    VARIABLE        reduce using rule 40 (while_statement -> WHILE istrue LPARENTESIS list_statement RPARENTESIS PUNTO_COMA .)
    LPARENTESIS     reduce using rule 40 (while_statement -> WHILE istrue LPARENTESIS list_statement RPARENTESIS PUNTO_COMA .)
    NUMERO          reduce using rule 40 (while_statement -> WHILE istrue LPARENTESIS list_statement RPARENTESIS PUNTO_COMA .)
    TRUE            reduce using rule 40 (while_statement -> WHILE istrue LPARENTESIS list_statement RPARENTESIS PUNTO_COMA .)
    FALSE           reduce using rule 40 (while_statement -> WHILE istrue LPARENTESIS list_statement RPARENTESIS PUNTO_COMA .)
    RPARENTESIS     reduce using rule 40 (while_statement -> WHILE istrue LPARENTESIS list_statement RPARENTESIS PUNTO_COMA .)
    BREAK           reduce using rule 40 (while_statement -> WHILE istrue LPARENTESIS list_statement RPARENTESIS PUNTO_COMA .)
    WHEN            reduce using rule 40 (while_statement -> WHILE istrue LPARENTESIS list_statement RPARENTESIS PUNTO_COMA .)
    ELSE            reduce using rule 40 (while_statement -> WHILE istrue LPARENTESIS list_statement RPARENTESIS PUNTO_COMA .)
    PUNTO_COMA      reduce using rule 40 (while_statement -> WHILE istrue LPARENTESIS list_statement RPARENTESIS PUNTO_COMA .)


state 163

    (46) case_when_statement -> WHEN value THEN list_statement .

    WHEN            reduce using rule 46 (case_when_statement -> WHEN value THEN list_statement .)
    ELSE            reduce using rule 46 (case_when_statement -> WHEN value THEN list_statement .)
    PUNTO_COMA      reduce using rule 46 (case_when_statement -> WHEN value THEN list_statement .)


state 164

    (50) signal_statement -> SIGNAL LPARENTESIS VARIABLE COMA value RPARENTESIS . PUNTO_COMA

    PUNTO_COMA      shift and go to state 168


state 165

    (29) new_variable_statement -> NEW VARIABLE COMA LPARENTESIS DATATYPE COMA value . RPARENTESIS PUNTO_COMA

    RPARENTESIS     shift and go to state 169


state 166

    (30) values_statement -> VALUES LPARENTESIS VARIABLE COMA value RPARENTESIS PUNTO_COMA .

    NEW             reduce using rule 30 (values_statement -> VALUES LPARENTESIS VARIABLE COMA value RPARENTESIS PUNTO_COMA .)
    VALUES          reduce using rule 30 (values_statement -> VALUES LPARENTESIS VARIABLE COMA value RPARENTESIS PUNTO_COMA .)
    ALTER           reduce using rule 30 (values_statement -> VALUES LPARENTESIS VARIABLE COMA value RPARENTESIS PUNTO_COMA .)
    ALTERB          reduce using rule 30 (values_statement -> VALUES LPARENTESIS VARIABLE COMA value RPARENTESIS PUNTO_COMA .)
    ISTRUE          reduce using rule 30 (values_statement -> VALUES LPARENTESIS VARIABLE COMA value RPARENTESIS PUNTO_COMA .)
    REPEAT          reduce using rule 30 (values_statement -> VALUES LPARENTESIS VARIABLE COMA value RPARENTESIS PUNTO_COMA .)
    UNTIL           reduce using rule 30 (values_statement -> VALUES LPARENTESIS VARIABLE COMA value RPARENTESIS PUNTO_COMA .)
    WHILE           reduce using rule 30 (values_statement -> VALUES LPARENTESIS VARIABLE COMA value RPARENTESIS PUNTO_COMA .)
    CASE            reduce using rule 30 (values_statement -> VALUES LPARENTESIS VARIABLE COMA value RPARENTESIS PUNTO_COMA .)
    PRINTVALUES     reduce using rule 30 (values_statement -> VALUES LPARENTESIS VARIABLE COMA value RPARENTESIS PUNTO_COMA .)
    SIGNAL          reduce using rule 30 (values_statement -> VALUES LPARENTESIS VARIABLE COMA value RPARENTESIS PUNTO_COMA .)
    VIEWSIGNAL      reduce using rule 30 (values_statement -> VALUES LPARENTESIS VARIABLE COMA value RPARENTESIS PUNTO_COMA .)
    VARIABLE        reduce using rule 30 (values_statement -> VALUES LPARENTESIS VARIABLE COMA value RPARENTESIS PUNTO_COMA .)
    LPARENTESIS     reduce using rule 30 (values_statement -> VALUES LPARENTESIS VARIABLE COMA value RPARENTESIS PUNTO_COMA .)
    NUMERO          reduce using rule 30 (values_statement -> VALUES LPARENTESIS VARIABLE COMA value RPARENTESIS PUNTO_COMA .)
    TRUE            reduce using rule 30 (values_statement -> VALUES LPARENTESIS VARIABLE COMA value RPARENTESIS PUNTO_COMA .)
    FALSE           reduce using rule 30 (values_statement -> VALUES LPARENTESIS VARIABLE COMA value RPARENTESIS PUNTO_COMA .)
    RPARENTESIS     reduce using rule 30 (values_statement -> VALUES LPARENTESIS VARIABLE COMA value RPARENTESIS PUNTO_COMA .)
    BREAK           reduce using rule 30 (values_statement -> VALUES LPARENTESIS VARIABLE COMA value RPARENTESIS PUNTO_COMA .)
    WHEN            reduce using rule 30 (values_statement -> VALUES LPARENTESIS VARIABLE COMA value RPARENTESIS PUNTO_COMA .)
    ELSE            reduce using rule 30 (values_statement -> VALUES LPARENTESIS VARIABLE COMA value RPARENTESIS PUNTO_COMA .)
    PUNTO_COMA      reduce using rule 30 (values_statement -> VALUES LPARENTESIS VARIABLE COMA value RPARENTESIS PUNTO_COMA .)


state 167

    (31) alter_statement -> ALTER LPARENTESIS VARIABLE COMA operador COMA value . RPARENTESIS PUNTO_COMA

    RPARENTESIS     shift and go to state 170


state 168

    (50) signal_statement -> SIGNAL LPARENTESIS VARIABLE COMA value RPARENTESIS PUNTO_COMA .

    NEW             reduce using rule 50 (signal_statement -> SIGNAL LPARENTESIS VARIABLE COMA value RPARENTESIS PUNTO_COMA .)
    VALUES          reduce using rule 50 (signal_statement -> SIGNAL LPARENTESIS VARIABLE COMA value RPARENTESIS PUNTO_COMA .)
    ALTER           reduce using rule 50 (signal_statement -> SIGNAL LPARENTESIS VARIABLE COMA value RPARENTESIS PUNTO_COMA .)
    ALTERB          reduce using rule 50 (signal_statement -> SIGNAL LPARENTESIS VARIABLE COMA value RPARENTESIS PUNTO_COMA .)
    ISTRUE          reduce using rule 50 (signal_statement -> SIGNAL LPARENTESIS VARIABLE COMA value RPARENTESIS PUNTO_COMA .)
    REPEAT          reduce using rule 50 (signal_statement -> SIGNAL LPARENTESIS VARIABLE COMA value RPARENTESIS PUNTO_COMA .)
    UNTIL           reduce using rule 50 (signal_statement -> SIGNAL LPARENTESIS VARIABLE COMA value RPARENTESIS PUNTO_COMA .)
    WHILE           reduce using rule 50 (signal_statement -> SIGNAL LPARENTESIS VARIABLE COMA value RPARENTESIS PUNTO_COMA .)
    CASE            reduce using rule 50 (signal_statement -> SIGNAL LPARENTESIS VARIABLE COMA value RPARENTESIS PUNTO_COMA .)
    PRINTVALUES     reduce using rule 50 (signal_statement -> SIGNAL LPARENTESIS VARIABLE COMA value RPARENTESIS PUNTO_COMA .)
    SIGNAL          reduce using rule 50 (signal_statement -> SIGNAL LPARENTESIS VARIABLE COMA value RPARENTESIS PUNTO_COMA .)
    VIEWSIGNAL      reduce using rule 50 (signal_statement -> SIGNAL LPARENTESIS VARIABLE COMA value RPARENTESIS PUNTO_COMA .)
    VARIABLE        reduce using rule 50 (signal_statement -> SIGNAL LPARENTESIS VARIABLE COMA value RPARENTESIS PUNTO_COMA .)
    LPARENTESIS     reduce using rule 50 (signal_statement -> SIGNAL LPARENTESIS VARIABLE COMA value RPARENTESIS PUNTO_COMA .)
    NUMERO          reduce using rule 50 (signal_statement -> SIGNAL LPARENTESIS VARIABLE COMA value RPARENTESIS PUNTO_COMA .)
    TRUE            reduce using rule 50 (signal_statement -> SIGNAL LPARENTESIS VARIABLE COMA value RPARENTESIS PUNTO_COMA .)
    FALSE           reduce using rule 50 (signal_statement -> SIGNAL LPARENTESIS VARIABLE COMA value RPARENTESIS PUNTO_COMA .)
    RPARENTESIS     reduce using rule 50 (signal_statement -> SIGNAL LPARENTESIS VARIABLE COMA value RPARENTESIS PUNTO_COMA .)
    BREAK           reduce using rule 50 (signal_statement -> SIGNAL LPARENTESIS VARIABLE COMA value RPARENTESIS PUNTO_COMA .)
    WHEN            reduce using rule 50 (signal_statement -> SIGNAL LPARENTESIS VARIABLE COMA value RPARENTESIS PUNTO_COMA .)
    ELSE            reduce using rule 50 (signal_statement -> SIGNAL LPARENTESIS VARIABLE COMA value RPARENTESIS PUNTO_COMA .)
    PUNTO_COMA      reduce using rule 50 (signal_statement -> SIGNAL LPARENTESIS VARIABLE COMA value RPARENTESIS PUNTO_COMA .)


state 169

    (29) new_variable_statement -> NEW VARIABLE COMA LPARENTESIS DATATYPE COMA value RPARENTESIS . PUNTO_COMA

    PUNTO_COMA      shift and go to state 171


state 170

    (31) alter_statement -> ALTER LPARENTESIS VARIABLE COMA operador COMA value RPARENTESIS . PUNTO_COMA

    PUNTO_COMA      shift and go to state 172


state 171

    (29) new_variable_statement -> NEW VARIABLE COMA LPARENTESIS DATATYPE COMA value RPARENTESIS PUNTO_COMA .

    NEW             reduce using rule 29 (new_variable_statement -> NEW VARIABLE COMA LPARENTESIS DATATYPE COMA value RPARENTESIS PUNTO_COMA .)
    VALUES          reduce using rule 29 (new_variable_statement -> NEW VARIABLE COMA LPARENTESIS DATATYPE COMA value RPARENTESIS PUNTO_COMA .)
    ALTER           reduce using rule 29 (new_variable_statement -> NEW VARIABLE COMA LPARENTESIS DATATYPE COMA value RPARENTESIS PUNTO_COMA .)
    ALTERB          reduce using rule 29 (new_variable_statement -> NEW VARIABLE COMA LPARENTESIS DATATYPE COMA value RPARENTESIS PUNTO_COMA .)
    ISTRUE          reduce using rule 29 (new_variable_statement -> NEW VARIABLE COMA LPARENTESIS DATATYPE COMA value RPARENTESIS PUNTO_COMA .)
    REPEAT          reduce using rule 29 (new_variable_statement -> NEW VARIABLE COMA LPARENTESIS DATATYPE COMA value RPARENTESIS PUNTO_COMA .)
    UNTIL           reduce using rule 29 (new_variable_statement -> NEW VARIABLE COMA LPARENTESIS DATATYPE COMA value RPARENTESIS PUNTO_COMA .)
    WHILE           reduce using rule 29 (new_variable_statement -> NEW VARIABLE COMA LPARENTESIS DATATYPE COMA value RPARENTESIS PUNTO_COMA .)
    CASE            reduce using rule 29 (new_variable_statement -> NEW VARIABLE COMA LPARENTESIS DATATYPE COMA value RPARENTESIS PUNTO_COMA .)
    PRINTVALUES     reduce using rule 29 (new_variable_statement -> NEW VARIABLE COMA LPARENTESIS DATATYPE COMA value RPARENTESIS PUNTO_COMA .)
    SIGNAL          reduce using rule 29 (new_variable_statement -> NEW VARIABLE COMA LPARENTESIS DATATYPE COMA value RPARENTESIS PUNTO_COMA .)
    VIEWSIGNAL      reduce using rule 29 (new_variable_statement -> NEW VARIABLE COMA LPARENTESIS DATATYPE COMA value RPARENTESIS PUNTO_COMA .)
    VARIABLE        reduce using rule 29 (new_variable_statement -> NEW VARIABLE COMA LPARENTESIS DATATYPE COMA value RPARENTESIS PUNTO_COMA .)
    LPARENTESIS     reduce using rule 29 (new_variable_statement -> NEW VARIABLE COMA LPARENTESIS DATATYPE COMA value RPARENTESIS PUNTO_COMA .)
    NUMERO          reduce using rule 29 (new_variable_statement -> NEW VARIABLE COMA LPARENTESIS DATATYPE COMA value RPARENTESIS PUNTO_COMA .)
    TRUE            reduce using rule 29 (new_variable_statement -> NEW VARIABLE COMA LPARENTESIS DATATYPE COMA value RPARENTESIS PUNTO_COMA .)
    FALSE           reduce using rule 29 (new_variable_statement -> NEW VARIABLE COMA LPARENTESIS DATATYPE COMA value RPARENTESIS PUNTO_COMA .)
    RPARENTESIS     reduce using rule 29 (new_variable_statement -> NEW VARIABLE COMA LPARENTESIS DATATYPE COMA value RPARENTESIS PUNTO_COMA .)
    BREAK           reduce using rule 29 (new_variable_statement -> NEW VARIABLE COMA LPARENTESIS DATATYPE COMA value RPARENTESIS PUNTO_COMA .)
    WHEN            reduce using rule 29 (new_variable_statement -> NEW VARIABLE COMA LPARENTESIS DATATYPE COMA value RPARENTESIS PUNTO_COMA .)
    ELSE            reduce using rule 29 (new_variable_statement -> NEW VARIABLE COMA LPARENTESIS DATATYPE COMA value RPARENTESIS PUNTO_COMA .)
    PUNTO_COMA      reduce using rule 29 (new_variable_statement -> NEW VARIABLE COMA LPARENTESIS DATATYPE COMA value RPARENTESIS PUNTO_COMA .)


state 172

    (31) alter_statement -> ALTER LPARENTESIS VARIABLE COMA operador COMA value RPARENTESIS PUNTO_COMA .

    NEW             reduce using rule 31 (alter_statement -> ALTER LPARENTESIS VARIABLE COMA operador COMA value RPARENTESIS PUNTO_COMA .)
    VALUES          reduce using rule 31 (alter_statement -> ALTER LPARENTESIS VARIABLE COMA operador COMA value RPARENTESIS PUNTO_COMA .)
    ALTER           reduce using rule 31 (alter_statement -> ALTER LPARENTESIS VARIABLE COMA operador COMA value RPARENTESIS PUNTO_COMA .)
    ALTERB          reduce using rule 31 (alter_statement -> ALTER LPARENTESIS VARIABLE COMA operador COMA value RPARENTESIS PUNTO_COMA .)
    ISTRUE          reduce using rule 31 (alter_statement -> ALTER LPARENTESIS VARIABLE COMA operador COMA value RPARENTESIS PUNTO_COMA .)
    REPEAT          reduce using rule 31 (alter_statement -> ALTER LPARENTESIS VARIABLE COMA operador COMA value RPARENTESIS PUNTO_COMA .)
    UNTIL           reduce using rule 31 (alter_statement -> ALTER LPARENTESIS VARIABLE COMA operador COMA value RPARENTESIS PUNTO_COMA .)
    WHILE           reduce using rule 31 (alter_statement -> ALTER LPARENTESIS VARIABLE COMA operador COMA value RPARENTESIS PUNTO_COMA .)
    CASE            reduce using rule 31 (alter_statement -> ALTER LPARENTESIS VARIABLE COMA operador COMA value RPARENTESIS PUNTO_COMA .)
    PRINTVALUES     reduce using rule 31 (alter_statement -> ALTER LPARENTESIS VARIABLE COMA operador COMA value RPARENTESIS PUNTO_COMA .)
    SIGNAL          reduce using rule 31 (alter_statement -> ALTER LPARENTESIS VARIABLE COMA operador COMA value RPARENTESIS PUNTO_COMA .)
    VIEWSIGNAL      reduce using rule 31 (alter_statement -> ALTER LPARENTESIS VARIABLE COMA operador COMA value RPARENTESIS PUNTO_COMA .)
    VARIABLE        reduce using rule 31 (alter_statement -> ALTER LPARENTESIS VARIABLE COMA operador COMA value RPARENTESIS PUNTO_COMA .)
    LPARENTESIS     reduce using rule 31 (alter_statement -> ALTER LPARENTESIS VARIABLE COMA operador COMA value RPARENTESIS PUNTO_COMA .)
    NUMERO          reduce using rule 31 (alter_statement -> ALTER LPARENTESIS VARIABLE COMA operador COMA value RPARENTESIS PUNTO_COMA .)
    TRUE            reduce using rule 31 (alter_statement -> ALTER LPARENTESIS VARIABLE COMA operador COMA value RPARENTESIS PUNTO_COMA .)
    FALSE           reduce using rule 31 (alter_statement -> ALTER LPARENTESIS VARIABLE COMA operador COMA value RPARENTESIS PUNTO_COMA .)
    RPARENTESIS     reduce using rule 31 (alter_statement -> ALTER LPARENTESIS VARIABLE COMA operador COMA value RPARENTESIS PUNTO_COMA .)
    BREAK           reduce using rule 31 (alter_statement -> ALTER LPARENTESIS VARIABLE COMA operador COMA value RPARENTESIS PUNTO_COMA .)
    WHEN            reduce using rule 31 (alter_statement -> ALTER LPARENTESIS VARIABLE COMA operador COMA value RPARENTESIS PUNTO_COMA .)
    ELSE            reduce using rule 31 (alter_statement -> ALTER LPARENTESIS VARIABLE COMA operador COMA value RPARENTESIS PUNTO_COMA .)
    PUNTO_COMA      reduce using rule 31 (alter_statement -> ALTER LPARENTESIS VARIABLE COMA operador COMA value RPARENTESIS PUNTO_COMA .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for PROC in state 2 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 24 resolved as shift
WARNING: shift/reduce conflict for LPARENTESIS in state 24 resolved as shift
WARNING: shift/reduce conflict for NUMERO in state 24 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 24 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 24 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 48 resolved as shift
WARNING: shift/reduce conflict for LPARENTESIS in state 48 resolved as shift
WARNING: shift/reduce conflict for NUMERO in state 48 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 48 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 48 resolved as shift
WARNING: shift/reduce conflict for + in state 91 resolved as shift
WARNING: shift/reduce conflict for - in state 91 resolved as shift
WARNING: shift/reduce conflict for * in state 91 resolved as shift
WARNING: shift/reduce conflict for / in state 91 resolved as shift
WARNING: shift/reduce conflict for + in state 92 resolved as shift
WARNING: shift/reduce conflict for - in state 92 resolved as shift
WARNING: shift/reduce conflict for * in state 92 resolved as shift
WARNING: shift/reduce conflict for / in state 92 resolved as shift
WARNING: shift/reduce conflict for + in state 93 resolved as shift
WARNING: shift/reduce conflict for - in state 93 resolved as shift
WARNING: shift/reduce conflict for * in state 93 resolved as shift
WARNING: shift/reduce conflict for / in state 93 resolved as shift
WARNING: shift/reduce conflict for + in state 94 resolved as shift
WARNING: shift/reduce conflict for - in state 94 resolved as shift
WARNING: shift/reduce conflict for * in state 94 resolved as shift
WARNING: shift/reduce conflict for / in state 94 resolved as shift
WARNING: shift/reduce conflict for PROC in state 110 resolved as shift
WARNING: shift/reduce conflict for PROC in state 126 resolved as shift
