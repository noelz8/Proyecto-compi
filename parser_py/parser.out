Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ARROBA
    BOOL
    CALL
    COMILLAS
    COND_NUMERICA
    DER_EXCLAMACION
    DER_INTERROGACION
    DIVISION
    ELSE
    ENYE
    GUION
    ID
    IGUALDAD
    IZQ_EXCLAMACION
    IZQ_INTERROGACION
    LETRA
    MAYUSCULA
    MULTIPLICACION
    PUNTO
    RESTA
    SUMA
    TILDE
    UNDERSCORE

Grammar

Rule 0     S' -> program
Rule 1     program -> lista_comentarios code_block
Rule 2     lista_comentarios -> comentario lista_comentarios
Rule 3     lista_comentarios -> empty
Rule 4     comentario -> COMENTARIO
Rule 5     code_block -> proc MASTER LPARENTESIS comentario list_statement RPARENTESIS PUNTO_COMA group_proc
Rule 6     code_block -> group_proc proc MASTER LPARENTESIS comentario list_statement RPARENTESIS PUNTO_COMA group_proc
Rule 7     proc -> PROC
Rule 8     group_proc -> PROC VARIABLE LPARENTESIS COMENTARIO list_statement RPARENTESIS PUNTO_COMA group_proc
Rule 9     group_proc -> empty
Rule 10    list_statement -> statement list_statement
Rule 11    list_statement -> comentario
Rule 12    list_statement -> empty
Rule 13    statement -> no_return_statement
Rule 14    statement -> return_statement
Rule 15    no_return_statement -> new_variable_statement
Rule 16    no_return_statement -> alterb_statement
Rule 17    no_return_statement -> values_statement
Rule 18    no_return_statement -> repeat_statement
Rule 19    no_return_statement -> until_statement
Rule 20    no_return_statement -> while_statement
Rule 21    no_return_statement -> case_statement
Rule 22    no_return_statement -> printvalues_statement
Rule 23    no_return_statement -> signal_statement
Rule 24    return_statement -> return_num_statement
Rule 25    return_statement -> return_bool_statement
Rule 26    return_num_statement -> viewsignal_statement
Rule 27    return_num_statement -> alter_statement
Rule 28    return_bool_statement -> condition_statement
Rule 29    return_bool_statement -> istrue_statement
Rule 30    new_variable_statement -> NEW VARIABLE COMA LPARENTESIS DATATYPE COMA value RPARENTESIS PUNTO_COMA
Rule 31    values_statement -> VALUES LPARENTESIS VARIABLE COMA value RPARENTESIS PUNTO_COMA
Rule 32    alter_statement -> ALTER LPARENTESIS VARIABLE COMA operador COMA return_num_statement RPARENTESIS PUNTO_COMA
Rule 33    alter_statement -> ALTER LPARENTESIS VARIABLE COMA operador COMA expression RPARENTESIS PUNTO_COMA
Rule 34    operador -> ADD
Rule 35    operador -> SUB
Rule 36    operador -> MUL
Rule 37    operador -> DIV
Rule 38    alterb_statement -> ALTERB LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA
Rule 39    condition_statement -> expression condition expression
Rule 40    istrue_statement -> ISTRUE LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA
Rule 41    repeat_statement -> REPEAT LPARENTESIS list_statement break_statement RPARENTESIS PUNTO_COMA
Rule 42    break_statement -> BREAK PUNTO_COMA
Rule 43    until_statement -> UNTIL LPARENTESIS list_statement RPARENTESIS condition_statement PUNTO_COMA
Rule 44    condition -> MAYOR_QUE
Rule 45    condition -> MENOR_QUE
Rule 46    condition -> IGUAL
Rule 47    condition -> DISTINTO_QUE
Rule 48    condition -> MAYOR_IGUAL_QUE
Rule 49    condition -> MENOR_IGUAL_QUE
Rule 50    while_statement -> WHILE condition_statement LPARENTESIS list_statement RPARENTESIS PUNTO_COMA
Rule 51    while_statement -> WHILE istrue LPARENTESIS list_statement RPARENTESIS PUNTO_COMA
Rule 52    bool -> TRUE
Rule 53    bool -> FALSE
Rule 54    case_statement -> CASE VARIABLE case_when_statements else_statement PUNTO_COMA
Rule 55    case_when_statements -> case_when_statement case_when_statements
Rule 56    case_when_statements -> empty
Rule 57    case_when_statement -> WHEN value THEN list_statement
Rule 58    else_statement -> list_statement
Rule 59    else_statement -> empty
Rule 60    printvalues_statement -> PRINTVALUES LPARENTESIS list_content_print RPARENTESIS PUNTO_COMA
Rule 61    list_content_print -> content_print COMA list_content_print
Rule 62    list_content_print -> content_print
Rule 63    content_print -> STRING
Rule 64    content_print -> VARIABLE
Rule 65    content_print -> value
Rule 66    signal_statement -> SIGNAL LPARENTESIS VARIABLE COMA return_num_statement RPARENTESIS PUNTO_COMA
Rule 67    signal_statement -> SIGNAL LPARENTESIS VARIABLE COMA expression RPARENTESIS PUNTO_COMA
Rule 68    viewsignal_statement -> VIEWSIGNAL LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA
Rule 69    viewsignal_statement -> VIEWSIGNAL LPARENTESIS expression RPARENTESIS PUNTO_COMA
Rule 70    viewsignal_statement -> VIEWSIGNAL LPARENTESIS alter_statement RPARENTESIS PUNTO_COMA
Rule 71    expression -> NUMERO
Rule 72    expression -> VARIABLE
Rule 73    expression -> LPARENTESIS expression RPARENTESIS
Rule 74    expression -> expression + expression
Rule 75    expression -> expression - expression
Rule 76    expression -> expression * expression
Rule 77    expression -> expression / expression
Rule 78    istrue -> ISTRUE LPARENTESIS VARIABLE RPARENTESIS
Rule 79    value -> expression
Rule 80    value -> bool
Rule 81    value -> return_num_statement
Rule 82    value -> return_bool_statement
Rule 83    empty -> <empty>

Terminals, with rules where they appear

*                    : 76
+                    : 74
-                    : 75
/                    : 77
ADD                  : 34
ALTER                : 32 33
ALTERB               : 38
ARROBA               : 
BOOL                 : 
BREAK                : 42
CALL                 : 
CASE                 : 54
COMA                 : 30 30 31 32 32 33 33 61 66 67
COMENTARIO           : 4 8
COMILLAS             : 
COND_NUMERICA        : 
DATATYPE             : 30
DER_EXCLAMACION      : 
DER_INTERROGACION    : 
DISTINTO_QUE         : 47
DIV                  : 37
DIVISION             : 
ELSE                 : 
ENYE                 : 
FALSE                : 53
GUION                : 
ID                   : 
IGUAL                : 46
IGUALDAD             : 
ISTRUE               : 40 78
IZQ_EXCLAMACION      : 
IZQ_INTERROGACION    : 
LETRA                : 
LPARENTESIS          : 5 6 8 30 31 32 33 38 40 41 43 50 51 60 66 67 68 69 70 73 78
MASTER               : 5 6
MAYOR_IGUAL_QUE      : 48
MAYOR_QUE            : 44
MAYUSCULA            : 
MENOR_IGUAL_QUE      : 49
MENOR_QUE            : 45
MUL                  : 36
MULTIPLICACION       : 
NEW                  : 30
NUMERO               : 71
PRINTVALUES          : 60
PROC                 : 7 8
PUNTO                : 
PUNTO_COMA           : 5 6 8 30 31 32 33 38 40 41 42 43 50 51 54 60 66 67 68 69 70
REPEAT               : 41
RESTA                : 
RPARENTESIS          : 5 6 8 30 31 32 33 38 40 41 43 50 51 60 66 67 68 69 70 73 78
SIGNAL               : 66 67
STRING               : 63
SUB                  : 35
SUMA                 : 
THEN                 : 57
TILDE                : 
TRUE                 : 52
UNDERSCORE           : 
UNTIL                : 43
VALUES               : 31
VARIABLE             : 8 30 31 32 33 38 40 54 64 66 67 68 72 78
VIEWSIGNAL           : 68 69 70
WHEN                 : 57
WHILE                : 50 51
error                : 

Nonterminals, with rules where they appear

alter_statement      : 27 70
alterb_statement     : 16
bool                 : 80
break_statement      : 41
case_statement       : 21
case_when_statement  : 55
case_when_statements : 54 55
code_block           : 1
comentario           : 2 5 6 11
condition            : 39
condition_statement  : 28 43 50
content_print        : 61 62
else_statement       : 54
empty                : 3 9 12 56 59
expression           : 33 39 39 67 69 73 74 74 75 75 76 76 77 77 79
group_proc           : 5 6 6 8
istrue               : 51
istrue_statement     : 29
list_content_print   : 60 61
list_statement       : 5 6 8 10 41 43 50 51 57 58
lista_comentarios    : 1 2
new_variable_statement : 15
no_return_statement  : 13
operador             : 32 33
printvalues_statement : 22
proc                 : 5 6
program              : 0
repeat_statement     : 18
return_bool_statement : 25 82
return_num_statement : 24 32 66 81
return_statement     : 14
signal_statement     : 23
statement            : 10
until_statement      : 19
value                : 30 31 57 65
values_statement     : 17
viewsignal_statement : 26
while_statement      : 20

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . lista_comentarios code_block
    (2) lista_comentarios -> . comentario lista_comentarios
    (3) lista_comentarios -> . empty
    (4) comentario -> . COMENTARIO
    (83) empty -> .

    COMENTARIO      shift and go to state 5
    PROC            reduce using rule 83 (empty -> .)

    program                        shift and go to state 1
    lista_comentarios              shift and go to state 2
    comentario                     shift and go to state 3
    empty                          shift and go to state 4

state 1

    (0) S' -> program .



state 2

    (1) program -> lista_comentarios . code_block
    (5) code_block -> . proc MASTER LPARENTESIS comentario list_statement RPARENTESIS PUNTO_COMA group_proc
    (6) code_block -> . group_proc proc MASTER LPARENTESIS comentario list_statement RPARENTESIS PUNTO_COMA group_proc
    (7) proc -> . PROC
    (8) group_proc -> . PROC VARIABLE LPARENTESIS COMENTARIO list_statement RPARENTESIS PUNTO_COMA group_proc
    (9) group_proc -> . empty
    (83) empty -> .

  ! shift/reduce conflict for PROC resolved as shift
    PROC            shift and go to state 9

  ! PROC            [ reduce using rule 83 (empty -> .) ]

    code_block                     shift and go to state 6
    proc                           shift and go to state 7
    group_proc                     shift and go to state 8
    empty                          shift and go to state 10

state 3

    (2) lista_comentarios -> comentario . lista_comentarios
    (2) lista_comentarios -> . comentario lista_comentarios
    (3) lista_comentarios -> . empty
    (4) comentario -> . COMENTARIO
    (83) empty -> .

    COMENTARIO      shift and go to state 5
    PROC            reduce using rule 83 (empty -> .)

    comentario                     shift and go to state 3
    lista_comentarios              shift and go to state 11
    empty                          shift and go to state 4

state 4

    (3) lista_comentarios -> empty .

    PROC            reduce using rule 3 (lista_comentarios -> empty .)


state 5

    (4) comentario -> COMENTARIO .

    COMENTARIO      reduce using rule 4 (comentario -> COMENTARIO .)
    PROC            reduce using rule 4 (comentario -> COMENTARIO .)
    NEW             reduce using rule 4 (comentario -> COMENTARIO .)
    ALTERB          reduce using rule 4 (comentario -> COMENTARIO .)
    VALUES          reduce using rule 4 (comentario -> COMENTARIO .)
    REPEAT          reduce using rule 4 (comentario -> COMENTARIO .)
    UNTIL           reduce using rule 4 (comentario -> COMENTARIO .)
    WHILE           reduce using rule 4 (comentario -> COMENTARIO .)
    CASE            reduce using rule 4 (comentario -> COMENTARIO .)
    PRINTVALUES     reduce using rule 4 (comentario -> COMENTARIO .)
    SIGNAL          reduce using rule 4 (comentario -> COMENTARIO .)
    VIEWSIGNAL      reduce using rule 4 (comentario -> COMENTARIO .)
    ALTER           reduce using rule 4 (comentario -> COMENTARIO .)
    ISTRUE          reduce using rule 4 (comentario -> COMENTARIO .)
    NUMERO          reduce using rule 4 (comentario -> COMENTARIO .)
    VARIABLE        reduce using rule 4 (comentario -> COMENTARIO .)
    LPARENTESIS     reduce using rule 4 (comentario -> COMENTARIO .)
    RPARENTESIS     reduce using rule 4 (comentario -> COMENTARIO .)
    BREAK           reduce using rule 4 (comentario -> COMENTARIO .)
    PUNTO_COMA      reduce using rule 4 (comentario -> COMENTARIO .)
    WHEN            reduce using rule 4 (comentario -> COMENTARIO .)


state 6

    (1) program -> lista_comentarios code_block .

    $end            reduce using rule 1 (program -> lista_comentarios code_block .)


state 7

    (5) code_block -> proc . MASTER LPARENTESIS comentario list_statement RPARENTESIS PUNTO_COMA group_proc

    MASTER          shift and go to state 12


state 8

    (6) code_block -> group_proc . proc MASTER LPARENTESIS comentario list_statement RPARENTESIS PUNTO_COMA group_proc
    (7) proc -> . PROC

    PROC            shift and go to state 14

    proc                           shift and go to state 13

state 9

    (7) proc -> PROC .
    (8) group_proc -> PROC . VARIABLE LPARENTESIS COMENTARIO list_statement RPARENTESIS PUNTO_COMA group_proc

    MASTER          reduce using rule 7 (proc -> PROC .)
    VARIABLE        shift and go to state 15


state 10

    (9) group_proc -> empty .

    PROC            reduce using rule 9 (group_proc -> empty .)
    $end            reduce using rule 9 (group_proc -> empty .)


state 11

    (2) lista_comentarios -> comentario lista_comentarios .

    PROC            reduce using rule 2 (lista_comentarios -> comentario lista_comentarios .)


state 12

    (5) code_block -> proc MASTER . LPARENTESIS comentario list_statement RPARENTESIS PUNTO_COMA group_proc

    LPARENTESIS     shift and go to state 16


state 13

    (6) code_block -> group_proc proc . MASTER LPARENTESIS comentario list_statement RPARENTESIS PUNTO_COMA group_proc

    MASTER          shift and go to state 17


state 14

    (7) proc -> PROC .

    MASTER          reduce using rule 7 (proc -> PROC .)


state 15

    (8) group_proc -> PROC VARIABLE . LPARENTESIS COMENTARIO list_statement RPARENTESIS PUNTO_COMA group_proc

    LPARENTESIS     shift and go to state 18


state 16

    (5) code_block -> proc MASTER LPARENTESIS . comentario list_statement RPARENTESIS PUNTO_COMA group_proc
    (4) comentario -> . COMENTARIO

    COMENTARIO      shift and go to state 5

    comentario                     shift and go to state 19

state 17

    (6) code_block -> group_proc proc MASTER . LPARENTESIS comentario list_statement RPARENTESIS PUNTO_COMA group_proc

    LPARENTESIS     shift and go to state 20


state 18

    (8) group_proc -> PROC VARIABLE LPARENTESIS . COMENTARIO list_statement RPARENTESIS PUNTO_COMA group_proc

    COMENTARIO      shift and go to state 21


state 19

    (5) code_block -> proc MASTER LPARENTESIS comentario . list_statement RPARENTESIS PUNTO_COMA group_proc
    (10) list_statement -> . statement list_statement
    (11) list_statement -> . comentario
    (12) list_statement -> . empty
    (13) statement -> . no_return_statement
    (14) statement -> . return_statement
    (4) comentario -> . COMENTARIO
    (83) empty -> .
    (15) no_return_statement -> . new_variable_statement
    (16) no_return_statement -> . alterb_statement
    (17) no_return_statement -> . values_statement
    (18) no_return_statement -> . repeat_statement
    (19) no_return_statement -> . until_statement
    (20) no_return_statement -> . while_statement
    (21) no_return_statement -> . case_statement
    (22) no_return_statement -> . printvalues_statement
    (23) no_return_statement -> . signal_statement
    (24) return_statement -> . return_num_statement
    (25) return_statement -> . return_bool_statement
    (30) new_variable_statement -> . NEW VARIABLE COMA LPARENTESIS DATATYPE COMA value RPARENTESIS PUNTO_COMA
    (38) alterb_statement -> . ALTERB LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA
    (31) values_statement -> . VALUES LPARENTESIS VARIABLE COMA value RPARENTESIS PUNTO_COMA
    (41) repeat_statement -> . REPEAT LPARENTESIS list_statement break_statement RPARENTESIS PUNTO_COMA
    (43) until_statement -> . UNTIL LPARENTESIS list_statement RPARENTESIS condition_statement PUNTO_COMA
    (50) while_statement -> . WHILE condition_statement LPARENTESIS list_statement RPARENTESIS PUNTO_COMA
    (51) while_statement -> . WHILE istrue LPARENTESIS list_statement RPARENTESIS PUNTO_COMA
    (54) case_statement -> . CASE VARIABLE case_when_statements else_statement PUNTO_COMA
    (60) printvalues_statement -> . PRINTVALUES LPARENTESIS list_content_print RPARENTESIS PUNTO_COMA
    (66) signal_statement -> . SIGNAL LPARENTESIS VARIABLE COMA return_num_statement RPARENTESIS PUNTO_COMA
    (67) signal_statement -> . SIGNAL LPARENTESIS VARIABLE COMA expression RPARENTESIS PUNTO_COMA
    (26) return_num_statement -> . viewsignal_statement
    (27) return_num_statement -> . alter_statement
    (28) return_bool_statement -> . condition_statement
    (29) return_bool_statement -> . istrue_statement
    (68) viewsignal_statement -> . VIEWSIGNAL LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA
    (69) viewsignal_statement -> . VIEWSIGNAL LPARENTESIS expression RPARENTESIS PUNTO_COMA
    (70) viewsignal_statement -> . VIEWSIGNAL LPARENTESIS alter_statement RPARENTESIS PUNTO_COMA
    (32) alter_statement -> . ALTER LPARENTESIS VARIABLE COMA operador COMA return_num_statement RPARENTESIS PUNTO_COMA
    (33) alter_statement -> . ALTER LPARENTESIS VARIABLE COMA operador COMA expression RPARENTESIS PUNTO_COMA
    (39) condition_statement -> . expression condition expression
    (40) istrue_statement -> . ISTRUE LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA
    (71) expression -> . NUMERO
    (72) expression -> . VARIABLE
    (73) expression -> . LPARENTESIS expression RPARENTESIS
    (74) expression -> . expression + expression
    (75) expression -> . expression - expression
    (76) expression -> . expression * expression
    (77) expression -> . expression / expression

    COMENTARIO      shift and go to state 5
    RPARENTESIS     reduce using rule 83 (empty -> .)
    NEW             shift and go to state 40
    ALTERB          shift and go to state 42
    VALUES          shift and go to state 43
    REPEAT          shift and go to state 44
    UNTIL           shift and go to state 45
    WHILE           shift and go to state 47
    CASE            shift and go to state 48
    PRINTVALUES     shift and go to state 49
    SIGNAL          shift and go to state 50
    VIEWSIGNAL      shift and go to state 55
    ALTER           shift and go to state 56
    ISTRUE          shift and go to state 57
    NUMERO          shift and go to state 58
    VARIABLE        shift and go to state 41
    LPARENTESIS     shift and go to state 22

    comentario                     shift and go to state 23
    list_statement                 shift and go to state 24
    statement                      shift and go to state 25
    empty                          shift and go to state 26
    no_return_statement            shift and go to state 27
    return_statement               shift and go to state 28
    new_variable_statement         shift and go to state 29
    alterb_statement               shift and go to state 30
    values_statement               shift and go to state 31
    repeat_statement               shift and go to state 32
    until_statement                shift and go to state 33
    while_statement                shift and go to state 34
    case_statement                 shift and go to state 35
    printvalues_statement          shift and go to state 36
    signal_statement               shift and go to state 37
    return_num_statement           shift and go to state 38
    return_bool_statement          shift and go to state 39
    condition_statement            shift and go to state 46
    expression                     shift and go to state 51
    viewsignal_statement           shift and go to state 52
    alter_statement                shift and go to state 53
    istrue_statement               shift and go to state 54

state 20

    (6) code_block -> group_proc proc MASTER LPARENTESIS . comentario list_statement RPARENTESIS PUNTO_COMA group_proc
    (4) comentario -> . COMENTARIO

    COMENTARIO      shift and go to state 5

    comentario                     shift and go to state 59

state 21

    (8) group_proc -> PROC VARIABLE LPARENTESIS COMENTARIO . list_statement RPARENTESIS PUNTO_COMA group_proc
    (10) list_statement -> . statement list_statement
    (11) list_statement -> . comentario
    (12) list_statement -> . empty
    (13) statement -> . no_return_statement
    (14) statement -> . return_statement
    (4) comentario -> . COMENTARIO
    (83) empty -> .
    (15) no_return_statement -> . new_variable_statement
    (16) no_return_statement -> . alterb_statement
    (17) no_return_statement -> . values_statement
    (18) no_return_statement -> . repeat_statement
    (19) no_return_statement -> . until_statement
    (20) no_return_statement -> . while_statement
    (21) no_return_statement -> . case_statement
    (22) no_return_statement -> . printvalues_statement
    (23) no_return_statement -> . signal_statement
    (24) return_statement -> . return_num_statement
    (25) return_statement -> . return_bool_statement
    (30) new_variable_statement -> . NEW VARIABLE COMA LPARENTESIS DATATYPE COMA value RPARENTESIS PUNTO_COMA
    (38) alterb_statement -> . ALTERB LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA
    (31) values_statement -> . VALUES LPARENTESIS VARIABLE COMA value RPARENTESIS PUNTO_COMA
    (41) repeat_statement -> . REPEAT LPARENTESIS list_statement break_statement RPARENTESIS PUNTO_COMA
    (43) until_statement -> . UNTIL LPARENTESIS list_statement RPARENTESIS condition_statement PUNTO_COMA
    (50) while_statement -> . WHILE condition_statement LPARENTESIS list_statement RPARENTESIS PUNTO_COMA
    (51) while_statement -> . WHILE istrue LPARENTESIS list_statement RPARENTESIS PUNTO_COMA
    (54) case_statement -> . CASE VARIABLE case_when_statements else_statement PUNTO_COMA
    (60) printvalues_statement -> . PRINTVALUES LPARENTESIS list_content_print RPARENTESIS PUNTO_COMA
    (66) signal_statement -> . SIGNAL LPARENTESIS VARIABLE COMA return_num_statement RPARENTESIS PUNTO_COMA
    (67) signal_statement -> . SIGNAL LPARENTESIS VARIABLE COMA expression RPARENTESIS PUNTO_COMA
    (26) return_num_statement -> . viewsignal_statement
    (27) return_num_statement -> . alter_statement
    (28) return_bool_statement -> . condition_statement
    (29) return_bool_statement -> . istrue_statement
    (68) viewsignal_statement -> . VIEWSIGNAL LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA
    (69) viewsignal_statement -> . VIEWSIGNAL LPARENTESIS expression RPARENTESIS PUNTO_COMA
    (70) viewsignal_statement -> . VIEWSIGNAL LPARENTESIS alter_statement RPARENTESIS PUNTO_COMA
    (32) alter_statement -> . ALTER LPARENTESIS VARIABLE COMA operador COMA return_num_statement RPARENTESIS PUNTO_COMA
    (33) alter_statement -> . ALTER LPARENTESIS VARIABLE COMA operador COMA expression RPARENTESIS PUNTO_COMA
    (39) condition_statement -> . expression condition expression
    (40) istrue_statement -> . ISTRUE LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA
    (71) expression -> . NUMERO
    (72) expression -> . VARIABLE
    (73) expression -> . LPARENTESIS expression RPARENTESIS
    (74) expression -> . expression + expression
    (75) expression -> . expression - expression
    (76) expression -> . expression * expression
    (77) expression -> . expression / expression

    COMENTARIO      shift and go to state 5
    RPARENTESIS     reduce using rule 83 (empty -> .)
    NEW             shift and go to state 40
    ALTERB          shift and go to state 42
    VALUES          shift and go to state 43
    REPEAT          shift and go to state 44
    UNTIL           shift and go to state 45
    WHILE           shift and go to state 47
    CASE            shift and go to state 48
    PRINTVALUES     shift and go to state 49
    SIGNAL          shift and go to state 50
    VIEWSIGNAL      shift and go to state 55
    ALTER           shift and go to state 56
    ISTRUE          shift and go to state 57
    NUMERO          shift and go to state 58
    VARIABLE        shift and go to state 41
    LPARENTESIS     shift and go to state 22

    list_statement                 shift and go to state 60
    statement                      shift and go to state 25
    comentario                     shift and go to state 23
    empty                          shift and go to state 26
    no_return_statement            shift and go to state 27
    return_statement               shift and go to state 28
    new_variable_statement         shift and go to state 29
    alterb_statement               shift and go to state 30
    values_statement               shift and go to state 31
    repeat_statement               shift and go to state 32
    until_statement                shift and go to state 33
    while_statement                shift and go to state 34
    case_statement                 shift and go to state 35
    printvalues_statement          shift and go to state 36
    signal_statement               shift and go to state 37
    return_num_statement           shift and go to state 38
    return_bool_statement          shift and go to state 39
    condition_statement            shift and go to state 46
    expression                     shift and go to state 51
    viewsignal_statement           shift and go to state 52
    alter_statement                shift and go to state 53
    istrue_statement               shift and go to state 54

state 22

    (73) expression -> LPARENTESIS . expression RPARENTESIS
    (71) expression -> . NUMERO
    (72) expression -> . VARIABLE
    (73) expression -> . LPARENTESIS expression RPARENTESIS
    (74) expression -> . expression + expression
    (75) expression -> . expression - expression
    (76) expression -> . expression * expression
    (77) expression -> . expression / expression

    NUMERO          shift and go to state 58
    VARIABLE        shift and go to state 41
    LPARENTESIS     shift and go to state 22

    expression                     shift and go to state 61

state 23

    (11) list_statement -> comentario .

    RPARENTESIS     reduce using rule 11 (list_statement -> comentario .)
    BREAK           reduce using rule 11 (list_statement -> comentario .)
    PUNTO_COMA      reduce using rule 11 (list_statement -> comentario .)
    WHEN            reduce using rule 11 (list_statement -> comentario .)
    COMENTARIO      reduce using rule 11 (list_statement -> comentario .)
    NEW             reduce using rule 11 (list_statement -> comentario .)
    ALTERB          reduce using rule 11 (list_statement -> comentario .)
    VALUES          reduce using rule 11 (list_statement -> comentario .)
    REPEAT          reduce using rule 11 (list_statement -> comentario .)
    UNTIL           reduce using rule 11 (list_statement -> comentario .)
    WHILE           reduce using rule 11 (list_statement -> comentario .)
    CASE            reduce using rule 11 (list_statement -> comentario .)
    PRINTVALUES     reduce using rule 11 (list_statement -> comentario .)
    SIGNAL          reduce using rule 11 (list_statement -> comentario .)
    VIEWSIGNAL      reduce using rule 11 (list_statement -> comentario .)
    ALTER           reduce using rule 11 (list_statement -> comentario .)
    ISTRUE          reduce using rule 11 (list_statement -> comentario .)
    NUMERO          reduce using rule 11 (list_statement -> comentario .)
    VARIABLE        reduce using rule 11 (list_statement -> comentario .)
    LPARENTESIS     reduce using rule 11 (list_statement -> comentario .)


state 24

    (5) code_block -> proc MASTER LPARENTESIS comentario list_statement . RPARENTESIS PUNTO_COMA group_proc

    RPARENTESIS     shift and go to state 62


state 25

    (10) list_statement -> statement . list_statement
    (10) list_statement -> . statement list_statement
    (11) list_statement -> . comentario
    (12) list_statement -> . empty
    (13) statement -> . no_return_statement
    (14) statement -> . return_statement
    (4) comentario -> . COMENTARIO
    (83) empty -> .
    (15) no_return_statement -> . new_variable_statement
    (16) no_return_statement -> . alterb_statement
    (17) no_return_statement -> . values_statement
    (18) no_return_statement -> . repeat_statement
    (19) no_return_statement -> . until_statement
    (20) no_return_statement -> . while_statement
    (21) no_return_statement -> . case_statement
    (22) no_return_statement -> . printvalues_statement
    (23) no_return_statement -> . signal_statement
    (24) return_statement -> . return_num_statement
    (25) return_statement -> . return_bool_statement
    (30) new_variable_statement -> . NEW VARIABLE COMA LPARENTESIS DATATYPE COMA value RPARENTESIS PUNTO_COMA
    (38) alterb_statement -> . ALTERB LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA
    (31) values_statement -> . VALUES LPARENTESIS VARIABLE COMA value RPARENTESIS PUNTO_COMA
    (41) repeat_statement -> . REPEAT LPARENTESIS list_statement break_statement RPARENTESIS PUNTO_COMA
    (43) until_statement -> . UNTIL LPARENTESIS list_statement RPARENTESIS condition_statement PUNTO_COMA
    (50) while_statement -> . WHILE condition_statement LPARENTESIS list_statement RPARENTESIS PUNTO_COMA
    (51) while_statement -> . WHILE istrue LPARENTESIS list_statement RPARENTESIS PUNTO_COMA
    (54) case_statement -> . CASE VARIABLE case_when_statements else_statement PUNTO_COMA
    (60) printvalues_statement -> . PRINTVALUES LPARENTESIS list_content_print RPARENTESIS PUNTO_COMA
    (66) signal_statement -> . SIGNAL LPARENTESIS VARIABLE COMA return_num_statement RPARENTESIS PUNTO_COMA
    (67) signal_statement -> . SIGNAL LPARENTESIS VARIABLE COMA expression RPARENTESIS PUNTO_COMA
    (26) return_num_statement -> . viewsignal_statement
    (27) return_num_statement -> . alter_statement
    (28) return_bool_statement -> . condition_statement
    (29) return_bool_statement -> . istrue_statement
    (68) viewsignal_statement -> . VIEWSIGNAL LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA
    (69) viewsignal_statement -> . VIEWSIGNAL LPARENTESIS expression RPARENTESIS PUNTO_COMA
    (70) viewsignal_statement -> . VIEWSIGNAL LPARENTESIS alter_statement RPARENTESIS PUNTO_COMA
    (32) alter_statement -> . ALTER LPARENTESIS VARIABLE COMA operador COMA return_num_statement RPARENTESIS PUNTO_COMA
    (33) alter_statement -> . ALTER LPARENTESIS VARIABLE COMA operador COMA expression RPARENTESIS PUNTO_COMA
    (39) condition_statement -> . expression condition expression
    (40) istrue_statement -> . ISTRUE LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA
    (71) expression -> . NUMERO
    (72) expression -> . VARIABLE
    (73) expression -> . LPARENTESIS expression RPARENTESIS
    (74) expression -> . expression + expression
    (75) expression -> . expression - expression
    (76) expression -> . expression * expression
    (77) expression -> . expression / expression

  ! shift/reduce conflict for COMENTARIO resolved as shift
  ! shift/reduce conflict for NEW resolved as shift
  ! shift/reduce conflict for ALTERB resolved as shift
  ! shift/reduce conflict for VALUES resolved as shift
  ! shift/reduce conflict for REPEAT resolved as shift
  ! shift/reduce conflict for UNTIL resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for PRINTVALUES resolved as shift
  ! shift/reduce conflict for SIGNAL resolved as shift
  ! shift/reduce conflict for VIEWSIGNAL resolved as shift
  ! shift/reduce conflict for ALTER resolved as shift
  ! shift/reduce conflict for ISTRUE resolved as shift
  ! shift/reduce conflict for NUMERO resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for LPARENTESIS resolved as shift
    COMENTARIO      shift and go to state 5
    RPARENTESIS     reduce using rule 83 (empty -> .)
    BREAK           reduce using rule 83 (empty -> .)
    PUNTO_COMA      reduce using rule 83 (empty -> .)
    WHEN            reduce using rule 83 (empty -> .)
    NEW             shift and go to state 40
    ALTERB          shift and go to state 42
    VALUES          shift and go to state 43
    REPEAT          shift and go to state 44
    UNTIL           shift and go to state 45
    WHILE           shift and go to state 47
    CASE            shift and go to state 48
    PRINTVALUES     shift and go to state 49
    SIGNAL          shift and go to state 50
    VIEWSIGNAL      shift and go to state 55
    ALTER           shift and go to state 56
    ISTRUE          shift and go to state 57
    NUMERO          shift and go to state 58
    VARIABLE        shift and go to state 41
    LPARENTESIS     shift and go to state 22

  ! COMENTARIO      [ reduce using rule 83 (empty -> .) ]
  ! NEW             [ reduce using rule 83 (empty -> .) ]
  ! ALTERB          [ reduce using rule 83 (empty -> .) ]
  ! VALUES          [ reduce using rule 83 (empty -> .) ]
  ! REPEAT          [ reduce using rule 83 (empty -> .) ]
  ! UNTIL           [ reduce using rule 83 (empty -> .) ]
  ! WHILE           [ reduce using rule 83 (empty -> .) ]
  ! CASE            [ reduce using rule 83 (empty -> .) ]
  ! PRINTVALUES     [ reduce using rule 83 (empty -> .) ]
  ! SIGNAL          [ reduce using rule 83 (empty -> .) ]
  ! VIEWSIGNAL      [ reduce using rule 83 (empty -> .) ]
  ! ALTER           [ reduce using rule 83 (empty -> .) ]
  ! ISTRUE          [ reduce using rule 83 (empty -> .) ]
  ! NUMERO          [ reduce using rule 83 (empty -> .) ]
  ! VARIABLE        [ reduce using rule 83 (empty -> .) ]
  ! LPARENTESIS     [ reduce using rule 83 (empty -> .) ]

    statement                      shift and go to state 25
    list_statement                 shift and go to state 63
    comentario                     shift and go to state 23
    empty                          shift and go to state 26
    no_return_statement            shift and go to state 27
    return_statement               shift and go to state 28
    new_variable_statement         shift and go to state 29
    alterb_statement               shift and go to state 30
    values_statement               shift and go to state 31
    repeat_statement               shift and go to state 32
    until_statement                shift and go to state 33
    while_statement                shift and go to state 34
    case_statement                 shift and go to state 35
    printvalues_statement          shift and go to state 36
    signal_statement               shift and go to state 37
    return_num_statement           shift and go to state 38
    return_bool_statement          shift and go to state 39
    condition_statement            shift and go to state 46
    expression                     shift and go to state 51
    viewsignal_statement           shift and go to state 52
    alter_statement                shift and go to state 53
    istrue_statement               shift and go to state 54

state 26

    (12) list_statement -> empty .

    RPARENTESIS     reduce using rule 12 (list_statement -> empty .)
    BREAK           reduce using rule 12 (list_statement -> empty .)
    PUNTO_COMA      reduce using rule 12 (list_statement -> empty .)
    WHEN            reduce using rule 12 (list_statement -> empty .)
    COMENTARIO      reduce using rule 12 (list_statement -> empty .)
    NEW             reduce using rule 12 (list_statement -> empty .)
    ALTERB          reduce using rule 12 (list_statement -> empty .)
    VALUES          reduce using rule 12 (list_statement -> empty .)
    REPEAT          reduce using rule 12 (list_statement -> empty .)
    UNTIL           reduce using rule 12 (list_statement -> empty .)
    WHILE           reduce using rule 12 (list_statement -> empty .)
    CASE            reduce using rule 12 (list_statement -> empty .)
    PRINTVALUES     reduce using rule 12 (list_statement -> empty .)
    SIGNAL          reduce using rule 12 (list_statement -> empty .)
    VIEWSIGNAL      reduce using rule 12 (list_statement -> empty .)
    ALTER           reduce using rule 12 (list_statement -> empty .)
    ISTRUE          reduce using rule 12 (list_statement -> empty .)
    NUMERO          reduce using rule 12 (list_statement -> empty .)
    VARIABLE        reduce using rule 12 (list_statement -> empty .)
    LPARENTESIS     reduce using rule 12 (list_statement -> empty .)


state 27

    (13) statement -> no_return_statement .

    COMENTARIO      reduce using rule 13 (statement -> no_return_statement .)
    NEW             reduce using rule 13 (statement -> no_return_statement .)
    ALTERB          reduce using rule 13 (statement -> no_return_statement .)
    VALUES          reduce using rule 13 (statement -> no_return_statement .)
    REPEAT          reduce using rule 13 (statement -> no_return_statement .)
    UNTIL           reduce using rule 13 (statement -> no_return_statement .)
    WHILE           reduce using rule 13 (statement -> no_return_statement .)
    CASE            reduce using rule 13 (statement -> no_return_statement .)
    PRINTVALUES     reduce using rule 13 (statement -> no_return_statement .)
    SIGNAL          reduce using rule 13 (statement -> no_return_statement .)
    VIEWSIGNAL      reduce using rule 13 (statement -> no_return_statement .)
    ALTER           reduce using rule 13 (statement -> no_return_statement .)
    ISTRUE          reduce using rule 13 (statement -> no_return_statement .)
    NUMERO          reduce using rule 13 (statement -> no_return_statement .)
    VARIABLE        reduce using rule 13 (statement -> no_return_statement .)
    LPARENTESIS     reduce using rule 13 (statement -> no_return_statement .)
    RPARENTESIS     reduce using rule 13 (statement -> no_return_statement .)
    BREAK           reduce using rule 13 (statement -> no_return_statement .)
    PUNTO_COMA      reduce using rule 13 (statement -> no_return_statement .)
    WHEN            reduce using rule 13 (statement -> no_return_statement .)


state 28

    (14) statement -> return_statement .

    COMENTARIO      reduce using rule 14 (statement -> return_statement .)
    NEW             reduce using rule 14 (statement -> return_statement .)
    ALTERB          reduce using rule 14 (statement -> return_statement .)
    VALUES          reduce using rule 14 (statement -> return_statement .)
    REPEAT          reduce using rule 14 (statement -> return_statement .)
    UNTIL           reduce using rule 14 (statement -> return_statement .)
    WHILE           reduce using rule 14 (statement -> return_statement .)
    CASE            reduce using rule 14 (statement -> return_statement .)
    PRINTVALUES     reduce using rule 14 (statement -> return_statement .)
    SIGNAL          reduce using rule 14 (statement -> return_statement .)
    VIEWSIGNAL      reduce using rule 14 (statement -> return_statement .)
    ALTER           reduce using rule 14 (statement -> return_statement .)
    ISTRUE          reduce using rule 14 (statement -> return_statement .)
    NUMERO          reduce using rule 14 (statement -> return_statement .)
    VARIABLE        reduce using rule 14 (statement -> return_statement .)
    LPARENTESIS     reduce using rule 14 (statement -> return_statement .)
    RPARENTESIS     reduce using rule 14 (statement -> return_statement .)
    BREAK           reduce using rule 14 (statement -> return_statement .)
    PUNTO_COMA      reduce using rule 14 (statement -> return_statement .)
    WHEN            reduce using rule 14 (statement -> return_statement .)


state 29

    (15) no_return_statement -> new_variable_statement .

    COMENTARIO      reduce using rule 15 (no_return_statement -> new_variable_statement .)
    NEW             reduce using rule 15 (no_return_statement -> new_variable_statement .)
    ALTERB          reduce using rule 15 (no_return_statement -> new_variable_statement .)
    VALUES          reduce using rule 15 (no_return_statement -> new_variable_statement .)
    REPEAT          reduce using rule 15 (no_return_statement -> new_variable_statement .)
    UNTIL           reduce using rule 15 (no_return_statement -> new_variable_statement .)
    WHILE           reduce using rule 15 (no_return_statement -> new_variable_statement .)
    CASE            reduce using rule 15 (no_return_statement -> new_variable_statement .)
    PRINTVALUES     reduce using rule 15 (no_return_statement -> new_variable_statement .)
    SIGNAL          reduce using rule 15 (no_return_statement -> new_variable_statement .)
    VIEWSIGNAL      reduce using rule 15 (no_return_statement -> new_variable_statement .)
    ALTER           reduce using rule 15 (no_return_statement -> new_variable_statement .)
    ISTRUE          reduce using rule 15 (no_return_statement -> new_variable_statement .)
    NUMERO          reduce using rule 15 (no_return_statement -> new_variable_statement .)
    VARIABLE        reduce using rule 15 (no_return_statement -> new_variable_statement .)
    LPARENTESIS     reduce using rule 15 (no_return_statement -> new_variable_statement .)
    RPARENTESIS     reduce using rule 15 (no_return_statement -> new_variable_statement .)
    BREAK           reduce using rule 15 (no_return_statement -> new_variable_statement .)
    PUNTO_COMA      reduce using rule 15 (no_return_statement -> new_variable_statement .)
    WHEN            reduce using rule 15 (no_return_statement -> new_variable_statement .)


state 30

    (16) no_return_statement -> alterb_statement .

    COMENTARIO      reduce using rule 16 (no_return_statement -> alterb_statement .)
    NEW             reduce using rule 16 (no_return_statement -> alterb_statement .)
    ALTERB          reduce using rule 16 (no_return_statement -> alterb_statement .)
    VALUES          reduce using rule 16 (no_return_statement -> alterb_statement .)
    REPEAT          reduce using rule 16 (no_return_statement -> alterb_statement .)
    UNTIL           reduce using rule 16 (no_return_statement -> alterb_statement .)
    WHILE           reduce using rule 16 (no_return_statement -> alterb_statement .)
    CASE            reduce using rule 16 (no_return_statement -> alterb_statement .)
    PRINTVALUES     reduce using rule 16 (no_return_statement -> alterb_statement .)
    SIGNAL          reduce using rule 16 (no_return_statement -> alterb_statement .)
    VIEWSIGNAL      reduce using rule 16 (no_return_statement -> alterb_statement .)
    ALTER           reduce using rule 16 (no_return_statement -> alterb_statement .)
    ISTRUE          reduce using rule 16 (no_return_statement -> alterb_statement .)
    NUMERO          reduce using rule 16 (no_return_statement -> alterb_statement .)
    VARIABLE        reduce using rule 16 (no_return_statement -> alterb_statement .)
    LPARENTESIS     reduce using rule 16 (no_return_statement -> alterb_statement .)
    RPARENTESIS     reduce using rule 16 (no_return_statement -> alterb_statement .)
    BREAK           reduce using rule 16 (no_return_statement -> alterb_statement .)
    PUNTO_COMA      reduce using rule 16 (no_return_statement -> alterb_statement .)
    WHEN            reduce using rule 16 (no_return_statement -> alterb_statement .)


state 31

    (17) no_return_statement -> values_statement .

    COMENTARIO      reduce using rule 17 (no_return_statement -> values_statement .)
    NEW             reduce using rule 17 (no_return_statement -> values_statement .)
    ALTERB          reduce using rule 17 (no_return_statement -> values_statement .)
    VALUES          reduce using rule 17 (no_return_statement -> values_statement .)
    REPEAT          reduce using rule 17 (no_return_statement -> values_statement .)
    UNTIL           reduce using rule 17 (no_return_statement -> values_statement .)
    WHILE           reduce using rule 17 (no_return_statement -> values_statement .)
    CASE            reduce using rule 17 (no_return_statement -> values_statement .)
    PRINTVALUES     reduce using rule 17 (no_return_statement -> values_statement .)
    SIGNAL          reduce using rule 17 (no_return_statement -> values_statement .)
    VIEWSIGNAL      reduce using rule 17 (no_return_statement -> values_statement .)
    ALTER           reduce using rule 17 (no_return_statement -> values_statement .)
    ISTRUE          reduce using rule 17 (no_return_statement -> values_statement .)
    NUMERO          reduce using rule 17 (no_return_statement -> values_statement .)
    VARIABLE        reduce using rule 17 (no_return_statement -> values_statement .)
    LPARENTESIS     reduce using rule 17 (no_return_statement -> values_statement .)
    RPARENTESIS     reduce using rule 17 (no_return_statement -> values_statement .)
    BREAK           reduce using rule 17 (no_return_statement -> values_statement .)
    PUNTO_COMA      reduce using rule 17 (no_return_statement -> values_statement .)
    WHEN            reduce using rule 17 (no_return_statement -> values_statement .)


state 32

    (18) no_return_statement -> repeat_statement .

    COMENTARIO      reduce using rule 18 (no_return_statement -> repeat_statement .)
    NEW             reduce using rule 18 (no_return_statement -> repeat_statement .)
    ALTERB          reduce using rule 18 (no_return_statement -> repeat_statement .)
    VALUES          reduce using rule 18 (no_return_statement -> repeat_statement .)
    REPEAT          reduce using rule 18 (no_return_statement -> repeat_statement .)
    UNTIL           reduce using rule 18 (no_return_statement -> repeat_statement .)
    WHILE           reduce using rule 18 (no_return_statement -> repeat_statement .)
    CASE            reduce using rule 18 (no_return_statement -> repeat_statement .)
    PRINTVALUES     reduce using rule 18 (no_return_statement -> repeat_statement .)
    SIGNAL          reduce using rule 18 (no_return_statement -> repeat_statement .)
    VIEWSIGNAL      reduce using rule 18 (no_return_statement -> repeat_statement .)
    ALTER           reduce using rule 18 (no_return_statement -> repeat_statement .)
    ISTRUE          reduce using rule 18 (no_return_statement -> repeat_statement .)
    NUMERO          reduce using rule 18 (no_return_statement -> repeat_statement .)
    VARIABLE        reduce using rule 18 (no_return_statement -> repeat_statement .)
    LPARENTESIS     reduce using rule 18 (no_return_statement -> repeat_statement .)
    RPARENTESIS     reduce using rule 18 (no_return_statement -> repeat_statement .)
    BREAK           reduce using rule 18 (no_return_statement -> repeat_statement .)
    PUNTO_COMA      reduce using rule 18 (no_return_statement -> repeat_statement .)
    WHEN            reduce using rule 18 (no_return_statement -> repeat_statement .)


state 33

    (19) no_return_statement -> until_statement .

    COMENTARIO      reduce using rule 19 (no_return_statement -> until_statement .)
    NEW             reduce using rule 19 (no_return_statement -> until_statement .)
    ALTERB          reduce using rule 19 (no_return_statement -> until_statement .)
    VALUES          reduce using rule 19 (no_return_statement -> until_statement .)
    REPEAT          reduce using rule 19 (no_return_statement -> until_statement .)
    UNTIL           reduce using rule 19 (no_return_statement -> until_statement .)
    WHILE           reduce using rule 19 (no_return_statement -> until_statement .)
    CASE            reduce using rule 19 (no_return_statement -> until_statement .)
    PRINTVALUES     reduce using rule 19 (no_return_statement -> until_statement .)
    SIGNAL          reduce using rule 19 (no_return_statement -> until_statement .)
    VIEWSIGNAL      reduce using rule 19 (no_return_statement -> until_statement .)
    ALTER           reduce using rule 19 (no_return_statement -> until_statement .)
    ISTRUE          reduce using rule 19 (no_return_statement -> until_statement .)
    NUMERO          reduce using rule 19 (no_return_statement -> until_statement .)
    VARIABLE        reduce using rule 19 (no_return_statement -> until_statement .)
    LPARENTESIS     reduce using rule 19 (no_return_statement -> until_statement .)
    RPARENTESIS     reduce using rule 19 (no_return_statement -> until_statement .)
    BREAK           reduce using rule 19 (no_return_statement -> until_statement .)
    PUNTO_COMA      reduce using rule 19 (no_return_statement -> until_statement .)
    WHEN            reduce using rule 19 (no_return_statement -> until_statement .)


state 34

    (20) no_return_statement -> while_statement .

    COMENTARIO      reduce using rule 20 (no_return_statement -> while_statement .)
    NEW             reduce using rule 20 (no_return_statement -> while_statement .)
    ALTERB          reduce using rule 20 (no_return_statement -> while_statement .)
    VALUES          reduce using rule 20 (no_return_statement -> while_statement .)
    REPEAT          reduce using rule 20 (no_return_statement -> while_statement .)
    UNTIL           reduce using rule 20 (no_return_statement -> while_statement .)
    WHILE           reduce using rule 20 (no_return_statement -> while_statement .)
    CASE            reduce using rule 20 (no_return_statement -> while_statement .)
    PRINTVALUES     reduce using rule 20 (no_return_statement -> while_statement .)
    SIGNAL          reduce using rule 20 (no_return_statement -> while_statement .)
    VIEWSIGNAL      reduce using rule 20 (no_return_statement -> while_statement .)
    ALTER           reduce using rule 20 (no_return_statement -> while_statement .)
    ISTRUE          reduce using rule 20 (no_return_statement -> while_statement .)
    NUMERO          reduce using rule 20 (no_return_statement -> while_statement .)
    VARIABLE        reduce using rule 20 (no_return_statement -> while_statement .)
    LPARENTESIS     reduce using rule 20 (no_return_statement -> while_statement .)
    RPARENTESIS     reduce using rule 20 (no_return_statement -> while_statement .)
    BREAK           reduce using rule 20 (no_return_statement -> while_statement .)
    PUNTO_COMA      reduce using rule 20 (no_return_statement -> while_statement .)
    WHEN            reduce using rule 20 (no_return_statement -> while_statement .)


state 35

    (21) no_return_statement -> case_statement .

    COMENTARIO      reduce using rule 21 (no_return_statement -> case_statement .)
    NEW             reduce using rule 21 (no_return_statement -> case_statement .)
    ALTERB          reduce using rule 21 (no_return_statement -> case_statement .)
    VALUES          reduce using rule 21 (no_return_statement -> case_statement .)
    REPEAT          reduce using rule 21 (no_return_statement -> case_statement .)
    UNTIL           reduce using rule 21 (no_return_statement -> case_statement .)
    WHILE           reduce using rule 21 (no_return_statement -> case_statement .)
    CASE            reduce using rule 21 (no_return_statement -> case_statement .)
    PRINTVALUES     reduce using rule 21 (no_return_statement -> case_statement .)
    SIGNAL          reduce using rule 21 (no_return_statement -> case_statement .)
    VIEWSIGNAL      reduce using rule 21 (no_return_statement -> case_statement .)
    ALTER           reduce using rule 21 (no_return_statement -> case_statement .)
    ISTRUE          reduce using rule 21 (no_return_statement -> case_statement .)
    NUMERO          reduce using rule 21 (no_return_statement -> case_statement .)
    VARIABLE        reduce using rule 21 (no_return_statement -> case_statement .)
    LPARENTESIS     reduce using rule 21 (no_return_statement -> case_statement .)
    RPARENTESIS     reduce using rule 21 (no_return_statement -> case_statement .)
    BREAK           reduce using rule 21 (no_return_statement -> case_statement .)
    PUNTO_COMA      reduce using rule 21 (no_return_statement -> case_statement .)
    WHEN            reduce using rule 21 (no_return_statement -> case_statement .)


state 36

    (22) no_return_statement -> printvalues_statement .

    COMENTARIO      reduce using rule 22 (no_return_statement -> printvalues_statement .)
    NEW             reduce using rule 22 (no_return_statement -> printvalues_statement .)
    ALTERB          reduce using rule 22 (no_return_statement -> printvalues_statement .)
    VALUES          reduce using rule 22 (no_return_statement -> printvalues_statement .)
    REPEAT          reduce using rule 22 (no_return_statement -> printvalues_statement .)
    UNTIL           reduce using rule 22 (no_return_statement -> printvalues_statement .)
    WHILE           reduce using rule 22 (no_return_statement -> printvalues_statement .)
    CASE            reduce using rule 22 (no_return_statement -> printvalues_statement .)
    PRINTVALUES     reduce using rule 22 (no_return_statement -> printvalues_statement .)
    SIGNAL          reduce using rule 22 (no_return_statement -> printvalues_statement .)
    VIEWSIGNAL      reduce using rule 22 (no_return_statement -> printvalues_statement .)
    ALTER           reduce using rule 22 (no_return_statement -> printvalues_statement .)
    ISTRUE          reduce using rule 22 (no_return_statement -> printvalues_statement .)
    NUMERO          reduce using rule 22 (no_return_statement -> printvalues_statement .)
    VARIABLE        reduce using rule 22 (no_return_statement -> printvalues_statement .)
    LPARENTESIS     reduce using rule 22 (no_return_statement -> printvalues_statement .)
    RPARENTESIS     reduce using rule 22 (no_return_statement -> printvalues_statement .)
    BREAK           reduce using rule 22 (no_return_statement -> printvalues_statement .)
    PUNTO_COMA      reduce using rule 22 (no_return_statement -> printvalues_statement .)
    WHEN            reduce using rule 22 (no_return_statement -> printvalues_statement .)


state 37

    (23) no_return_statement -> signal_statement .

    COMENTARIO      reduce using rule 23 (no_return_statement -> signal_statement .)
    NEW             reduce using rule 23 (no_return_statement -> signal_statement .)
    ALTERB          reduce using rule 23 (no_return_statement -> signal_statement .)
    VALUES          reduce using rule 23 (no_return_statement -> signal_statement .)
    REPEAT          reduce using rule 23 (no_return_statement -> signal_statement .)
    UNTIL           reduce using rule 23 (no_return_statement -> signal_statement .)
    WHILE           reduce using rule 23 (no_return_statement -> signal_statement .)
    CASE            reduce using rule 23 (no_return_statement -> signal_statement .)
    PRINTVALUES     reduce using rule 23 (no_return_statement -> signal_statement .)
    SIGNAL          reduce using rule 23 (no_return_statement -> signal_statement .)
    VIEWSIGNAL      reduce using rule 23 (no_return_statement -> signal_statement .)
    ALTER           reduce using rule 23 (no_return_statement -> signal_statement .)
    ISTRUE          reduce using rule 23 (no_return_statement -> signal_statement .)
    NUMERO          reduce using rule 23 (no_return_statement -> signal_statement .)
    VARIABLE        reduce using rule 23 (no_return_statement -> signal_statement .)
    LPARENTESIS     reduce using rule 23 (no_return_statement -> signal_statement .)
    RPARENTESIS     reduce using rule 23 (no_return_statement -> signal_statement .)
    BREAK           reduce using rule 23 (no_return_statement -> signal_statement .)
    PUNTO_COMA      reduce using rule 23 (no_return_statement -> signal_statement .)
    WHEN            reduce using rule 23 (no_return_statement -> signal_statement .)


state 38

    (24) return_statement -> return_num_statement .

    COMENTARIO      reduce using rule 24 (return_statement -> return_num_statement .)
    NEW             reduce using rule 24 (return_statement -> return_num_statement .)
    ALTERB          reduce using rule 24 (return_statement -> return_num_statement .)
    VALUES          reduce using rule 24 (return_statement -> return_num_statement .)
    REPEAT          reduce using rule 24 (return_statement -> return_num_statement .)
    UNTIL           reduce using rule 24 (return_statement -> return_num_statement .)
    WHILE           reduce using rule 24 (return_statement -> return_num_statement .)
    CASE            reduce using rule 24 (return_statement -> return_num_statement .)
    PRINTVALUES     reduce using rule 24 (return_statement -> return_num_statement .)
    SIGNAL          reduce using rule 24 (return_statement -> return_num_statement .)
    VIEWSIGNAL      reduce using rule 24 (return_statement -> return_num_statement .)
    ALTER           reduce using rule 24 (return_statement -> return_num_statement .)
    ISTRUE          reduce using rule 24 (return_statement -> return_num_statement .)
    NUMERO          reduce using rule 24 (return_statement -> return_num_statement .)
    VARIABLE        reduce using rule 24 (return_statement -> return_num_statement .)
    LPARENTESIS     reduce using rule 24 (return_statement -> return_num_statement .)
    RPARENTESIS     reduce using rule 24 (return_statement -> return_num_statement .)
    BREAK           reduce using rule 24 (return_statement -> return_num_statement .)
    PUNTO_COMA      reduce using rule 24 (return_statement -> return_num_statement .)
    WHEN            reduce using rule 24 (return_statement -> return_num_statement .)


state 39

    (25) return_statement -> return_bool_statement .

    COMENTARIO      reduce using rule 25 (return_statement -> return_bool_statement .)
    NEW             reduce using rule 25 (return_statement -> return_bool_statement .)
    ALTERB          reduce using rule 25 (return_statement -> return_bool_statement .)
    VALUES          reduce using rule 25 (return_statement -> return_bool_statement .)
    REPEAT          reduce using rule 25 (return_statement -> return_bool_statement .)
    UNTIL           reduce using rule 25 (return_statement -> return_bool_statement .)
    WHILE           reduce using rule 25 (return_statement -> return_bool_statement .)
    CASE            reduce using rule 25 (return_statement -> return_bool_statement .)
    PRINTVALUES     reduce using rule 25 (return_statement -> return_bool_statement .)
    SIGNAL          reduce using rule 25 (return_statement -> return_bool_statement .)
    VIEWSIGNAL      reduce using rule 25 (return_statement -> return_bool_statement .)
    ALTER           reduce using rule 25 (return_statement -> return_bool_statement .)
    ISTRUE          reduce using rule 25 (return_statement -> return_bool_statement .)
    NUMERO          reduce using rule 25 (return_statement -> return_bool_statement .)
    VARIABLE        reduce using rule 25 (return_statement -> return_bool_statement .)
    LPARENTESIS     reduce using rule 25 (return_statement -> return_bool_statement .)
    RPARENTESIS     reduce using rule 25 (return_statement -> return_bool_statement .)
    BREAK           reduce using rule 25 (return_statement -> return_bool_statement .)
    PUNTO_COMA      reduce using rule 25 (return_statement -> return_bool_statement .)
    WHEN            reduce using rule 25 (return_statement -> return_bool_statement .)


state 40

    (30) new_variable_statement -> NEW . VARIABLE COMA LPARENTESIS DATATYPE COMA value RPARENTESIS PUNTO_COMA

    VARIABLE        shift and go to state 64


state 41

    (72) expression -> VARIABLE .

    +               reduce using rule 72 (expression -> VARIABLE .)
    -               reduce using rule 72 (expression -> VARIABLE .)
    *               reduce using rule 72 (expression -> VARIABLE .)
    /               reduce using rule 72 (expression -> VARIABLE .)
    MAYOR_QUE       reduce using rule 72 (expression -> VARIABLE .)
    MENOR_QUE       reduce using rule 72 (expression -> VARIABLE .)
    IGUAL           reduce using rule 72 (expression -> VARIABLE .)
    DISTINTO_QUE    reduce using rule 72 (expression -> VARIABLE .)
    MAYOR_IGUAL_QUE reduce using rule 72 (expression -> VARIABLE .)
    MENOR_IGUAL_QUE reduce using rule 72 (expression -> VARIABLE .)
    RPARENTESIS     reduce using rule 72 (expression -> VARIABLE .)
    COMENTARIO      reduce using rule 72 (expression -> VARIABLE .)
    NEW             reduce using rule 72 (expression -> VARIABLE .)
    ALTERB          reduce using rule 72 (expression -> VARIABLE .)
    VALUES          reduce using rule 72 (expression -> VARIABLE .)
    REPEAT          reduce using rule 72 (expression -> VARIABLE .)
    UNTIL           reduce using rule 72 (expression -> VARIABLE .)
    WHILE           reduce using rule 72 (expression -> VARIABLE .)
    CASE            reduce using rule 72 (expression -> VARIABLE .)
    PRINTVALUES     reduce using rule 72 (expression -> VARIABLE .)
    SIGNAL          reduce using rule 72 (expression -> VARIABLE .)
    VIEWSIGNAL      reduce using rule 72 (expression -> VARIABLE .)
    ALTER           reduce using rule 72 (expression -> VARIABLE .)
    ISTRUE          reduce using rule 72 (expression -> VARIABLE .)
    NUMERO          reduce using rule 72 (expression -> VARIABLE .)
    VARIABLE        reduce using rule 72 (expression -> VARIABLE .)
    LPARENTESIS     reduce using rule 72 (expression -> VARIABLE .)
    BREAK           reduce using rule 72 (expression -> VARIABLE .)
    PUNTO_COMA      reduce using rule 72 (expression -> VARIABLE .)
    WHEN            reduce using rule 72 (expression -> VARIABLE .)
    COMA            reduce using rule 72 (expression -> VARIABLE .)
    THEN            reduce using rule 72 (expression -> VARIABLE .)


state 42

    (38) alterb_statement -> ALTERB . LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA

    LPARENTESIS     shift and go to state 65


state 43

    (31) values_statement -> VALUES . LPARENTESIS VARIABLE COMA value RPARENTESIS PUNTO_COMA

    LPARENTESIS     shift and go to state 66


state 44

    (41) repeat_statement -> REPEAT . LPARENTESIS list_statement break_statement RPARENTESIS PUNTO_COMA

    LPARENTESIS     shift and go to state 67


state 45

    (43) until_statement -> UNTIL . LPARENTESIS list_statement RPARENTESIS condition_statement PUNTO_COMA

    LPARENTESIS     shift and go to state 68


state 46

    (28) return_bool_statement -> condition_statement .

    COMENTARIO      reduce using rule 28 (return_bool_statement -> condition_statement .)
    NEW             reduce using rule 28 (return_bool_statement -> condition_statement .)
    ALTERB          reduce using rule 28 (return_bool_statement -> condition_statement .)
    VALUES          reduce using rule 28 (return_bool_statement -> condition_statement .)
    REPEAT          reduce using rule 28 (return_bool_statement -> condition_statement .)
    UNTIL           reduce using rule 28 (return_bool_statement -> condition_statement .)
    WHILE           reduce using rule 28 (return_bool_statement -> condition_statement .)
    CASE            reduce using rule 28 (return_bool_statement -> condition_statement .)
    PRINTVALUES     reduce using rule 28 (return_bool_statement -> condition_statement .)
    SIGNAL          reduce using rule 28 (return_bool_statement -> condition_statement .)
    VIEWSIGNAL      reduce using rule 28 (return_bool_statement -> condition_statement .)
    ALTER           reduce using rule 28 (return_bool_statement -> condition_statement .)
    ISTRUE          reduce using rule 28 (return_bool_statement -> condition_statement .)
    NUMERO          reduce using rule 28 (return_bool_statement -> condition_statement .)
    VARIABLE        reduce using rule 28 (return_bool_statement -> condition_statement .)
    LPARENTESIS     reduce using rule 28 (return_bool_statement -> condition_statement .)
    RPARENTESIS     reduce using rule 28 (return_bool_statement -> condition_statement .)
    BREAK           reduce using rule 28 (return_bool_statement -> condition_statement .)
    PUNTO_COMA      reduce using rule 28 (return_bool_statement -> condition_statement .)
    WHEN            reduce using rule 28 (return_bool_statement -> condition_statement .)
    COMA            reduce using rule 28 (return_bool_statement -> condition_statement .)
    THEN            reduce using rule 28 (return_bool_statement -> condition_statement .)


state 47

    (50) while_statement -> WHILE . condition_statement LPARENTESIS list_statement RPARENTESIS PUNTO_COMA
    (51) while_statement -> WHILE . istrue LPARENTESIS list_statement RPARENTESIS PUNTO_COMA
    (39) condition_statement -> . expression condition expression
    (78) istrue -> . ISTRUE LPARENTESIS VARIABLE RPARENTESIS
    (71) expression -> . NUMERO
    (72) expression -> . VARIABLE
    (73) expression -> . LPARENTESIS expression RPARENTESIS
    (74) expression -> . expression + expression
    (75) expression -> . expression - expression
    (76) expression -> . expression * expression
    (77) expression -> . expression / expression

    ISTRUE          shift and go to state 71
    NUMERO          shift and go to state 58
    VARIABLE        shift and go to state 41
    LPARENTESIS     shift and go to state 22

    condition_statement            shift and go to state 69
    istrue                         shift and go to state 70
    expression                     shift and go to state 51

state 48

    (54) case_statement -> CASE . VARIABLE case_when_statements else_statement PUNTO_COMA

    VARIABLE        shift and go to state 72


state 49

    (60) printvalues_statement -> PRINTVALUES . LPARENTESIS list_content_print RPARENTESIS PUNTO_COMA

    LPARENTESIS     shift and go to state 73


state 50

    (66) signal_statement -> SIGNAL . LPARENTESIS VARIABLE COMA return_num_statement RPARENTESIS PUNTO_COMA
    (67) signal_statement -> SIGNAL . LPARENTESIS VARIABLE COMA expression RPARENTESIS PUNTO_COMA

    LPARENTESIS     shift and go to state 74


state 51

    (39) condition_statement -> expression . condition expression
    (74) expression -> expression . + expression
    (75) expression -> expression . - expression
    (76) expression -> expression . * expression
    (77) expression -> expression . / expression
    (44) condition -> . MAYOR_QUE
    (45) condition -> . MENOR_QUE
    (46) condition -> . IGUAL
    (47) condition -> . DISTINTO_QUE
    (48) condition -> . MAYOR_IGUAL_QUE
    (49) condition -> . MENOR_IGUAL_QUE

    +               shift and go to state 76
    -               shift and go to state 77
    *               shift and go to state 78
    /               shift and go to state 79
    MAYOR_QUE       shift and go to state 80
    MENOR_QUE       shift and go to state 81
    IGUAL           shift and go to state 82
    DISTINTO_QUE    shift and go to state 83
    MAYOR_IGUAL_QUE shift and go to state 84
    MENOR_IGUAL_QUE shift and go to state 85

    condition                      shift and go to state 75

state 52

    (26) return_num_statement -> viewsignal_statement .

    COMENTARIO      reduce using rule 26 (return_num_statement -> viewsignal_statement .)
    NEW             reduce using rule 26 (return_num_statement -> viewsignal_statement .)
    ALTERB          reduce using rule 26 (return_num_statement -> viewsignal_statement .)
    VALUES          reduce using rule 26 (return_num_statement -> viewsignal_statement .)
    REPEAT          reduce using rule 26 (return_num_statement -> viewsignal_statement .)
    UNTIL           reduce using rule 26 (return_num_statement -> viewsignal_statement .)
    WHILE           reduce using rule 26 (return_num_statement -> viewsignal_statement .)
    CASE            reduce using rule 26 (return_num_statement -> viewsignal_statement .)
    PRINTVALUES     reduce using rule 26 (return_num_statement -> viewsignal_statement .)
    SIGNAL          reduce using rule 26 (return_num_statement -> viewsignal_statement .)
    VIEWSIGNAL      reduce using rule 26 (return_num_statement -> viewsignal_statement .)
    ALTER           reduce using rule 26 (return_num_statement -> viewsignal_statement .)
    ISTRUE          reduce using rule 26 (return_num_statement -> viewsignal_statement .)
    NUMERO          reduce using rule 26 (return_num_statement -> viewsignal_statement .)
    VARIABLE        reduce using rule 26 (return_num_statement -> viewsignal_statement .)
    LPARENTESIS     reduce using rule 26 (return_num_statement -> viewsignal_statement .)
    RPARENTESIS     reduce using rule 26 (return_num_statement -> viewsignal_statement .)
    BREAK           reduce using rule 26 (return_num_statement -> viewsignal_statement .)
    PUNTO_COMA      reduce using rule 26 (return_num_statement -> viewsignal_statement .)
    WHEN            reduce using rule 26 (return_num_statement -> viewsignal_statement .)
    COMA            reduce using rule 26 (return_num_statement -> viewsignal_statement .)
    THEN            reduce using rule 26 (return_num_statement -> viewsignal_statement .)


state 53

    (27) return_num_statement -> alter_statement .

    COMENTARIO      reduce using rule 27 (return_num_statement -> alter_statement .)
    NEW             reduce using rule 27 (return_num_statement -> alter_statement .)
    ALTERB          reduce using rule 27 (return_num_statement -> alter_statement .)
    VALUES          reduce using rule 27 (return_num_statement -> alter_statement .)
    REPEAT          reduce using rule 27 (return_num_statement -> alter_statement .)
    UNTIL           reduce using rule 27 (return_num_statement -> alter_statement .)
    WHILE           reduce using rule 27 (return_num_statement -> alter_statement .)
    CASE            reduce using rule 27 (return_num_statement -> alter_statement .)
    PRINTVALUES     reduce using rule 27 (return_num_statement -> alter_statement .)
    SIGNAL          reduce using rule 27 (return_num_statement -> alter_statement .)
    VIEWSIGNAL      reduce using rule 27 (return_num_statement -> alter_statement .)
    ALTER           reduce using rule 27 (return_num_statement -> alter_statement .)
    ISTRUE          reduce using rule 27 (return_num_statement -> alter_statement .)
    NUMERO          reduce using rule 27 (return_num_statement -> alter_statement .)
    VARIABLE        reduce using rule 27 (return_num_statement -> alter_statement .)
    LPARENTESIS     reduce using rule 27 (return_num_statement -> alter_statement .)
    RPARENTESIS     reduce using rule 27 (return_num_statement -> alter_statement .)
    BREAK           reduce using rule 27 (return_num_statement -> alter_statement .)
    PUNTO_COMA      reduce using rule 27 (return_num_statement -> alter_statement .)
    WHEN            reduce using rule 27 (return_num_statement -> alter_statement .)
    COMA            reduce using rule 27 (return_num_statement -> alter_statement .)
    THEN            reduce using rule 27 (return_num_statement -> alter_statement .)


state 54

    (29) return_bool_statement -> istrue_statement .

    COMENTARIO      reduce using rule 29 (return_bool_statement -> istrue_statement .)
    NEW             reduce using rule 29 (return_bool_statement -> istrue_statement .)
    ALTERB          reduce using rule 29 (return_bool_statement -> istrue_statement .)
    VALUES          reduce using rule 29 (return_bool_statement -> istrue_statement .)
    REPEAT          reduce using rule 29 (return_bool_statement -> istrue_statement .)
    UNTIL           reduce using rule 29 (return_bool_statement -> istrue_statement .)
    WHILE           reduce using rule 29 (return_bool_statement -> istrue_statement .)
    CASE            reduce using rule 29 (return_bool_statement -> istrue_statement .)
    PRINTVALUES     reduce using rule 29 (return_bool_statement -> istrue_statement .)
    SIGNAL          reduce using rule 29 (return_bool_statement -> istrue_statement .)
    VIEWSIGNAL      reduce using rule 29 (return_bool_statement -> istrue_statement .)
    ALTER           reduce using rule 29 (return_bool_statement -> istrue_statement .)
    ISTRUE          reduce using rule 29 (return_bool_statement -> istrue_statement .)
    NUMERO          reduce using rule 29 (return_bool_statement -> istrue_statement .)
    VARIABLE        reduce using rule 29 (return_bool_statement -> istrue_statement .)
    LPARENTESIS     reduce using rule 29 (return_bool_statement -> istrue_statement .)
    RPARENTESIS     reduce using rule 29 (return_bool_statement -> istrue_statement .)
    BREAK           reduce using rule 29 (return_bool_statement -> istrue_statement .)
    PUNTO_COMA      reduce using rule 29 (return_bool_statement -> istrue_statement .)
    WHEN            reduce using rule 29 (return_bool_statement -> istrue_statement .)
    COMA            reduce using rule 29 (return_bool_statement -> istrue_statement .)
    THEN            reduce using rule 29 (return_bool_statement -> istrue_statement .)


state 55

    (68) viewsignal_statement -> VIEWSIGNAL . LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA
    (69) viewsignal_statement -> VIEWSIGNAL . LPARENTESIS expression RPARENTESIS PUNTO_COMA
    (70) viewsignal_statement -> VIEWSIGNAL . LPARENTESIS alter_statement RPARENTESIS PUNTO_COMA

    LPARENTESIS     shift and go to state 86


state 56

    (32) alter_statement -> ALTER . LPARENTESIS VARIABLE COMA operador COMA return_num_statement RPARENTESIS PUNTO_COMA
    (33) alter_statement -> ALTER . LPARENTESIS VARIABLE COMA operador COMA expression RPARENTESIS PUNTO_COMA

    LPARENTESIS     shift and go to state 87


state 57

    (40) istrue_statement -> ISTRUE . LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA

    LPARENTESIS     shift and go to state 88


state 58

    (71) expression -> NUMERO .

    +               reduce using rule 71 (expression -> NUMERO .)
    -               reduce using rule 71 (expression -> NUMERO .)
    *               reduce using rule 71 (expression -> NUMERO .)
    /               reduce using rule 71 (expression -> NUMERO .)
    MAYOR_QUE       reduce using rule 71 (expression -> NUMERO .)
    MENOR_QUE       reduce using rule 71 (expression -> NUMERO .)
    IGUAL           reduce using rule 71 (expression -> NUMERO .)
    DISTINTO_QUE    reduce using rule 71 (expression -> NUMERO .)
    MAYOR_IGUAL_QUE reduce using rule 71 (expression -> NUMERO .)
    MENOR_IGUAL_QUE reduce using rule 71 (expression -> NUMERO .)
    RPARENTESIS     reduce using rule 71 (expression -> NUMERO .)
    COMA            reduce using rule 71 (expression -> NUMERO .)
    COMENTARIO      reduce using rule 71 (expression -> NUMERO .)
    NEW             reduce using rule 71 (expression -> NUMERO .)
    ALTERB          reduce using rule 71 (expression -> NUMERO .)
    VALUES          reduce using rule 71 (expression -> NUMERO .)
    REPEAT          reduce using rule 71 (expression -> NUMERO .)
    UNTIL           reduce using rule 71 (expression -> NUMERO .)
    WHILE           reduce using rule 71 (expression -> NUMERO .)
    CASE            reduce using rule 71 (expression -> NUMERO .)
    PRINTVALUES     reduce using rule 71 (expression -> NUMERO .)
    SIGNAL          reduce using rule 71 (expression -> NUMERO .)
    VIEWSIGNAL      reduce using rule 71 (expression -> NUMERO .)
    ALTER           reduce using rule 71 (expression -> NUMERO .)
    ISTRUE          reduce using rule 71 (expression -> NUMERO .)
    NUMERO          reduce using rule 71 (expression -> NUMERO .)
    VARIABLE        reduce using rule 71 (expression -> NUMERO .)
    LPARENTESIS     reduce using rule 71 (expression -> NUMERO .)
    BREAK           reduce using rule 71 (expression -> NUMERO .)
    PUNTO_COMA      reduce using rule 71 (expression -> NUMERO .)
    WHEN            reduce using rule 71 (expression -> NUMERO .)
    THEN            reduce using rule 71 (expression -> NUMERO .)


state 59

    (6) code_block -> group_proc proc MASTER LPARENTESIS comentario . list_statement RPARENTESIS PUNTO_COMA group_proc
    (10) list_statement -> . statement list_statement
    (11) list_statement -> . comentario
    (12) list_statement -> . empty
    (13) statement -> . no_return_statement
    (14) statement -> . return_statement
    (4) comentario -> . COMENTARIO
    (83) empty -> .
    (15) no_return_statement -> . new_variable_statement
    (16) no_return_statement -> . alterb_statement
    (17) no_return_statement -> . values_statement
    (18) no_return_statement -> . repeat_statement
    (19) no_return_statement -> . until_statement
    (20) no_return_statement -> . while_statement
    (21) no_return_statement -> . case_statement
    (22) no_return_statement -> . printvalues_statement
    (23) no_return_statement -> . signal_statement
    (24) return_statement -> . return_num_statement
    (25) return_statement -> . return_bool_statement
    (30) new_variable_statement -> . NEW VARIABLE COMA LPARENTESIS DATATYPE COMA value RPARENTESIS PUNTO_COMA
    (38) alterb_statement -> . ALTERB LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA
    (31) values_statement -> . VALUES LPARENTESIS VARIABLE COMA value RPARENTESIS PUNTO_COMA
    (41) repeat_statement -> . REPEAT LPARENTESIS list_statement break_statement RPARENTESIS PUNTO_COMA
    (43) until_statement -> . UNTIL LPARENTESIS list_statement RPARENTESIS condition_statement PUNTO_COMA
    (50) while_statement -> . WHILE condition_statement LPARENTESIS list_statement RPARENTESIS PUNTO_COMA
    (51) while_statement -> . WHILE istrue LPARENTESIS list_statement RPARENTESIS PUNTO_COMA
    (54) case_statement -> . CASE VARIABLE case_when_statements else_statement PUNTO_COMA
    (60) printvalues_statement -> . PRINTVALUES LPARENTESIS list_content_print RPARENTESIS PUNTO_COMA
    (66) signal_statement -> . SIGNAL LPARENTESIS VARIABLE COMA return_num_statement RPARENTESIS PUNTO_COMA
    (67) signal_statement -> . SIGNAL LPARENTESIS VARIABLE COMA expression RPARENTESIS PUNTO_COMA
    (26) return_num_statement -> . viewsignal_statement
    (27) return_num_statement -> . alter_statement
    (28) return_bool_statement -> . condition_statement
    (29) return_bool_statement -> . istrue_statement
    (68) viewsignal_statement -> . VIEWSIGNAL LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA
    (69) viewsignal_statement -> . VIEWSIGNAL LPARENTESIS expression RPARENTESIS PUNTO_COMA
    (70) viewsignal_statement -> . VIEWSIGNAL LPARENTESIS alter_statement RPARENTESIS PUNTO_COMA
    (32) alter_statement -> . ALTER LPARENTESIS VARIABLE COMA operador COMA return_num_statement RPARENTESIS PUNTO_COMA
    (33) alter_statement -> . ALTER LPARENTESIS VARIABLE COMA operador COMA expression RPARENTESIS PUNTO_COMA
    (39) condition_statement -> . expression condition expression
    (40) istrue_statement -> . ISTRUE LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA
    (71) expression -> . NUMERO
    (72) expression -> . VARIABLE
    (73) expression -> . LPARENTESIS expression RPARENTESIS
    (74) expression -> . expression + expression
    (75) expression -> . expression - expression
    (76) expression -> . expression * expression
    (77) expression -> . expression / expression

    COMENTARIO      shift and go to state 5
    RPARENTESIS     reduce using rule 83 (empty -> .)
    NEW             shift and go to state 40
    ALTERB          shift and go to state 42
    VALUES          shift and go to state 43
    REPEAT          shift and go to state 44
    UNTIL           shift and go to state 45
    WHILE           shift and go to state 47
    CASE            shift and go to state 48
    PRINTVALUES     shift and go to state 49
    SIGNAL          shift and go to state 50
    VIEWSIGNAL      shift and go to state 55
    ALTER           shift and go to state 56
    ISTRUE          shift and go to state 57
    NUMERO          shift and go to state 58
    VARIABLE        shift and go to state 41
    LPARENTESIS     shift and go to state 22

    comentario                     shift and go to state 23
    list_statement                 shift and go to state 89
    statement                      shift and go to state 25
    empty                          shift and go to state 26
    no_return_statement            shift and go to state 27
    return_statement               shift and go to state 28
    new_variable_statement         shift and go to state 29
    alterb_statement               shift and go to state 30
    values_statement               shift and go to state 31
    repeat_statement               shift and go to state 32
    until_statement                shift and go to state 33
    while_statement                shift and go to state 34
    case_statement                 shift and go to state 35
    printvalues_statement          shift and go to state 36
    signal_statement               shift and go to state 37
    return_num_statement           shift and go to state 38
    return_bool_statement          shift and go to state 39
    condition_statement            shift and go to state 46
    expression                     shift and go to state 51
    viewsignal_statement           shift and go to state 52
    alter_statement                shift and go to state 53
    istrue_statement               shift and go to state 54

state 60

    (8) group_proc -> PROC VARIABLE LPARENTESIS COMENTARIO list_statement . RPARENTESIS PUNTO_COMA group_proc

    RPARENTESIS     shift and go to state 90


state 61

    (73) expression -> LPARENTESIS expression . RPARENTESIS
    (74) expression -> expression . + expression
    (75) expression -> expression . - expression
    (76) expression -> expression . * expression
    (77) expression -> expression . / expression

    RPARENTESIS     shift and go to state 91
    +               shift and go to state 76
    -               shift and go to state 77
    *               shift and go to state 78
    /               shift and go to state 79


state 62

    (5) code_block -> proc MASTER LPARENTESIS comentario list_statement RPARENTESIS . PUNTO_COMA group_proc

    PUNTO_COMA      shift and go to state 92


state 63

    (10) list_statement -> statement list_statement .

    RPARENTESIS     reduce using rule 10 (list_statement -> statement list_statement .)
    BREAK           reduce using rule 10 (list_statement -> statement list_statement .)
    PUNTO_COMA      reduce using rule 10 (list_statement -> statement list_statement .)
    WHEN            reduce using rule 10 (list_statement -> statement list_statement .)
    COMENTARIO      reduce using rule 10 (list_statement -> statement list_statement .)
    NEW             reduce using rule 10 (list_statement -> statement list_statement .)
    ALTERB          reduce using rule 10 (list_statement -> statement list_statement .)
    VALUES          reduce using rule 10 (list_statement -> statement list_statement .)
    REPEAT          reduce using rule 10 (list_statement -> statement list_statement .)
    UNTIL           reduce using rule 10 (list_statement -> statement list_statement .)
    WHILE           reduce using rule 10 (list_statement -> statement list_statement .)
    CASE            reduce using rule 10 (list_statement -> statement list_statement .)
    PRINTVALUES     reduce using rule 10 (list_statement -> statement list_statement .)
    SIGNAL          reduce using rule 10 (list_statement -> statement list_statement .)
    VIEWSIGNAL      reduce using rule 10 (list_statement -> statement list_statement .)
    ALTER           reduce using rule 10 (list_statement -> statement list_statement .)
    ISTRUE          reduce using rule 10 (list_statement -> statement list_statement .)
    NUMERO          reduce using rule 10 (list_statement -> statement list_statement .)
    VARIABLE        reduce using rule 10 (list_statement -> statement list_statement .)
    LPARENTESIS     reduce using rule 10 (list_statement -> statement list_statement .)


state 64

    (30) new_variable_statement -> NEW VARIABLE . COMA LPARENTESIS DATATYPE COMA value RPARENTESIS PUNTO_COMA

    COMA            shift and go to state 93


state 65

    (38) alterb_statement -> ALTERB LPARENTESIS . VARIABLE RPARENTESIS PUNTO_COMA

    VARIABLE        shift and go to state 94


state 66

    (31) values_statement -> VALUES LPARENTESIS . VARIABLE COMA value RPARENTESIS PUNTO_COMA

    VARIABLE        shift and go to state 95


state 67

    (41) repeat_statement -> REPEAT LPARENTESIS . list_statement break_statement RPARENTESIS PUNTO_COMA
    (10) list_statement -> . statement list_statement
    (11) list_statement -> . comentario
    (12) list_statement -> . empty
    (13) statement -> . no_return_statement
    (14) statement -> . return_statement
    (4) comentario -> . COMENTARIO
    (83) empty -> .
    (15) no_return_statement -> . new_variable_statement
    (16) no_return_statement -> . alterb_statement
    (17) no_return_statement -> . values_statement
    (18) no_return_statement -> . repeat_statement
    (19) no_return_statement -> . until_statement
    (20) no_return_statement -> . while_statement
    (21) no_return_statement -> . case_statement
    (22) no_return_statement -> . printvalues_statement
    (23) no_return_statement -> . signal_statement
    (24) return_statement -> . return_num_statement
    (25) return_statement -> . return_bool_statement
    (30) new_variable_statement -> . NEW VARIABLE COMA LPARENTESIS DATATYPE COMA value RPARENTESIS PUNTO_COMA
    (38) alterb_statement -> . ALTERB LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA
    (31) values_statement -> . VALUES LPARENTESIS VARIABLE COMA value RPARENTESIS PUNTO_COMA
    (41) repeat_statement -> . REPEAT LPARENTESIS list_statement break_statement RPARENTESIS PUNTO_COMA
    (43) until_statement -> . UNTIL LPARENTESIS list_statement RPARENTESIS condition_statement PUNTO_COMA
    (50) while_statement -> . WHILE condition_statement LPARENTESIS list_statement RPARENTESIS PUNTO_COMA
    (51) while_statement -> . WHILE istrue LPARENTESIS list_statement RPARENTESIS PUNTO_COMA
    (54) case_statement -> . CASE VARIABLE case_when_statements else_statement PUNTO_COMA
    (60) printvalues_statement -> . PRINTVALUES LPARENTESIS list_content_print RPARENTESIS PUNTO_COMA
    (66) signal_statement -> . SIGNAL LPARENTESIS VARIABLE COMA return_num_statement RPARENTESIS PUNTO_COMA
    (67) signal_statement -> . SIGNAL LPARENTESIS VARIABLE COMA expression RPARENTESIS PUNTO_COMA
    (26) return_num_statement -> . viewsignal_statement
    (27) return_num_statement -> . alter_statement
    (28) return_bool_statement -> . condition_statement
    (29) return_bool_statement -> . istrue_statement
    (68) viewsignal_statement -> . VIEWSIGNAL LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA
    (69) viewsignal_statement -> . VIEWSIGNAL LPARENTESIS expression RPARENTESIS PUNTO_COMA
    (70) viewsignal_statement -> . VIEWSIGNAL LPARENTESIS alter_statement RPARENTESIS PUNTO_COMA
    (32) alter_statement -> . ALTER LPARENTESIS VARIABLE COMA operador COMA return_num_statement RPARENTESIS PUNTO_COMA
    (33) alter_statement -> . ALTER LPARENTESIS VARIABLE COMA operador COMA expression RPARENTESIS PUNTO_COMA
    (39) condition_statement -> . expression condition expression
    (40) istrue_statement -> . ISTRUE LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA
    (71) expression -> . NUMERO
    (72) expression -> . VARIABLE
    (73) expression -> . LPARENTESIS expression RPARENTESIS
    (74) expression -> . expression + expression
    (75) expression -> . expression - expression
    (76) expression -> . expression * expression
    (77) expression -> . expression / expression

    COMENTARIO      shift and go to state 5
    BREAK           reduce using rule 83 (empty -> .)
    NEW             shift and go to state 40
    ALTERB          shift and go to state 42
    VALUES          shift and go to state 43
    REPEAT          shift and go to state 44
    UNTIL           shift and go to state 45
    WHILE           shift and go to state 47
    CASE            shift and go to state 48
    PRINTVALUES     shift and go to state 49
    SIGNAL          shift and go to state 50
    VIEWSIGNAL      shift and go to state 55
    ALTER           shift and go to state 56
    ISTRUE          shift and go to state 57
    NUMERO          shift and go to state 58
    VARIABLE        shift and go to state 41
    LPARENTESIS     shift and go to state 22

    list_statement                 shift and go to state 96
    statement                      shift and go to state 25
    comentario                     shift and go to state 23
    empty                          shift and go to state 26
    no_return_statement            shift and go to state 27
    return_statement               shift and go to state 28
    new_variable_statement         shift and go to state 29
    alterb_statement               shift and go to state 30
    values_statement               shift and go to state 31
    repeat_statement               shift and go to state 32
    until_statement                shift and go to state 33
    while_statement                shift and go to state 34
    case_statement                 shift and go to state 35
    printvalues_statement          shift and go to state 36
    signal_statement               shift and go to state 37
    return_num_statement           shift and go to state 38
    return_bool_statement          shift and go to state 39
    condition_statement            shift and go to state 46
    expression                     shift and go to state 51
    viewsignal_statement           shift and go to state 52
    alter_statement                shift and go to state 53
    istrue_statement               shift and go to state 54

state 68

    (43) until_statement -> UNTIL LPARENTESIS . list_statement RPARENTESIS condition_statement PUNTO_COMA
    (10) list_statement -> . statement list_statement
    (11) list_statement -> . comentario
    (12) list_statement -> . empty
    (13) statement -> . no_return_statement
    (14) statement -> . return_statement
    (4) comentario -> . COMENTARIO
    (83) empty -> .
    (15) no_return_statement -> . new_variable_statement
    (16) no_return_statement -> . alterb_statement
    (17) no_return_statement -> . values_statement
    (18) no_return_statement -> . repeat_statement
    (19) no_return_statement -> . until_statement
    (20) no_return_statement -> . while_statement
    (21) no_return_statement -> . case_statement
    (22) no_return_statement -> . printvalues_statement
    (23) no_return_statement -> . signal_statement
    (24) return_statement -> . return_num_statement
    (25) return_statement -> . return_bool_statement
    (30) new_variable_statement -> . NEW VARIABLE COMA LPARENTESIS DATATYPE COMA value RPARENTESIS PUNTO_COMA
    (38) alterb_statement -> . ALTERB LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA
    (31) values_statement -> . VALUES LPARENTESIS VARIABLE COMA value RPARENTESIS PUNTO_COMA
    (41) repeat_statement -> . REPEAT LPARENTESIS list_statement break_statement RPARENTESIS PUNTO_COMA
    (43) until_statement -> . UNTIL LPARENTESIS list_statement RPARENTESIS condition_statement PUNTO_COMA
    (50) while_statement -> . WHILE condition_statement LPARENTESIS list_statement RPARENTESIS PUNTO_COMA
    (51) while_statement -> . WHILE istrue LPARENTESIS list_statement RPARENTESIS PUNTO_COMA
    (54) case_statement -> . CASE VARIABLE case_when_statements else_statement PUNTO_COMA
    (60) printvalues_statement -> . PRINTVALUES LPARENTESIS list_content_print RPARENTESIS PUNTO_COMA
    (66) signal_statement -> . SIGNAL LPARENTESIS VARIABLE COMA return_num_statement RPARENTESIS PUNTO_COMA
    (67) signal_statement -> . SIGNAL LPARENTESIS VARIABLE COMA expression RPARENTESIS PUNTO_COMA
    (26) return_num_statement -> . viewsignal_statement
    (27) return_num_statement -> . alter_statement
    (28) return_bool_statement -> . condition_statement
    (29) return_bool_statement -> . istrue_statement
    (68) viewsignal_statement -> . VIEWSIGNAL LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA
    (69) viewsignal_statement -> . VIEWSIGNAL LPARENTESIS expression RPARENTESIS PUNTO_COMA
    (70) viewsignal_statement -> . VIEWSIGNAL LPARENTESIS alter_statement RPARENTESIS PUNTO_COMA
    (32) alter_statement -> . ALTER LPARENTESIS VARIABLE COMA operador COMA return_num_statement RPARENTESIS PUNTO_COMA
    (33) alter_statement -> . ALTER LPARENTESIS VARIABLE COMA operador COMA expression RPARENTESIS PUNTO_COMA
    (39) condition_statement -> . expression condition expression
    (40) istrue_statement -> . ISTRUE LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA
    (71) expression -> . NUMERO
    (72) expression -> . VARIABLE
    (73) expression -> . LPARENTESIS expression RPARENTESIS
    (74) expression -> . expression + expression
    (75) expression -> . expression - expression
    (76) expression -> . expression * expression
    (77) expression -> . expression / expression

    COMENTARIO      shift and go to state 5
    RPARENTESIS     reduce using rule 83 (empty -> .)
    NEW             shift and go to state 40
    ALTERB          shift and go to state 42
    VALUES          shift and go to state 43
    REPEAT          shift and go to state 44
    UNTIL           shift and go to state 45
    WHILE           shift and go to state 47
    CASE            shift and go to state 48
    PRINTVALUES     shift and go to state 49
    SIGNAL          shift and go to state 50
    VIEWSIGNAL      shift and go to state 55
    ALTER           shift and go to state 56
    ISTRUE          shift and go to state 57
    NUMERO          shift and go to state 58
    VARIABLE        shift and go to state 41
    LPARENTESIS     shift and go to state 22

    list_statement                 shift and go to state 97
    condition_statement            shift and go to state 46
    statement                      shift and go to state 25
    comentario                     shift and go to state 23
    empty                          shift and go to state 26
    no_return_statement            shift and go to state 27
    return_statement               shift and go to state 28
    new_variable_statement         shift and go to state 29
    alterb_statement               shift and go to state 30
    values_statement               shift and go to state 31
    repeat_statement               shift and go to state 32
    until_statement                shift and go to state 33
    while_statement                shift and go to state 34
    case_statement                 shift and go to state 35
    printvalues_statement          shift and go to state 36
    signal_statement               shift and go to state 37
    return_num_statement           shift and go to state 38
    return_bool_statement          shift and go to state 39
    expression                     shift and go to state 51
    viewsignal_statement           shift and go to state 52
    alter_statement                shift and go to state 53
    istrue_statement               shift and go to state 54

state 69

    (50) while_statement -> WHILE condition_statement . LPARENTESIS list_statement RPARENTESIS PUNTO_COMA

    LPARENTESIS     shift and go to state 98


state 70

    (51) while_statement -> WHILE istrue . LPARENTESIS list_statement RPARENTESIS PUNTO_COMA

    LPARENTESIS     shift and go to state 99


state 71

    (78) istrue -> ISTRUE . LPARENTESIS VARIABLE RPARENTESIS

    LPARENTESIS     shift and go to state 100


state 72

    (54) case_statement -> CASE VARIABLE . case_when_statements else_statement PUNTO_COMA
    (55) case_when_statements -> . case_when_statement case_when_statements
    (56) case_when_statements -> . empty
    (57) case_when_statement -> . WHEN value THEN list_statement
    (83) empty -> .

    WHEN            shift and go to state 104
    COMENTARIO      reduce using rule 83 (empty -> .)
    NEW             reduce using rule 83 (empty -> .)
    ALTERB          reduce using rule 83 (empty -> .)
    VALUES          reduce using rule 83 (empty -> .)
    REPEAT          reduce using rule 83 (empty -> .)
    UNTIL           reduce using rule 83 (empty -> .)
    WHILE           reduce using rule 83 (empty -> .)
    CASE            reduce using rule 83 (empty -> .)
    PRINTVALUES     reduce using rule 83 (empty -> .)
    SIGNAL          reduce using rule 83 (empty -> .)
    VIEWSIGNAL      reduce using rule 83 (empty -> .)
    ALTER           reduce using rule 83 (empty -> .)
    ISTRUE          reduce using rule 83 (empty -> .)
    NUMERO          reduce using rule 83 (empty -> .)
    VARIABLE        reduce using rule 83 (empty -> .)
    LPARENTESIS     reduce using rule 83 (empty -> .)
    PUNTO_COMA      reduce using rule 83 (empty -> .)

    case_when_statements           shift and go to state 101
    case_when_statement            shift and go to state 102
    empty                          shift and go to state 103

state 73

    (60) printvalues_statement -> PRINTVALUES LPARENTESIS . list_content_print RPARENTESIS PUNTO_COMA
    (61) list_content_print -> . content_print COMA list_content_print
    (62) list_content_print -> . content_print
    (63) content_print -> . STRING
    (64) content_print -> . VARIABLE
    (65) content_print -> . value
    (79) value -> . expression
    (80) value -> . bool
    (81) value -> . return_num_statement
    (82) value -> . return_bool_statement
    (71) expression -> . NUMERO
    (72) expression -> . VARIABLE
    (73) expression -> . LPARENTESIS expression RPARENTESIS
    (74) expression -> . expression + expression
    (75) expression -> . expression - expression
    (76) expression -> . expression * expression
    (77) expression -> . expression / expression
    (52) bool -> . TRUE
    (53) bool -> . FALSE
    (26) return_num_statement -> . viewsignal_statement
    (27) return_num_statement -> . alter_statement
    (28) return_bool_statement -> . condition_statement
    (29) return_bool_statement -> . istrue_statement
    (68) viewsignal_statement -> . VIEWSIGNAL LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA
    (69) viewsignal_statement -> . VIEWSIGNAL LPARENTESIS expression RPARENTESIS PUNTO_COMA
    (70) viewsignal_statement -> . VIEWSIGNAL LPARENTESIS alter_statement RPARENTESIS PUNTO_COMA
    (32) alter_statement -> . ALTER LPARENTESIS VARIABLE COMA operador COMA return_num_statement RPARENTESIS PUNTO_COMA
    (33) alter_statement -> . ALTER LPARENTESIS VARIABLE COMA operador COMA expression RPARENTESIS PUNTO_COMA
    (39) condition_statement -> . expression condition expression
    (40) istrue_statement -> . ISTRUE LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA

    STRING          shift and go to state 107
    VARIABLE        shift and go to state 108
    NUMERO          shift and go to state 58
    LPARENTESIS     shift and go to state 22
    TRUE            shift and go to state 114
    FALSE           shift and go to state 115
    VIEWSIGNAL      shift and go to state 55
    ALTER           shift and go to state 56
    ISTRUE          shift and go to state 57

    list_content_print             shift and go to state 105
    content_print                  shift and go to state 106
    value                          shift and go to state 109
    expression                     shift and go to state 110
    bool                           shift and go to state 111
    return_num_statement           shift and go to state 112
    return_bool_statement          shift and go to state 113
    viewsignal_statement           shift and go to state 52
    alter_statement                shift and go to state 53
    condition_statement            shift and go to state 46
    istrue_statement               shift and go to state 54

state 74

    (66) signal_statement -> SIGNAL LPARENTESIS . VARIABLE COMA return_num_statement RPARENTESIS PUNTO_COMA
    (67) signal_statement -> SIGNAL LPARENTESIS . VARIABLE COMA expression RPARENTESIS PUNTO_COMA

    VARIABLE        shift and go to state 116


state 75

    (39) condition_statement -> expression condition . expression
    (71) expression -> . NUMERO
    (72) expression -> . VARIABLE
    (73) expression -> . LPARENTESIS expression RPARENTESIS
    (74) expression -> . expression + expression
    (75) expression -> . expression - expression
    (76) expression -> . expression * expression
    (77) expression -> . expression / expression

    NUMERO          shift and go to state 58
    VARIABLE        shift and go to state 41
    LPARENTESIS     shift and go to state 22

    expression                     shift and go to state 117

state 76

    (74) expression -> expression + . expression
    (71) expression -> . NUMERO
    (72) expression -> . VARIABLE
    (73) expression -> . LPARENTESIS expression RPARENTESIS
    (74) expression -> . expression + expression
    (75) expression -> . expression - expression
    (76) expression -> . expression * expression
    (77) expression -> . expression / expression

    NUMERO          shift and go to state 58
    VARIABLE        shift and go to state 41
    LPARENTESIS     shift and go to state 22

    expression                     shift and go to state 118

state 77

    (75) expression -> expression - . expression
    (71) expression -> . NUMERO
    (72) expression -> . VARIABLE
    (73) expression -> . LPARENTESIS expression RPARENTESIS
    (74) expression -> . expression + expression
    (75) expression -> . expression - expression
    (76) expression -> . expression * expression
    (77) expression -> . expression / expression

    NUMERO          shift and go to state 58
    VARIABLE        shift and go to state 41
    LPARENTESIS     shift and go to state 22

    expression                     shift and go to state 119

state 78

    (76) expression -> expression * . expression
    (71) expression -> . NUMERO
    (72) expression -> . VARIABLE
    (73) expression -> . LPARENTESIS expression RPARENTESIS
    (74) expression -> . expression + expression
    (75) expression -> . expression - expression
    (76) expression -> . expression * expression
    (77) expression -> . expression / expression

    NUMERO          shift and go to state 58
    VARIABLE        shift and go to state 41
    LPARENTESIS     shift and go to state 22

    expression                     shift and go to state 120

state 79

    (77) expression -> expression / . expression
    (71) expression -> . NUMERO
    (72) expression -> . VARIABLE
    (73) expression -> . LPARENTESIS expression RPARENTESIS
    (74) expression -> . expression + expression
    (75) expression -> . expression - expression
    (76) expression -> . expression * expression
    (77) expression -> . expression / expression

    NUMERO          shift and go to state 58
    VARIABLE        shift and go to state 41
    LPARENTESIS     shift and go to state 22

    expression                     shift and go to state 121

state 80

    (44) condition -> MAYOR_QUE .

    NUMERO          reduce using rule 44 (condition -> MAYOR_QUE .)
    VARIABLE        reduce using rule 44 (condition -> MAYOR_QUE .)
    LPARENTESIS     reduce using rule 44 (condition -> MAYOR_QUE .)


state 81

    (45) condition -> MENOR_QUE .

    NUMERO          reduce using rule 45 (condition -> MENOR_QUE .)
    VARIABLE        reduce using rule 45 (condition -> MENOR_QUE .)
    LPARENTESIS     reduce using rule 45 (condition -> MENOR_QUE .)


state 82

    (46) condition -> IGUAL .

    NUMERO          reduce using rule 46 (condition -> IGUAL .)
    VARIABLE        reduce using rule 46 (condition -> IGUAL .)
    LPARENTESIS     reduce using rule 46 (condition -> IGUAL .)


state 83

    (47) condition -> DISTINTO_QUE .

    NUMERO          reduce using rule 47 (condition -> DISTINTO_QUE .)
    VARIABLE        reduce using rule 47 (condition -> DISTINTO_QUE .)
    LPARENTESIS     reduce using rule 47 (condition -> DISTINTO_QUE .)


state 84

    (48) condition -> MAYOR_IGUAL_QUE .

    NUMERO          reduce using rule 48 (condition -> MAYOR_IGUAL_QUE .)
    VARIABLE        reduce using rule 48 (condition -> MAYOR_IGUAL_QUE .)
    LPARENTESIS     reduce using rule 48 (condition -> MAYOR_IGUAL_QUE .)


state 85

    (49) condition -> MENOR_IGUAL_QUE .

    NUMERO          reduce using rule 49 (condition -> MENOR_IGUAL_QUE .)
    VARIABLE        reduce using rule 49 (condition -> MENOR_IGUAL_QUE .)
    LPARENTESIS     reduce using rule 49 (condition -> MENOR_IGUAL_QUE .)


state 86

    (68) viewsignal_statement -> VIEWSIGNAL LPARENTESIS . VARIABLE RPARENTESIS PUNTO_COMA
    (69) viewsignal_statement -> VIEWSIGNAL LPARENTESIS . expression RPARENTESIS PUNTO_COMA
    (70) viewsignal_statement -> VIEWSIGNAL LPARENTESIS . alter_statement RPARENTESIS PUNTO_COMA
    (71) expression -> . NUMERO
    (72) expression -> . VARIABLE
    (73) expression -> . LPARENTESIS expression RPARENTESIS
    (74) expression -> . expression + expression
    (75) expression -> . expression - expression
    (76) expression -> . expression * expression
    (77) expression -> . expression / expression
    (32) alter_statement -> . ALTER LPARENTESIS VARIABLE COMA operador COMA return_num_statement RPARENTESIS PUNTO_COMA
    (33) alter_statement -> . ALTER LPARENTESIS VARIABLE COMA operador COMA expression RPARENTESIS PUNTO_COMA

    VARIABLE        shift and go to state 122
    NUMERO          shift and go to state 58
    LPARENTESIS     shift and go to state 22
    ALTER           shift and go to state 56

    expression                     shift and go to state 123
    alter_statement                shift and go to state 124

state 87

    (32) alter_statement -> ALTER LPARENTESIS . VARIABLE COMA operador COMA return_num_statement RPARENTESIS PUNTO_COMA
    (33) alter_statement -> ALTER LPARENTESIS . VARIABLE COMA operador COMA expression RPARENTESIS PUNTO_COMA

    VARIABLE        shift and go to state 125


state 88

    (40) istrue_statement -> ISTRUE LPARENTESIS . VARIABLE RPARENTESIS PUNTO_COMA

    VARIABLE        shift and go to state 126


state 89

    (6) code_block -> group_proc proc MASTER LPARENTESIS comentario list_statement . RPARENTESIS PUNTO_COMA group_proc

    RPARENTESIS     shift and go to state 127


state 90

    (8) group_proc -> PROC VARIABLE LPARENTESIS COMENTARIO list_statement RPARENTESIS . PUNTO_COMA group_proc

    PUNTO_COMA      shift and go to state 128


state 91

    (73) expression -> LPARENTESIS expression RPARENTESIS .

    +               reduce using rule 73 (expression -> LPARENTESIS expression RPARENTESIS .)
    -               reduce using rule 73 (expression -> LPARENTESIS expression RPARENTESIS .)
    *               reduce using rule 73 (expression -> LPARENTESIS expression RPARENTESIS .)
    /               reduce using rule 73 (expression -> LPARENTESIS expression RPARENTESIS .)
    MAYOR_QUE       reduce using rule 73 (expression -> LPARENTESIS expression RPARENTESIS .)
    MENOR_QUE       reduce using rule 73 (expression -> LPARENTESIS expression RPARENTESIS .)
    IGUAL           reduce using rule 73 (expression -> LPARENTESIS expression RPARENTESIS .)
    DISTINTO_QUE    reduce using rule 73 (expression -> LPARENTESIS expression RPARENTESIS .)
    MAYOR_IGUAL_QUE reduce using rule 73 (expression -> LPARENTESIS expression RPARENTESIS .)
    MENOR_IGUAL_QUE reduce using rule 73 (expression -> LPARENTESIS expression RPARENTESIS .)
    RPARENTESIS     reduce using rule 73 (expression -> LPARENTESIS expression RPARENTESIS .)
    COMA            reduce using rule 73 (expression -> LPARENTESIS expression RPARENTESIS .)
    COMENTARIO      reduce using rule 73 (expression -> LPARENTESIS expression RPARENTESIS .)
    NEW             reduce using rule 73 (expression -> LPARENTESIS expression RPARENTESIS .)
    ALTERB          reduce using rule 73 (expression -> LPARENTESIS expression RPARENTESIS .)
    VALUES          reduce using rule 73 (expression -> LPARENTESIS expression RPARENTESIS .)
    REPEAT          reduce using rule 73 (expression -> LPARENTESIS expression RPARENTESIS .)
    UNTIL           reduce using rule 73 (expression -> LPARENTESIS expression RPARENTESIS .)
    WHILE           reduce using rule 73 (expression -> LPARENTESIS expression RPARENTESIS .)
    CASE            reduce using rule 73 (expression -> LPARENTESIS expression RPARENTESIS .)
    PRINTVALUES     reduce using rule 73 (expression -> LPARENTESIS expression RPARENTESIS .)
    SIGNAL          reduce using rule 73 (expression -> LPARENTESIS expression RPARENTESIS .)
    VIEWSIGNAL      reduce using rule 73 (expression -> LPARENTESIS expression RPARENTESIS .)
    ALTER           reduce using rule 73 (expression -> LPARENTESIS expression RPARENTESIS .)
    ISTRUE          reduce using rule 73 (expression -> LPARENTESIS expression RPARENTESIS .)
    NUMERO          reduce using rule 73 (expression -> LPARENTESIS expression RPARENTESIS .)
    VARIABLE        reduce using rule 73 (expression -> LPARENTESIS expression RPARENTESIS .)
    LPARENTESIS     reduce using rule 73 (expression -> LPARENTESIS expression RPARENTESIS .)
    BREAK           reduce using rule 73 (expression -> LPARENTESIS expression RPARENTESIS .)
    PUNTO_COMA      reduce using rule 73 (expression -> LPARENTESIS expression RPARENTESIS .)
    WHEN            reduce using rule 73 (expression -> LPARENTESIS expression RPARENTESIS .)
    THEN            reduce using rule 73 (expression -> LPARENTESIS expression RPARENTESIS .)


state 92

    (5) code_block -> proc MASTER LPARENTESIS comentario list_statement RPARENTESIS PUNTO_COMA . group_proc
    (8) group_proc -> . PROC VARIABLE LPARENTESIS COMENTARIO list_statement RPARENTESIS PUNTO_COMA group_proc
    (9) group_proc -> . empty
    (83) empty -> .

    PROC            shift and go to state 130
    $end            reduce using rule 83 (empty -> .)

    group_proc                     shift and go to state 129
    empty                          shift and go to state 10

state 93

    (30) new_variable_statement -> NEW VARIABLE COMA . LPARENTESIS DATATYPE COMA value RPARENTESIS PUNTO_COMA

    LPARENTESIS     shift and go to state 131


state 94

    (38) alterb_statement -> ALTERB LPARENTESIS VARIABLE . RPARENTESIS PUNTO_COMA

    RPARENTESIS     shift and go to state 132


state 95

    (31) values_statement -> VALUES LPARENTESIS VARIABLE . COMA value RPARENTESIS PUNTO_COMA

    COMA            shift and go to state 133


state 96

    (41) repeat_statement -> REPEAT LPARENTESIS list_statement . break_statement RPARENTESIS PUNTO_COMA
    (42) break_statement -> . BREAK PUNTO_COMA

    BREAK           shift and go to state 135

    break_statement                shift and go to state 134

state 97

    (43) until_statement -> UNTIL LPARENTESIS list_statement . RPARENTESIS condition_statement PUNTO_COMA

    RPARENTESIS     shift and go to state 136


state 98

    (50) while_statement -> WHILE condition_statement LPARENTESIS . list_statement RPARENTESIS PUNTO_COMA
    (10) list_statement -> . statement list_statement
    (11) list_statement -> . comentario
    (12) list_statement -> . empty
    (13) statement -> . no_return_statement
    (14) statement -> . return_statement
    (4) comentario -> . COMENTARIO
    (83) empty -> .
    (15) no_return_statement -> . new_variable_statement
    (16) no_return_statement -> . alterb_statement
    (17) no_return_statement -> . values_statement
    (18) no_return_statement -> . repeat_statement
    (19) no_return_statement -> . until_statement
    (20) no_return_statement -> . while_statement
    (21) no_return_statement -> . case_statement
    (22) no_return_statement -> . printvalues_statement
    (23) no_return_statement -> . signal_statement
    (24) return_statement -> . return_num_statement
    (25) return_statement -> . return_bool_statement
    (30) new_variable_statement -> . NEW VARIABLE COMA LPARENTESIS DATATYPE COMA value RPARENTESIS PUNTO_COMA
    (38) alterb_statement -> . ALTERB LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA
    (31) values_statement -> . VALUES LPARENTESIS VARIABLE COMA value RPARENTESIS PUNTO_COMA
    (41) repeat_statement -> . REPEAT LPARENTESIS list_statement break_statement RPARENTESIS PUNTO_COMA
    (43) until_statement -> . UNTIL LPARENTESIS list_statement RPARENTESIS condition_statement PUNTO_COMA
    (50) while_statement -> . WHILE condition_statement LPARENTESIS list_statement RPARENTESIS PUNTO_COMA
    (51) while_statement -> . WHILE istrue LPARENTESIS list_statement RPARENTESIS PUNTO_COMA
    (54) case_statement -> . CASE VARIABLE case_when_statements else_statement PUNTO_COMA
    (60) printvalues_statement -> . PRINTVALUES LPARENTESIS list_content_print RPARENTESIS PUNTO_COMA
    (66) signal_statement -> . SIGNAL LPARENTESIS VARIABLE COMA return_num_statement RPARENTESIS PUNTO_COMA
    (67) signal_statement -> . SIGNAL LPARENTESIS VARIABLE COMA expression RPARENTESIS PUNTO_COMA
    (26) return_num_statement -> . viewsignal_statement
    (27) return_num_statement -> . alter_statement
    (28) return_bool_statement -> . condition_statement
    (29) return_bool_statement -> . istrue_statement
    (68) viewsignal_statement -> . VIEWSIGNAL LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA
    (69) viewsignal_statement -> . VIEWSIGNAL LPARENTESIS expression RPARENTESIS PUNTO_COMA
    (70) viewsignal_statement -> . VIEWSIGNAL LPARENTESIS alter_statement RPARENTESIS PUNTO_COMA
    (32) alter_statement -> . ALTER LPARENTESIS VARIABLE COMA operador COMA return_num_statement RPARENTESIS PUNTO_COMA
    (33) alter_statement -> . ALTER LPARENTESIS VARIABLE COMA operador COMA expression RPARENTESIS PUNTO_COMA
    (39) condition_statement -> . expression condition expression
    (40) istrue_statement -> . ISTRUE LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA
    (71) expression -> . NUMERO
    (72) expression -> . VARIABLE
    (73) expression -> . LPARENTESIS expression RPARENTESIS
    (74) expression -> . expression + expression
    (75) expression -> . expression - expression
    (76) expression -> . expression * expression
    (77) expression -> . expression / expression

    COMENTARIO      shift and go to state 5
    RPARENTESIS     reduce using rule 83 (empty -> .)
    NEW             shift and go to state 40
    ALTERB          shift and go to state 42
    VALUES          shift and go to state 43
    REPEAT          shift and go to state 44
    UNTIL           shift and go to state 45
    WHILE           shift and go to state 47
    CASE            shift and go to state 48
    PRINTVALUES     shift and go to state 49
    SIGNAL          shift and go to state 50
    VIEWSIGNAL      shift and go to state 55
    ALTER           shift and go to state 56
    ISTRUE          shift and go to state 57
    NUMERO          shift and go to state 58
    VARIABLE        shift and go to state 41
    LPARENTESIS     shift and go to state 22

    condition_statement            shift and go to state 46
    list_statement                 shift and go to state 137
    statement                      shift and go to state 25
    comentario                     shift and go to state 23
    empty                          shift and go to state 26
    no_return_statement            shift and go to state 27
    return_statement               shift and go to state 28
    new_variable_statement         shift and go to state 29
    alterb_statement               shift and go to state 30
    values_statement               shift and go to state 31
    repeat_statement               shift and go to state 32
    until_statement                shift and go to state 33
    while_statement                shift and go to state 34
    case_statement                 shift and go to state 35
    printvalues_statement          shift and go to state 36
    signal_statement               shift and go to state 37
    return_num_statement           shift and go to state 38
    return_bool_statement          shift and go to state 39
    expression                     shift and go to state 51
    viewsignal_statement           shift and go to state 52
    alter_statement                shift and go to state 53
    istrue_statement               shift and go to state 54

state 99

    (51) while_statement -> WHILE istrue LPARENTESIS . list_statement RPARENTESIS PUNTO_COMA
    (10) list_statement -> . statement list_statement
    (11) list_statement -> . comentario
    (12) list_statement -> . empty
    (13) statement -> . no_return_statement
    (14) statement -> . return_statement
    (4) comentario -> . COMENTARIO
    (83) empty -> .
    (15) no_return_statement -> . new_variable_statement
    (16) no_return_statement -> . alterb_statement
    (17) no_return_statement -> . values_statement
    (18) no_return_statement -> . repeat_statement
    (19) no_return_statement -> . until_statement
    (20) no_return_statement -> . while_statement
    (21) no_return_statement -> . case_statement
    (22) no_return_statement -> . printvalues_statement
    (23) no_return_statement -> . signal_statement
    (24) return_statement -> . return_num_statement
    (25) return_statement -> . return_bool_statement
    (30) new_variable_statement -> . NEW VARIABLE COMA LPARENTESIS DATATYPE COMA value RPARENTESIS PUNTO_COMA
    (38) alterb_statement -> . ALTERB LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA
    (31) values_statement -> . VALUES LPARENTESIS VARIABLE COMA value RPARENTESIS PUNTO_COMA
    (41) repeat_statement -> . REPEAT LPARENTESIS list_statement break_statement RPARENTESIS PUNTO_COMA
    (43) until_statement -> . UNTIL LPARENTESIS list_statement RPARENTESIS condition_statement PUNTO_COMA
    (50) while_statement -> . WHILE condition_statement LPARENTESIS list_statement RPARENTESIS PUNTO_COMA
    (51) while_statement -> . WHILE istrue LPARENTESIS list_statement RPARENTESIS PUNTO_COMA
    (54) case_statement -> . CASE VARIABLE case_when_statements else_statement PUNTO_COMA
    (60) printvalues_statement -> . PRINTVALUES LPARENTESIS list_content_print RPARENTESIS PUNTO_COMA
    (66) signal_statement -> . SIGNAL LPARENTESIS VARIABLE COMA return_num_statement RPARENTESIS PUNTO_COMA
    (67) signal_statement -> . SIGNAL LPARENTESIS VARIABLE COMA expression RPARENTESIS PUNTO_COMA
    (26) return_num_statement -> . viewsignal_statement
    (27) return_num_statement -> . alter_statement
    (28) return_bool_statement -> . condition_statement
    (29) return_bool_statement -> . istrue_statement
    (68) viewsignal_statement -> . VIEWSIGNAL LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA
    (69) viewsignal_statement -> . VIEWSIGNAL LPARENTESIS expression RPARENTESIS PUNTO_COMA
    (70) viewsignal_statement -> . VIEWSIGNAL LPARENTESIS alter_statement RPARENTESIS PUNTO_COMA
    (32) alter_statement -> . ALTER LPARENTESIS VARIABLE COMA operador COMA return_num_statement RPARENTESIS PUNTO_COMA
    (33) alter_statement -> . ALTER LPARENTESIS VARIABLE COMA operador COMA expression RPARENTESIS PUNTO_COMA
    (39) condition_statement -> . expression condition expression
    (40) istrue_statement -> . ISTRUE LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA
    (71) expression -> . NUMERO
    (72) expression -> . VARIABLE
    (73) expression -> . LPARENTESIS expression RPARENTESIS
    (74) expression -> . expression + expression
    (75) expression -> . expression - expression
    (76) expression -> . expression * expression
    (77) expression -> . expression / expression

    COMENTARIO      shift and go to state 5
    RPARENTESIS     reduce using rule 83 (empty -> .)
    NEW             shift and go to state 40
    ALTERB          shift and go to state 42
    VALUES          shift and go to state 43
    REPEAT          shift and go to state 44
    UNTIL           shift and go to state 45
    WHILE           shift and go to state 47
    CASE            shift and go to state 48
    PRINTVALUES     shift and go to state 49
    SIGNAL          shift and go to state 50
    VIEWSIGNAL      shift and go to state 55
    ALTER           shift and go to state 56
    ISTRUE          shift and go to state 57
    NUMERO          shift and go to state 58
    VARIABLE        shift and go to state 41
    LPARENTESIS     shift and go to state 22

    list_statement                 shift and go to state 138
    statement                      shift and go to state 25
    comentario                     shift and go to state 23
    empty                          shift and go to state 26
    no_return_statement            shift and go to state 27
    return_statement               shift and go to state 28
    new_variable_statement         shift and go to state 29
    alterb_statement               shift and go to state 30
    values_statement               shift and go to state 31
    repeat_statement               shift and go to state 32
    until_statement                shift and go to state 33
    while_statement                shift and go to state 34
    case_statement                 shift and go to state 35
    printvalues_statement          shift and go to state 36
    signal_statement               shift and go to state 37
    return_num_statement           shift and go to state 38
    return_bool_statement          shift and go to state 39
    condition_statement            shift and go to state 46
    expression                     shift and go to state 51
    viewsignal_statement           shift and go to state 52
    alter_statement                shift and go to state 53
    istrue_statement               shift and go to state 54

state 100

    (78) istrue -> ISTRUE LPARENTESIS . VARIABLE RPARENTESIS

    VARIABLE        shift and go to state 139


state 101

    (54) case_statement -> CASE VARIABLE case_when_statements . else_statement PUNTO_COMA
    (58) else_statement -> . list_statement
    (59) else_statement -> . empty
    (10) list_statement -> . statement list_statement
    (11) list_statement -> . comentario
    (12) list_statement -> . empty
    (83) empty -> .
    (13) statement -> . no_return_statement
    (14) statement -> . return_statement
    (4) comentario -> . COMENTARIO
    (15) no_return_statement -> . new_variable_statement
    (16) no_return_statement -> . alterb_statement
    (17) no_return_statement -> . values_statement
    (18) no_return_statement -> . repeat_statement
    (19) no_return_statement -> . until_statement
    (20) no_return_statement -> . while_statement
    (21) no_return_statement -> . case_statement
    (22) no_return_statement -> . printvalues_statement
    (23) no_return_statement -> . signal_statement
    (24) return_statement -> . return_num_statement
    (25) return_statement -> . return_bool_statement
    (30) new_variable_statement -> . NEW VARIABLE COMA LPARENTESIS DATATYPE COMA value RPARENTESIS PUNTO_COMA
    (38) alterb_statement -> . ALTERB LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA
    (31) values_statement -> . VALUES LPARENTESIS VARIABLE COMA value RPARENTESIS PUNTO_COMA
    (41) repeat_statement -> . REPEAT LPARENTESIS list_statement break_statement RPARENTESIS PUNTO_COMA
    (43) until_statement -> . UNTIL LPARENTESIS list_statement RPARENTESIS condition_statement PUNTO_COMA
    (50) while_statement -> . WHILE condition_statement LPARENTESIS list_statement RPARENTESIS PUNTO_COMA
    (51) while_statement -> . WHILE istrue LPARENTESIS list_statement RPARENTESIS PUNTO_COMA
    (54) case_statement -> . CASE VARIABLE case_when_statements else_statement PUNTO_COMA
    (60) printvalues_statement -> . PRINTVALUES LPARENTESIS list_content_print RPARENTESIS PUNTO_COMA
    (66) signal_statement -> . SIGNAL LPARENTESIS VARIABLE COMA return_num_statement RPARENTESIS PUNTO_COMA
    (67) signal_statement -> . SIGNAL LPARENTESIS VARIABLE COMA expression RPARENTESIS PUNTO_COMA
    (26) return_num_statement -> . viewsignal_statement
    (27) return_num_statement -> . alter_statement
    (28) return_bool_statement -> . condition_statement
    (29) return_bool_statement -> . istrue_statement
    (68) viewsignal_statement -> . VIEWSIGNAL LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA
    (69) viewsignal_statement -> . VIEWSIGNAL LPARENTESIS expression RPARENTESIS PUNTO_COMA
    (70) viewsignal_statement -> . VIEWSIGNAL LPARENTESIS alter_statement RPARENTESIS PUNTO_COMA
    (32) alter_statement -> . ALTER LPARENTESIS VARIABLE COMA operador COMA return_num_statement RPARENTESIS PUNTO_COMA
    (33) alter_statement -> . ALTER LPARENTESIS VARIABLE COMA operador COMA expression RPARENTESIS PUNTO_COMA
    (39) condition_statement -> . expression condition expression
    (40) istrue_statement -> . ISTRUE LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA
    (71) expression -> . NUMERO
    (72) expression -> . VARIABLE
    (73) expression -> . LPARENTESIS expression RPARENTESIS
    (74) expression -> . expression + expression
    (75) expression -> . expression - expression
    (76) expression -> . expression * expression
    (77) expression -> . expression / expression

    PUNTO_COMA      reduce using rule 83 (empty -> .)
    COMENTARIO      shift and go to state 5
    NEW             shift and go to state 40
    ALTERB          shift and go to state 42
    VALUES          shift and go to state 43
    REPEAT          shift and go to state 44
    UNTIL           shift and go to state 45
    WHILE           shift and go to state 47
    CASE            shift and go to state 48
    PRINTVALUES     shift and go to state 49
    SIGNAL          shift and go to state 50
    VIEWSIGNAL      shift and go to state 55
    ALTER           shift and go to state 56
    ISTRUE          shift and go to state 57
    NUMERO          shift and go to state 58
    VARIABLE        shift and go to state 41
    LPARENTESIS     shift and go to state 22

    else_statement                 shift and go to state 140
    list_statement                 shift and go to state 141
    empty                          shift and go to state 142
    statement                      shift and go to state 25
    comentario                     shift and go to state 23
    no_return_statement            shift and go to state 27
    return_statement               shift and go to state 28
    new_variable_statement         shift and go to state 29
    alterb_statement               shift and go to state 30
    values_statement               shift and go to state 31
    repeat_statement               shift and go to state 32
    until_statement                shift and go to state 33
    while_statement                shift and go to state 34
    case_statement                 shift and go to state 35
    printvalues_statement          shift and go to state 36
    signal_statement               shift and go to state 37
    return_num_statement           shift and go to state 38
    return_bool_statement          shift and go to state 39
    condition_statement            shift and go to state 46
    expression                     shift and go to state 51
    viewsignal_statement           shift and go to state 52
    alter_statement                shift and go to state 53
    istrue_statement               shift and go to state 54

state 102

    (55) case_when_statements -> case_when_statement . case_when_statements
    (55) case_when_statements -> . case_when_statement case_when_statements
    (56) case_when_statements -> . empty
    (57) case_when_statement -> . WHEN value THEN list_statement
    (83) empty -> .

    WHEN            shift and go to state 104
    COMENTARIO      reduce using rule 83 (empty -> .)
    NEW             reduce using rule 83 (empty -> .)
    ALTERB          reduce using rule 83 (empty -> .)
    VALUES          reduce using rule 83 (empty -> .)
    REPEAT          reduce using rule 83 (empty -> .)
    UNTIL           reduce using rule 83 (empty -> .)
    WHILE           reduce using rule 83 (empty -> .)
    CASE            reduce using rule 83 (empty -> .)
    PRINTVALUES     reduce using rule 83 (empty -> .)
    SIGNAL          reduce using rule 83 (empty -> .)
    VIEWSIGNAL      reduce using rule 83 (empty -> .)
    ALTER           reduce using rule 83 (empty -> .)
    ISTRUE          reduce using rule 83 (empty -> .)
    NUMERO          reduce using rule 83 (empty -> .)
    VARIABLE        reduce using rule 83 (empty -> .)
    LPARENTESIS     reduce using rule 83 (empty -> .)
    PUNTO_COMA      reduce using rule 83 (empty -> .)

    case_when_statement            shift and go to state 102
    case_when_statements           shift and go to state 143
    empty                          shift and go to state 103

state 103

    (56) case_when_statements -> empty .

    COMENTARIO      reduce using rule 56 (case_when_statements -> empty .)
    NEW             reduce using rule 56 (case_when_statements -> empty .)
    ALTERB          reduce using rule 56 (case_when_statements -> empty .)
    VALUES          reduce using rule 56 (case_when_statements -> empty .)
    REPEAT          reduce using rule 56 (case_when_statements -> empty .)
    UNTIL           reduce using rule 56 (case_when_statements -> empty .)
    WHILE           reduce using rule 56 (case_when_statements -> empty .)
    CASE            reduce using rule 56 (case_when_statements -> empty .)
    PRINTVALUES     reduce using rule 56 (case_when_statements -> empty .)
    SIGNAL          reduce using rule 56 (case_when_statements -> empty .)
    VIEWSIGNAL      reduce using rule 56 (case_when_statements -> empty .)
    ALTER           reduce using rule 56 (case_when_statements -> empty .)
    ISTRUE          reduce using rule 56 (case_when_statements -> empty .)
    NUMERO          reduce using rule 56 (case_when_statements -> empty .)
    VARIABLE        reduce using rule 56 (case_when_statements -> empty .)
    LPARENTESIS     reduce using rule 56 (case_when_statements -> empty .)
    PUNTO_COMA      reduce using rule 56 (case_when_statements -> empty .)


state 104

    (57) case_when_statement -> WHEN . value THEN list_statement
    (79) value -> . expression
    (80) value -> . bool
    (81) value -> . return_num_statement
    (82) value -> . return_bool_statement
    (71) expression -> . NUMERO
    (72) expression -> . VARIABLE
    (73) expression -> . LPARENTESIS expression RPARENTESIS
    (74) expression -> . expression + expression
    (75) expression -> . expression - expression
    (76) expression -> . expression * expression
    (77) expression -> . expression / expression
    (52) bool -> . TRUE
    (53) bool -> . FALSE
    (26) return_num_statement -> . viewsignal_statement
    (27) return_num_statement -> . alter_statement
    (28) return_bool_statement -> . condition_statement
    (29) return_bool_statement -> . istrue_statement
    (68) viewsignal_statement -> . VIEWSIGNAL LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA
    (69) viewsignal_statement -> . VIEWSIGNAL LPARENTESIS expression RPARENTESIS PUNTO_COMA
    (70) viewsignal_statement -> . VIEWSIGNAL LPARENTESIS alter_statement RPARENTESIS PUNTO_COMA
    (32) alter_statement -> . ALTER LPARENTESIS VARIABLE COMA operador COMA return_num_statement RPARENTESIS PUNTO_COMA
    (33) alter_statement -> . ALTER LPARENTESIS VARIABLE COMA operador COMA expression RPARENTESIS PUNTO_COMA
    (39) condition_statement -> . expression condition expression
    (40) istrue_statement -> . ISTRUE LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA

    NUMERO          shift and go to state 58
    VARIABLE        shift and go to state 41
    LPARENTESIS     shift and go to state 22
    TRUE            shift and go to state 114
    FALSE           shift and go to state 115
    VIEWSIGNAL      shift and go to state 55
    ALTER           shift and go to state 56
    ISTRUE          shift and go to state 57

    value                          shift and go to state 144
    expression                     shift and go to state 110
    bool                           shift and go to state 111
    return_num_statement           shift and go to state 112
    return_bool_statement          shift and go to state 113
    viewsignal_statement           shift and go to state 52
    alter_statement                shift and go to state 53
    condition_statement            shift and go to state 46
    istrue_statement               shift and go to state 54

state 105

    (60) printvalues_statement -> PRINTVALUES LPARENTESIS list_content_print . RPARENTESIS PUNTO_COMA

    RPARENTESIS     shift and go to state 145


state 106

    (61) list_content_print -> content_print . COMA list_content_print
    (62) list_content_print -> content_print .

    COMA            shift and go to state 146
    RPARENTESIS     reduce using rule 62 (list_content_print -> content_print .)


state 107

    (63) content_print -> STRING .

    COMA            reduce using rule 63 (content_print -> STRING .)
    RPARENTESIS     reduce using rule 63 (content_print -> STRING .)


state 108

    (64) content_print -> VARIABLE .
    (72) expression -> VARIABLE .

  ! reduce/reduce conflict for COMA resolved using rule 64 (content_print -> VARIABLE .)
  ! reduce/reduce conflict for RPARENTESIS resolved using rule 64 (content_print -> VARIABLE .)
    COMA            reduce using rule 64 (content_print -> VARIABLE .)
    RPARENTESIS     reduce using rule 64 (content_print -> VARIABLE .)
    +               reduce using rule 72 (expression -> VARIABLE .)
    -               reduce using rule 72 (expression -> VARIABLE .)
    *               reduce using rule 72 (expression -> VARIABLE .)
    /               reduce using rule 72 (expression -> VARIABLE .)
    MAYOR_QUE       reduce using rule 72 (expression -> VARIABLE .)
    MENOR_QUE       reduce using rule 72 (expression -> VARIABLE .)
    IGUAL           reduce using rule 72 (expression -> VARIABLE .)
    DISTINTO_QUE    reduce using rule 72 (expression -> VARIABLE .)
    MAYOR_IGUAL_QUE reduce using rule 72 (expression -> VARIABLE .)
    MENOR_IGUAL_QUE reduce using rule 72 (expression -> VARIABLE .)

  ! COMA            [ reduce using rule 72 (expression -> VARIABLE .) ]
  ! RPARENTESIS     [ reduce using rule 72 (expression -> VARIABLE .) ]


state 109

    (65) content_print -> value .

    COMA            reduce using rule 65 (content_print -> value .)
    RPARENTESIS     reduce using rule 65 (content_print -> value .)


state 110

    (79) value -> expression .
    (74) expression -> expression . + expression
    (75) expression -> expression . - expression
    (76) expression -> expression . * expression
    (77) expression -> expression . / expression
    (39) condition_statement -> expression . condition expression
    (44) condition -> . MAYOR_QUE
    (45) condition -> . MENOR_QUE
    (46) condition -> . IGUAL
    (47) condition -> . DISTINTO_QUE
    (48) condition -> . MAYOR_IGUAL_QUE
    (49) condition -> . MENOR_IGUAL_QUE

    COMA            reduce using rule 79 (value -> expression .)
    RPARENTESIS     reduce using rule 79 (value -> expression .)
    THEN            reduce using rule 79 (value -> expression .)
    +               shift and go to state 76
    -               shift and go to state 77
    *               shift and go to state 78
    /               shift and go to state 79
    MAYOR_QUE       shift and go to state 80
    MENOR_QUE       shift and go to state 81
    IGUAL           shift and go to state 82
    DISTINTO_QUE    shift and go to state 83
    MAYOR_IGUAL_QUE shift and go to state 84
    MENOR_IGUAL_QUE shift and go to state 85

    condition                      shift and go to state 75

state 111

    (80) value -> bool .

    COMA            reduce using rule 80 (value -> bool .)
    RPARENTESIS     reduce using rule 80 (value -> bool .)
    THEN            reduce using rule 80 (value -> bool .)


state 112

    (81) value -> return_num_statement .

    COMA            reduce using rule 81 (value -> return_num_statement .)
    RPARENTESIS     reduce using rule 81 (value -> return_num_statement .)
    THEN            reduce using rule 81 (value -> return_num_statement .)


state 113

    (82) value -> return_bool_statement .

    COMA            reduce using rule 82 (value -> return_bool_statement .)
    RPARENTESIS     reduce using rule 82 (value -> return_bool_statement .)
    THEN            reduce using rule 82 (value -> return_bool_statement .)


state 114

    (52) bool -> TRUE .

    COMA            reduce using rule 52 (bool -> TRUE .)
    RPARENTESIS     reduce using rule 52 (bool -> TRUE .)
    THEN            reduce using rule 52 (bool -> TRUE .)


state 115

    (53) bool -> FALSE .

    COMA            reduce using rule 53 (bool -> FALSE .)
    RPARENTESIS     reduce using rule 53 (bool -> FALSE .)
    THEN            reduce using rule 53 (bool -> FALSE .)


state 116

    (66) signal_statement -> SIGNAL LPARENTESIS VARIABLE . COMA return_num_statement RPARENTESIS PUNTO_COMA
    (67) signal_statement -> SIGNAL LPARENTESIS VARIABLE . COMA expression RPARENTESIS PUNTO_COMA

    COMA            shift and go to state 147


state 117

    (39) condition_statement -> expression condition expression .
    (74) expression -> expression . + expression
    (75) expression -> expression . - expression
    (76) expression -> expression . * expression
    (77) expression -> expression . / expression

    COMENTARIO      reduce using rule 39 (condition_statement -> expression condition expression .)
    NEW             reduce using rule 39 (condition_statement -> expression condition expression .)
    ALTERB          reduce using rule 39 (condition_statement -> expression condition expression .)
    VALUES          reduce using rule 39 (condition_statement -> expression condition expression .)
    REPEAT          reduce using rule 39 (condition_statement -> expression condition expression .)
    UNTIL           reduce using rule 39 (condition_statement -> expression condition expression .)
    WHILE           reduce using rule 39 (condition_statement -> expression condition expression .)
    CASE            reduce using rule 39 (condition_statement -> expression condition expression .)
    PRINTVALUES     reduce using rule 39 (condition_statement -> expression condition expression .)
    SIGNAL          reduce using rule 39 (condition_statement -> expression condition expression .)
    VIEWSIGNAL      reduce using rule 39 (condition_statement -> expression condition expression .)
    ALTER           reduce using rule 39 (condition_statement -> expression condition expression .)
    ISTRUE          reduce using rule 39 (condition_statement -> expression condition expression .)
    NUMERO          reduce using rule 39 (condition_statement -> expression condition expression .)
    VARIABLE        reduce using rule 39 (condition_statement -> expression condition expression .)
    LPARENTESIS     reduce using rule 39 (condition_statement -> expression condition expression .)
    RPARENTESIS     reduce using rule 39 (condition_statement -> expression condition expression .)
    BREAK           reduce using rule 39 (condition_statement -> expression condition expression .)
    PUNTO_COMA      reduce using rule 39 (condition_statement -> expression condition expression .)
    WHEN            reduce using rule 39 (condition_statement -> expression condition expression .)
    COMA            reduce using rule 39 (condition_statement -> expression condition expression .)
    THEN            reduce using rule 39 (condition_statement -> expression condition expression .)
    +               shift and go to state 76
    -               shift and go to state 77
    *               shift and go to state 78
    /               shift and go to state 79


state 118

    (74) expression -> expression + expression .
    (74) expression -> expression . + expression
    (75) expression -> expression . - expression
    (76) expression -> expression . * expression
    (77) expression -> expression . / expression

  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for / resolved as shift
    MAYOR_QUE       reduce using rule 74 (expression -> expression + expression .)
    MENOR_QUE       reduce using rule 74 (expression -> expression + expression .)
    IGUAL           reduce using rule 74 (expression -> expression + expression .)
    DISTINTO_QUE    reduce using rule 74 (expression -> expression + expression .)
    MAYOR_IGUAL_QUE reduce using rule 74 (expression -> expression + expression .)
    MENOR_IGUAL_QUE reduce using rule 74 (expression -> expression + expression .)
    RPARENTESIS     reduce using rule 74 (expression -> expression + expression .)
    COMA            reduce using rule 74 (expression -> expression + expression .)
    COMENTARIO      reduce using rule 74 (expression -> expression + expression .)
    NEW             reduce using rule 74 (expression -> expression + expression .)
    ALTERB          reduce using rule 74 (expression -> expression + expression .)
    VALUES          reduce using rule 74 (expression -> expression + expression .)
    REPEAT          reduce using rule 74 (expression -> expression + expression .)
    UNTIL           reduce using rule 74 (expression -> expression + expression .)
    WHILE           reduce using rule 74 (expression -> expression + expression .)
    CASE            reduce using rule 74 (expression -> expression + expression .)
    PRINTVALUES     reduce using rule 74 (expression -> expression + expression .)
    SIGNAL          reduce using rule 74 (expression -> expression + expression .)
    VIEWSIGNAL      reduce using rule 74 (expression -> expression + expression .)
    ALTER           reduce using rule 74 (expression -> expression + expression .)
    ISTRUE          reduce using rule 74 (expression -> expression + expression .)
    NUMERO          reduce using rule 74 (expression -> expression + expression .)
    VARIABLE        reduce using rule 74 (expression -> expression + expression .)
    LPARENTESIS     reduce using rule 74 (expression -> expression + expression .)
    BREAK           reduce using rule 74 (expression -> expression + expression .)
    PUNTO_COMA      reduce using rule 74 (expression -> expression + expression .)
    WHEN            reduce using rule 74 (expression -> expression + expression .)
    THEN            reduce using rule 74 (expression -> expression + expression .)
    +               shift and go to state 76
    -               shift and go to state 77
    *               shift and go to state 78
    /               shift and go to state 79

  ! +               [ reduce using rule 74 (expression -> expression + expression .) ]
  ! -               [ reduce using rule 74 (expression -> expression + expression .) ]
  ! *               [ reduce using rule 74 (expression -> expression + expression .) ]
  ! /               [ reduce using rule 74 (expression -> expression + expression .) ]


state 119

    (75) expression -> expression - expression .
    (74) expression -> expression . + expression
    (75) expression -> expression . - expression
    (76) expression -> expression . * expression
    (77) expression -> expression . / expression

  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for / resolved as shift
    MAYOR_QUE       reduce using rule 75 (expression -> expression - expression .)
    MENOR_QUE       reduce using rule 75 (expression -> expression - expression .)
    IGUAL           reduce using rule 75 (expression -> expression - expression .)
    DISTINTO_QUE    reduce using rule 75 (expression -> expression - expression .)
    MAYOR_IGUAL_QUE reduce using rule 75 (expression -> expression - expression .)
    MENOR_IGUAL_QUE reduce using rule 75 (expression -> expression - expression .)
    RPARENTESIS     reduce using rule 75 (expression -> expression - expression .)
    COMA            reduce using rule 75 (expression -> expression - expression .)
    COMENTARIO      reduce using rule 75 (expression -> expression - expression .)
    NEW             reduce using rule 75 (expression -> expression - expression .)
    ALTERB          reduce using rule 75 (expression -> expression - expression .)
    VALUES          reduce using rule 75 (expression -> expression - expression .)
    REPEAT          reduce using rule 75 (expression -> expression - expression .)
    UNTIL           reduce using rule 75 (expression -> expression - expression .)
    WHILE           reduce using rule 75 (expression -> expression - expression .)
    CASE            reduce using rule 75 (expression -> expression - expression .)
    PRINTVALUES     reduce using rule 75 (expression -> expression - expression .)
    SIGNAL          reduce using rule 75 (expression -> expression - expression .)
    VIEWSIGNAL      reduce using rule 75 (expression -> expression - expression .)
    ALTER           reduce using rule 75 (expression -> expression - expression .)
    ISTRUE          reduce using rule 75 (expression -> expression - expression .)
    NUMERO          reduce using rule 75 (expression -> expression - expression .)
    VARIABLE        reduce using rule 75 (expression -> expression - expression .)
    LPARENTESIS     reduce using rule 75 (expression -> expression - expression .)
    BREAK           reduce using rule 75 (expression -> expression - expression .)
    PUNTO_COMA      reduce using rule 75 (expression -> expression - expression .)
    WHEN            reduce using rule 75 (expression -> expression - expression .)
    THEN            reduce using rule 75 (expression -> expression - expression .)
    +               shift and go to state 76
    -               shift and go to state 77
    *               shift and go to state 78
    /               shift and go to state 79

  ! +               [ reduce using rule 75 (expression -> expression - expression .) ]
  ! -               [ reduce using rule 75 (expression -> expression - expression .) ]
  ! *               [ reduce using rule 75 (expression -> expression - expression .) ]
  ! /               [ reduce using rule 75 (expression -> expression - expression .) ]


state 120

    (76) expression -> expression * expression .
    (74) expression -> expression . + expression
    (75) expression -> expression . - expression
    (76) expression -> expression . * expression
    (77) expression -> expression . / expression

  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for / resolved as shift
    MAYOR_QUE       reduce using rule 76 (expression -> expression * expression .)
    MENOR_QUE       reduce using rule 76 (expression -> expression * expression .)
    IGUAL           reduce using rule 76 (expression -> expression * expression .)
    DISTINTO_QUE    reduce using rule 76 (expression -> expression * expression .)
    MAYOR_IGUAL_QUE reduce using rule 76 (expression -> expression * expression .)
    MENOR_IGUAL_QUE reduce using rule 76 (expression -> expression * expression .)
    RPARENTESIS     reduce using rule 76 (expression -> expression * expression .)
    COMA            reduce using rule 76 (expression -> expression * expression .)
    COMENTARIO      reduce using rule 76 (expression -> expression * expression .)
    NEW             reduce using rule 76 (expression -> expression * expression .)
    ALTERB          reduce using rule 76 (expression -> expression * expression .)
    VALUES          reduce using rule 76 (expression -> expression * expression .)
    REPEAT          reduce using rule 76 (expression -> expression * expression .)
    UNTIL           reduce using rule 76 (expression -> expression * expression .)
    WHILE           reduce using rule 76 (expression -> expression * expression .)
    CASE            reduce using rule 76 (expression -> expression * expression .)
    PRINTVALUES     reduce using rule 76 (expression -> expression * expression .)
    SIGNAL          reduce using rule 76 (expression -> expression * expression .)
    VIEWSIGNAL      reduce using rule 76 (expression -> expression * expression .)
    ALTER           reduce using rule 76 (expression -> expression * expression .)
    ISTRUE          reduce using rule 76 (expression -> expression * expression .)
    NUMERO          reduce using rule 76 (expression -> expression * expression .)
    VARIABLE        reduce using rule 76 (expression -> expression * expression .)
    LPARENTESIS     reduce using rule 76 (expression -> expression * expression .)
    BREAK           reduce using rule 76 (expression -> expression * expression .)
    PUNTO_COMA      reduce using rule 76 (expression -> expression * expression .)
    WHEN            reduce using rule 76 (expression -> expression * expression .)
    THEN            reduce using rule 76 (expression -> expression * expression .)
    +               shift and go to state 76
    -               shift and go to state 77
    *               shift and go to state 78
    /               shift and go to state 79

  ! +               [ reduce using rule 76 (expression -> expression * expression .) ]
  ! -               [ reduce using rule 76 (expression -> expression * expression .) ]
  ! *               [ reduce using rule 76 (expression -> expression * expression .) ]
  ! /               [ reduce using rule 76 (expression -> expression * expression .) ]


state 121

    (77) expression -> expression / expression .
    (74) expression -> expression . + expression
    (75) expression -> expression . - expression
    (76) expression -> expression . * expression
    (77) expression -> expression . / expression

  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for / resolved as shift
    MAYOR_QUE       reduce using rule 77 (expression -> expression / expression .)
    MENOR_QUE       reduce using rule 77 (expression -> expression / expression .)
    IGUAL           reduce using rule 77 (expression -> expression / expression .)
    DISTINTO_QUE    reduce using rule 77 (expression -> expression / expression .)
    MAYOR_IGUAL_QUE reduce using rule 77 (expression -> expression / expression .)
    MENOR_IGUAL_QUE reduce using rule 77 (expression -> expression / expression .)
    RPARENTESIS     reduce using rule 77 (expression -> expression / expression .)
    COMA            reduce using rule 77 (expression -> expression / expression .)
    COMENTARIO      reduce using rule 77 (expression -> expression / expression .)
    NEW             reduce using rule 77 (expression -> expression / expression .)
    ALTERB          reduce using rule 77 (expression -> expression / expression .)
    VALUES          reduce using rule 77 (expression -> expression / expression .)
    REPEAT          reduce using rule 77 (expression -> expression / expression .)
    UNTIL           reduce using rule 77 (expression -> expression / expression .)
    WHILE           reduce using rule 77 (expression -> expression / expression .)
    CASE            reduce using rule 77 (expression -> expression / expression .)
    PRINTVALUES     reduce using rule 77 (expression -> expression / expression .)
    SIGNAL          reduce using rule 77 (expression -> expression / expression .)
    VIEWSIGNAL      reduce using rule 77 (expression -> expression / expression .)
    ALTER           reduce using rule 77 (expression -> expression / expression .)
    ISTRUE          reduce using rule 77 (expression -> expression / expression .)
    NUMERO          reduce using rule 77 (expression -> expression / expression .)
    VARIABLE        reduce using rule 77 (expression -> expression / expression .)
    LPARENTESIS     reduce using rule 77 (expression -> expression / expression .)
    BREAK           reduce using rule 77 (expression -> expression / expression .)
    PUNTO_COMA      reduce using rule 77 (expression -> expression / expression .)
    WHEN            reduce using rule 77 (expression -> expression / expression .)
    THEN            reduce using rule 77 (expression -> expression / expression .)
    +               shift and go to state 76
    -               shift and go to state 77
    *               shift and go to state 78
    /               shift and go to state 79

  ! +               [ reduce using rule 77 (expression -> expression / expression .) ]
  ! -               [ reduce using rule 77 (expression -> expression / expression .) ]
  ! *               [ reduce using rule 77 (expression -> expression / expression .) ]
  ! /               [ reduce using rule 77 (expression -> expression / expression .) ]


state 122

    (68) viewsignal_statement -> VIEWSIGNAL LPARENTESIS VARIABLE . RPARENTESIS PUNTO_COMA
    (72) expression -> VARIABLE .

  ! shift/reduce conflict for RPARENTESIS resolved as shift
    RPARENTESIS     shift and go to state 148
    +               reduce using rule 72 (expression -> VARIABLE .)
    -               reduce using rule 72 (expression -> VARIABLE .)
    *               reduce using rule 72 (expression -> VARIABLE .)
    /               reduce using rule 72 (expression -> VARIABLE .)

  ! RPARENTESIS     [ reduce using rule 72 (expression -> VARIABLE .) ]


state 123

    (69) viewsignal_statement -> VIEWSIGNAL LPARENTESIS expression . RPARENTESIS PUNTO_COMA
    (74) expression -> expression . + expression
    (75) expression -> expression . - expression
    (76) expression -> expression . * expression
    (77) expression -> expression . / expression

    RPARENTESIS     shift and go to state 149
    +               shift and go to state 76
    -               shift and go to state 77
    *               shift and go to state 78
    /               shift and go to state 79


state 124

    (70) viewsignal_statement -> VIEWSIGNAL LPARENTESIS alter_statement . RPARENTESIS PUNTO_COMA

    RPARENTESIS     shift and go to state 150


state 125

    (32) alter_statement -> ALTER LPARENTESIS VARIABLE . COMA operador COMA return_num_statement RPARENTESIS PUNTO_COMA
    (33) alter_statement -> ALTER LPARENTESIS VARIABLE . COMA operador COMA expression RPARENTESIS PUNTO_COMA

    COMA            shift and go to state 151


state 126

    (40) istrue_statement -> ISTRUE LPARENTESIS VARIABLE . RPARENTESIS PUNTO_COMA

    RPARENTESIS     shift and go to state 152


state 127

    (6) code_block -> group_proc proc MASTER LPARENTESIS comentario list_statement RPARENTESIS . PUNTO_COMA group_proc

    PUNTO_COMA      shift and go to state 153


state 128

    (8) group_proc -> PROC VARIABLE LPARENTESIS COMENTARIO list_statement RPARENTESIS PUNTO_COMA . group_proc
    (8) group_proc -> . PROC VARIABLE LPARENTESIS COMENTARIO list_statement RPARENTESIS PUNTO_COMA group_proc
    (9) group_proc -> . empty
    (83) empty -> .

  ! shift/reduce conflict for PROC resolved as shift
    PROC            shift and go to state 130
    $end            reduce using rule 83 (empty -> .)

  ! PROC            [ reduce using rule 83 (empty -> .) ]

    group_proc                     shift and go to state 154
    empty                          shift and go to state 10

state 129

    (5) code_block -> proc MASTER LPARENTESIS comentario list_statement RPARENTESIS PUNTO_COMA group_proc .

    $end            reduce using rule 5 (code_block -> proc MASTER LPARENTESIS comentario list_statement RPARENTESIS PUNTO_COMA group_proc .)


state 130

    (8) group_proc -> PROC . VARIABLE LPARENTESIS COMENTARIO list_statement RPARENTESIS PUNTO_COMA group_proc

    VARIABLE        shift and go to state 15


state 131

    (30) new_variable_statement -> NEW VARIABLE COMA LPARENTESIS . DATATYPE COMA value RPARENTESIS PUNTO_COMA

    DATATYPE        shift and go to state 155


state 132

    (38) alterb_statement -> ALTERB LPARENTESIS VARIABLE RPARENTESIS . PUNTO_COMA

    PUNTO_COMA      shift and go to state 156


state 133

    (31) values_statement -> VALUES LPARENTESIS VARIABLE COMA . value RPARENTESIS PUNTO_COMA
    (79) value -> . expression
    (80) value -> . bool
    (81) value -> . return_num_statement
    (82) value -> . return_bool_statement
    (71) expression -> . NUMERO
    (72) expression -> . VARIABLE
    (73) expression -> . LPARENTESIS expression RPARENTESIS
    (74) expression -> . expression + expression
    (75) expression -> . expression - expression
    (76) expression -> . expression * expression
    (77) expression -> . expression / expression
    (52) bool -> . TRUE
    (53) bool -> . FALSE
    (26) return_num_statement -> . viewsignal_statement
    (27) return_num_statement -> . alter_statement
    (28) return_bool_statement -> . condition_statement
    (29) return_bool_statement -> . istrue_statement
    (68) viewsignal_statement -> . VIEWSIGNAL LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA
    (69) viewsignal_statement -> . VIEWSIGNAL LPARENTESIS expression RPARENTESIS PUNTO_COMA
    (70) viewsignal_statement -> . VIEWSIGNAL LPARENTESIS alter_statement RPARENTESIS PUNTO_COMA
    (32) alter_statement -> . ALTER LPARENTESIS VARIABLE COMA operador COMA return_num_statement RPARENTESIS PUNTO_COMA
    (33) alter_statement -> . ALTER LPARENTESIS VARIABLE COMA operador COMA expression RPARENTESIS PUNTO_COMA
    (39) condition_statement -> . expression condition expression
    (40) istrue_statement -> . ISTRUE LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA

    NUMERO          shift and go to state 58
    VARIABLE        shift and go to state 41
    LPARENTESIS     shift and go to state 22
    TRUE            shift and go to state 114
    FALSE           shift and go to state 115
    VIEWSIGNAL      shift and go to state 55
    ALTER           shift and go to state 56
    ISTRUE          shift and go to state 57

    value                          shift and go to state 157
    expression                     shift and go to state 110
    bool                           shift and go to state 111
    return_num_statement           shift and go to state 112
    return_bool_statement          shift and go to state 113
    viewsignal_statement           shift and go to state 52
    alter_statement                shift and go to state 53
    condition_statement            shift and go to state 46
    istrue_statement               shift and go to state 54

state 134

    (41) repeat_statement -> REPEAT LPARENTESIS list_statement break_statement . RPARENTESIS PUNTO_COMA

    RPARENTESIS     shift and go to state 158


state 135

    (42) break_statement -> BREAK . PUNTO_COMA

    PUNTO_COMA      shift and go to state 159


state 136

    (43) until_statement -> UNTIL LPARENTESIS list_statement RPARENTESIS . condition_statement PUNTO_COMA
    (39) condition_statement -> . expression condition expression
    (71) expression -> . NUMERO
    (72) expression -> . VARIABLE
    (73) expression -> . LPARENTESIS expression RPARENTESIS
    (74) expression -> . expression + expression
    (75) expression -> . expression - expression
    (76) expression -> . expression * expression
    (77) expression -> . expression / expression

    NUMERO          shift and go to state 58
    VARIABLE        shift and go to state 41
    LPARENTESIS     shift and go to state 22

    condition_statement            shift and go to state 160
    expression                     shift and go to state 51

state 137

    (50) while_statement -> WHILE condition_statement LPARENTESIS list_statement . RPARENTESIS PUNTO_COMA

    RPARENTESIS     shift and go to state 161


state 138

    (51) while_statement -> WHILE istrue LPARENTESIS list_statement . RPARENTESIS PUNTO_COMA

    RPARENTESIS     shift and go to state 162


state 139

    (78) istrue -> ISTRUE LPARENTESIS VARIABLE . RPARENTESIS

    RPARENTESIS     shift and go to state 163


state 140

    (54) case_statement -> CASE VARIABLE case_when_statements else_statement . PUNTO_COMA

    PUNTO_COMA      shift and go to state 164


state 141

    (58) else_statement -> list_statement .

    PUNTO_COMA      reduce using rule 58 (else_statement -> list_statement .)


state 142

    (59) else_statement -> empty .
    (12) list_statement -> empty .

  ! reduce/reduce conflict for PUNTO_COMA resolved using rule 12 (list_statement -> empty .)
    PUNTO_COMA      reduce using rule 12 (list_statement -> empty .)

  ! PUNTO_COMA      [ reduce using rule 59 (else_statement -> empty .) ]


state 143

    (55) case_when_statements -> case_when_statement case_when_statements .

    COMENTARIO      reduce using rule 55 (case_when_statements -> case_when_statement case_when_statements .)
    NEW             reduce using rule 55 (case_when_statements -> case_when_statement case_when_statements .)
    ALTERB          reduce using rule 55 (case_when_statements -> case_when_statement case_when_statements .)
    VALUES          reduce using rule 55 (case_when_statements -> case_when_statement case_when_statements .)
    REPEAT          reduce using rule 55 (case_when_statements -> case_when_statement case_when_statements .)
    UNTIL           reduce using rule 55 (case_when_statements -> case_when_statement case_when_statements .)
    WHILE           reduce using rule 55 (case_when_statements -> case_when_statement case_when_statements .)
    CASE            reduce using rule 55 (case_when_statements -> case_when_statement case_when_statements .)
    PRINTVALUES     reduce using rule 55 (case_when_statements -> case_when_statement case_when_statements .)
    SIGNAL          reduce using rule 55 (case_when_statements -> case_when_statement case_when_statements .)
    VIEWSIGNAL      reduce using rule 55 (case_when_statements -> case_when_statement case_when_statements .)
    ALTER           reduce using rule 55 (case_when_statements -> case_when_statement case_when_statements .)
    ISTRUE          reduce using rule 55 (case_when_statements -> case_when_statement case_when_statements .)
    NUMERO          reduce using rule 55 (case_when_statements -> case_when_statement case_when_statements .)
    VARIABLE        reduce using rule 55 (case_when_statements -> case_when_statement case_when_statements .)
    LPARENTESIS     reduce using rule 55 (case_when_statements -> case_when_statement case_when_statements .)
    PUNTO_COMA      reduce using rule 55 (case_when_statements -> case_when_statement case_when_statements .)


state 144

    (57) case_when_statement -> WHEN value . THEN list_statement

    THEN            shift and go to state 165


state 145

    (60) printvalues_statement -> PRINTVALUES LPARENTESIS list_content_print RPARENTESIS . PUNTO_COMA

    PUNTO_COMA      shift and go to state 166


state 146

    (61) list_content_print -> content_print COMA . list_content_print
    (61) list_content_print -> . content_print COMA list_content_print
    (62) list_content_print -> . content_print
    (63) content_print -> . STRING
    (64) content_print -> . VARIABLE
    (65) content_print -> . value
    (79) value -> . expression
    (80) value -> . bool
    (81) value -> . return_num_statement
    (82) value -> . return_bool_statement
    (71) expression -> . NUMERO
    (72) expression -> . VARIABLE
    (73) expression -> . LPARENTESIS expression RPARENTESIS
    (74) expression -> . expression + expression
    (75) expression -> . expression - expression
    (76) expression -> . expression * expression
    (77) expression -> . expression / expression
    (52) bool -> . TRUE
    (53) bool -> . FALSE
    (26) return_num_statement -> . viewsignal_statement
    (27) return_num_statement -> . alter_statement
    (28) return_bool_statement -> . condition_statement
    (29) return_bool_statement -> . istrue_statement
    (68) viewsignal_statement -> . VIEWSIGNAL LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA
    (69) viewsignal_statement -> . VIEWSIGNAL LPARENTESIS expression RPARENTESIS PUNTO_COMA
    (70) viewsignal_statement -> . VIEWSIGNAL LPARENTESIS alter_statement RPARENTESIS PUNTO_COMA
    (32) alter_statement -> . ALTER LPARENTESIS VARIABLE COMA operador COMA return_num_statement RPARENTESIS PUNTO_COMA
    (33) alter_statement -> . ALTER LPARENTESIS VARIABLE COMA operador COMA expression RPARENTESIS PUNTO_COMA
    (39) condition_statement -> . expression condition expression
    (40) istrue_statement -> . ISTRUE LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA

    STRING          shift and go to state 107
    VARIABLE        shift and go to state 108
    NUMERO          shift and go to state 58
    LPARENTESIS     shift and go to state 22
    TRUE            shift and go to state 114
    FALSE           shift and go to state 115
    VIEWSIGNAL      shift and go to state 55
    ALTER           shift and go to state 56
    ISTRUE          shift and go to state 57

    content_print                  shift and go to state 106
    list_content_print             shift and go to state 167
    value                          shift and go to state 109
    expression                     shift and go to state 110
    bool                           shift and go to state 111
    return_num_statement           shift and go to state 112
    return_bool_statement          shift and go to state 113
    viewsignal_statement           shift and go to state 52
    alter_statement                shift and go to state 53
    condition_statement            shift and go to state 46
    istrue_statement               shift and go to state 54

state 147

    (66) signal_statement -> SIGNAL LPARENTESIS VARIABLE COMA . return_num_statement RPARENTESIS PUNTO_COMA
    (67) signal_statement -> SIGNAL LPARENTESIS VARIABLE COMA . expression RPARENTESIS PUNTO_COMA
    (26) return_num_statement -> . viewsignal_statement
    (27) return_num_statement -> . alter_statement
    (71) expression -> . NUMERO
    (72) expression -> . VARIABLE
    (73) expression -> . LPARENTESIS expression RPARENTESIS
    (74) expression -> . expression + expression
    (75) expression -> . expression - expression
    (76) expression -> . expression * expression
    (77) expression -> . expression / expression
    (68) viewsignal_statement -> . VIEWSIGNAL LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA
    (69) viewsignal_statement -> . VIEWSIGNAL LPARENTESIS expression RPARENTESIS PUNTO_COMA
    (70) viewsignal_statement -> . VIEWSIGNAL LPARENTESIS alter_statement RPARENTESIS PUNTO_COMA
    (32) alter_statement -> . ALTER LPARENTESIS VARIABLE COMA operador COMA return_num_statement RPARENTESIS PUNTO_COMA
    (33) alter_statement -> . ALTER LPARENTESIS VARIABLE COMA operador COMA expression RPARENTESIS PUNTO_COMA

    NUMERO          shift and go to state 58
    VARIABLE        shift and go to state 41
    LPARENTESIS     shift and go to state 22
    VIEWSIGNAL      shift and go to state 55
    ALTER           shift and go to state 56

    return_num_statement           shift and go to state 168
    expression                     shift and go to state 169
    viewsignal_statement           shift and go to state 52
    alter_statement                shift and go to state 53

state 148

    (68) viewsignal_statement -> VIEWSIGNAL LPARENTESIS VARIABLE RPARENTESIS . PUNTO_COMA

    PUNTO_COMA      shift and go to state 170


state 149

    (69) viewsignal_statement -> VIEWSIGNAL LPARENTESIS expression RPARENTESIS . PUNTO_COMA

    PUNTO_COMA      shift and go to state 171


state 150

    (70) viewsignal_statement -> VIEWSIGNAL LPARENTESIS alter_statement RPARENTESIS . PUNTO_COMA

    PUNTO_COMA      shift and go to state 172


state 151

    (32) alter_statement -> ALTER LPARENTESIS VARIABLE COMA . operador COMA return_num_statement RPARENTESIS PUNTO_COMA
    (33) alter_statement -> ALTER LPARENTESIS VARIABLE COMA . operador COMA expression RPARENTESIS PUNTO_COMA
    (34) operador -> . ADD
    (35) operador -> . SUB
    (36) operador -> . MUL
    (37) operador -> . DIV

    ADD             shift and go to state 174
    SUB             shift and go to state 175
    MUL             shift and go to state 176
    DIV             shift and go to state 177

    operador                       shift and go to state 173

state 152

    (40) istrue_statement -> ISTRUE LPARENTESIS VARIABLE RPARENTESIS . PUNTO_COMA

    PUNTO_COMA      shift and go to state 178


state 153

    (6) code_block -> group_proc proc MASTER LPARENTESIS comentario list_statement RPARENTESIS PUNTO_COMA . group_proc
    (8) group_proc -> . PROC VARIABLE LPARENTESIS COMENTARIO list_statement RPARENTESIS PUNTO_COMA group_proc
    (9) group_proc -> . empty
    (83) empty -> .

    PROC            shift and go to state 130
    $end            reduce using rule 83 (empty -> .)

    group_proc                     shift and go to state 179
    empty                          shift and go to state 10

state 154

    (8) group_proc -> PROC VARIABLE LPARENTESIS COMENTARIO list_statement RPARENTESIS PUNTO_COMA group_proc .

    PROC            reduce using rule 8 (group_proc -> PROC VARIABLE LPARENTESIS COMENTARIO list_statement RPARENTESIS PUNTO_COMA group_proc .)
    $end            reduce using rule 8 (group_proc -> PROC VARIABLE LPARENTESIS COMENTARIO list_statement RPARENTESIS PUNTO_COMA group_proc .)


state 155

    (30) new_variable_statement -> NEW VARIABLE COMA LPARENTESIS DATATYPE . COMA value RPARENTESIS PUNTO_COMA

    COMA            shift and go to state 180


state 156

    (38) alterb_statement -> ALTERB LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .

    COMENTARIO      reduce using rule 38 (alterb_statement -> ALTERB LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    NEW             reduce using rule 38 (alterb_statement -> ALTERB LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    ALTERB          reduce using rule 38 (alterb_statement -> ALTERB LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    VALUES          reduce using rule 38 (alterb_statement -> ALTERB LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    REPEAT          reduce using rule 38 (alterb_statement -> ALTERB LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    UNTIL           reduce using rule 38 (alterb_statement -> ALTERB LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    WHILE           reduce using rule 38 (alterb_statement -> ALTERB LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    CASE            reduce using rule 38 (alterb_statement -> ALTERB LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    PRINTVALUES     reduce using rule 38 (alterb_statement -> ALTERB LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    SIGNAL          reduce using rule 38 (alterb_statement -> ALTERB LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    VIEWSIGNAL      reduce using rule 38 (alterb_statement -> ALTERB LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    ALTER           reduce using rule 38 (alterb_statement -> ALTERB LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    ISTRUE          reduce using rule 38 (alterb_statement -> ALTERB LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    NUMERO          reduce using rule 38 (alterb_statement -> ALTERB LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    VARIABLE        reduce using rule 38 (alterb_statement -> ALTERB LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    LPARENTESIS     reduce using rule 38 (alterb_statement -> ALTERB LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    RPARENTESIS     reduce using rule 38 (alterb_statement -> ALTERB LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    BREAK           reduce using rule 38 (alterb_statement -> ALTERB LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    PUNTO_COMA      reduce using rule 38 (alterb_statement -> ALTERB LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    WHEN            reduce using rule 38 (alterb_statement -> ALTERB LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)


state 157

    (31) values_statement -> VALUES LPARENTESIS VARIABLE COMA value . RPARENTESIS PUNTO_COMA

    RPARENTESIS     shift and go to state 181


state 158

    (41) repeat_statement -> REPEAT LPARENTESIS list_statement break_statement RPARENTESIS . PUNTO_COMA

    PUNTO_COMA      shift and go to state 182


state 159

    (42) break_statement -> BREAK PUNTO_COMA .

    RPARENTESIS     reduce using rule 42 (break_statement -> BREAK PUNTO_COMA .)


state 160

    (43) until_statement -> UNTIL LPARENTESIS list_statement RPARENTESIS condition_statement . PUNTO_COMA

    PUNTO_COMA      shift and go to state 183


state 161

    (50) while_statement -> WHILE condition_statement LPARENTESIS list_statement RPARENTESIS . PUNTO_COMA

    PUNTO_COMA      shift and go to state 184


state 162

    (51) while_statement -> WHILE istrue LPARENTESIS list_statement RPARENTESIS . PUNTO_COMA

    PUNTO_COMA      shift and go to state 185


state 163

    (78) istrue -> ISTRUE LPARENTESIS VARIABLE RPARENTESIS .

    LPARENTESIS     reduce using rule 78 (istrue -> ISTRUE LPARENTESIS VARIABLE RPARENTESIS .)


state 164

    (54) case_statement -> CASE VARIABLE case_when_statements else_statement PUNTO_COMA .

    COMENTARIO      reduce using rule 54 (case_statement -> CASE VARIABLE case_when_statements else_statement PUNTO_COMA .)
    NEW             reduce using rule 54 (case_statement -> CASE VARIABLE case_when_statements else_statement PUNTO_COMA .)
    ALTERB          reduce using rule 54 (case_statement -> CASE VARIABLE case_when_statements else_statement PUNTO_COMA .)
    VALUES          reduce using rule 54 (case_statement -> CASE VARIABLE case_when_statements else_statement PUNTO_COMA .)
    REPEAT          reduce using rule 54 (case_statement -> CASE VARIABLE case_when_statements else_statement PUNTO_COMA .)
    UNTIL           reduce using rule 54 (case_statement -> CASE VARIABLE case_when_statements else_statement PUNTO_COMA .)
    WHILE           reduce using rule 54 (case_statement -> CASE VARIABLE case_when_statements else_statement PUNTO_COMA .)
    CASE            reduce using rule 54 (case_statement -> CASE VARIABLE case_when_statements else_statement PUNTO_COMA .)
    PRINTVALUES     reduce using rule 54 (case_statement -> CASE VARIABLE case_when_statements else_statement PUNTO_COMA .)
    SIGNAL          reduce using rule 54 (case_statement -> CASE VARIABLE case_when_statements else_statement PUNTO_COMA .)
    VIEWSIGNAL      reduce using rule 54 (case_statement -> CASE VARIABLE case_when_statements else_statement PUNTO_COMA .)
    ALTER           reduce using rule 54 (case_statement -> CASE VARIABLE case_when_statements else_statement PUNTO_COMA .)
    ISTRUE          reduce using rule 54 (case_statement -> CASE VARIABLE case_when_statements else_statement PUNTO_COMA .)
    NUMERO          reduce using rule 54 (case_statement -> CASE VARIABLE case_when_statements else_statement PUNTO_COMA .)
    VARIABLE        reduce using rule 54 (case_statement -> CASE VARIABLE case_when_statements else_statement PUNTO_COMA .)
    LPARENTESIS     reduce using rule 54 (case_statement -> CASE VARIABLE case_when_statements else_statement PUNTO_COMA .)
    RPARENTESIS     reduce using rule 54 (case_statement -> CASE VARIABLE case_when_statements else_statement PUNTO_COMA .)
    BREAK           reduce using rule 54 (case_statement -> CASE VARIABLE case_when_statements else_statement PUNTO_COMA .)
    PUNTO_COMA      reduce using rule 54 (case_statement -> CASE VARIABLE case_when_statements else_statement PUNTO_COMA .)
    WHEN            reduce using rule 54 (case_statement -> CASE VARIABLE case_when_statements else_statement PUNTO_COMA .)


state 165

    (57) case_when_statement -> WHEN value THEN . list_statement
    (10) list_statement -> . statement list_statement
    (11) list_statement -> . comentario
    (12) list_statement -> . empty
    (13) statement -> . no_return_statement
    (14) statement -> . return_statement
    (4) comentario -> . COMENTARIO
    (83) empty -> .
    (15) no_return_statement -> . new_variable_statement
    (16) no_return_statement -> . alterb_statement
    (17) no_return_statement -> . values_statement
    (18) no_return_statement -> . repeat_statement
    (19) no_return_statement -> . until_statement
    (20) no_return_statement -> . while_statement
    (21) no_return_statement -> . case_statement
    (22) no_return_statement -> . printvalues_statement
    (23) no_return_statement -> . signal_statement
    (24) return_statement -> . return_num_statement
    (25) return_statement -> . return_bool_statement
    (30) new_variable_statement -> . NEW VARIABLE COMA LPARENTESIS DATATYPE COMA value RPARENTESIS PUNTO_COMA
    (38) alterb_statement -> . ALTERB LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA
    (31) values_statement -> . VALUES LPARENTESIS VARIABLE COMA value RPARENTESIS PUNTO_COMA
    (41) repeat_statement -> . REPEAT LPARENTESIS list_statement break_statement RPARENTESIS PUNTO_COMA
    (43) until_statement -> . UNTIL LPARENTESIS list_statement RPARENTESIS condition_statement PUNTO_COMA
    (50) while_statement -> . WHILE condition_statement LPARENTESIS list_statement RPARENTESIS PUNTO_COMA
    (51) while_statement -> . WHILE istrue LPARENTESIS list_statement RPARENTESIS PUNTO_COMA
    (54) case_statement -> . CASE VARIABLE case_when_statements else_statement PUNTO_COMA
    (60) printvalues_statement -> . PRINTVALUES LPARENTESIS list_content_print RPARENTESIS PUNTO_COMA
    (66) signal_statement -> . SIGNAL LPARENTESIS VARIABLE COMA return_num_statement RPARENTESIS PUNTO_COMA
    (67) signal_statement -> . SIGNAL LPARENTESIS VARIABLE COMA expression RPARENTESIS PUNTO_COMA
    (26) return_num_statement -> . viewsignal_statement
    (27) return_num_statement -> . alter_statement
    (28) return_bool_statement -> . condition_statement
    (29) return_bool_statement -> . istrue_statement
    (68) viewsignal_statement -> . VIEWSIGNAL LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA
    (69) viewsignal_statement -> . VIEWSIGNAL LPARENTESIS expression RPARENTESIS PUNTO_COMA
    (70) viewsignal_statement -> . VIEWSIGNAL LPARENTESIS alter_statement RPARENTESIS PUNTO_COMA
    (32) alter_statement -> . ALTER LPARENTESIS VARIABLE COMA operador COMA return_num_statement RPARENTESIS PUNTO_COMA
    (33) alter_statement -> . ALTER LPARENTESIS VARIABLE COMA operador COMA expression RPARENTESIS PUNTO_COMA
    (39) condition_statement -> . expression condition expression
    (40) istrue_statement -> . ISTRUE LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA
    (71) expression -> . NUMERO
    (72) expression -> . VARIABLE
    (73) expression -> . LPARENTESIS expression RPARENTESIS
    (74) expression -> . expression + expression
    (75) expression -> . expression - expression
    (76) expression -> . expression * expression
    (77) expression -> . expression / expression

  ! shift/reduce conflict for COMENTARIO resolved as shift
  ! shift/reduce conflict for NEW resolved as shift
  ! shift/reduce conflict for ALTERB resolved as shift
  ! shift/reduce conflict for VALUES resolved as shift
  ! shift/reduce conflict for REPEAT resolved as shift
  ! shift/reduce conflict for UNTIL resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for PRINTVALUES resolved as shift
  ! shift/reduce conflict for SIGNAL resolved as shift
  ! shift/reduce conflict for VIEWSIGNAL resolved as shift
  ! shift/reduce conflict for ALTER resolved as shift
  ! shift/reduce conflict for ISTRUE resolved as shift
  ! shift/reduce conflict for NUMERO resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for LPARENTESIS resolved as shift
    COMENTARIO      shift and go to state 5
    WHEN            reduce using rule 83 (empty -> .)
    PUNTO_COMA      reduce using rule 83 (empty -> .)
    NEW             shift and go to state 40
    ALTERB          shift and go to state 42
    VALUES          shift and go to state 43
    REPEAT          shift and go to state 44
    UNTIL           shift and go to state 45
    WHILE           shift and go to state 47
    CASE            shift and go to state 48
    PRINTVALUES     shift and go to state 49
    SIGNAL          shift and go to state 50
    VIEWSIGNAL      shift and go to state 55
    ALTER           shift and go to state 56
    ISTRUE          shift and go to state 57
    NUMERO          shift and go to state 58
    VARIABLE        shift and go to state 41
    LPARENTESIS     shift and go to state 22

  ! COMENTARIO      [ reduce using rule 83 (empty -> .) ]
  ! NEW             [ reduce using rule 83 (empty -> .) ]
  ! ALTERB          [ reduce using rule 83 (empty -> .) ]
  ! VALUES          [ reduce using rule 83 (empty -> .) ]
  ! REPEAT          [ reduce using rule 83 (empty -> .) ]
  ! UNTIL           [ reduce using rule 83 (empty -> .) ]
  ! WHILE           [ reduce using rule 83 (empty -> .) ]
  ! CASE            [ reduce using rule 83 (empty -> .) ]
  ! PRINTVALUES     [ reduce using rule 83 (empty -> .) ]
  ! SIGNAL          [ reduce using rule 83 (empty -> .) ]
  ! VIEWSIGNAL      [ reduce using rule 83 (empty -> .) ]
  ! ALTER           [ reduce using rule 83 (empty -> .) ]
  ! ISTRUE          [ reduce using rule 83 (empty -> .) ]
  ! NUMERO          [ reduce using rule 83 (empty -> .) ]
  ! VARIABLE        [ reduce using rule 83 (empty -> .) ]
  ! LPARENTESIS     [ reduce using rule 83 (empty -> .) ]

    list_statement                 shift and go to state 186
    statement                      shift and go to state 25
    comentario                     shift and go to state 23
    empty                          shift and go to state 26
    no_return_statement            shift and go to state 27
    return_statement               shift and go to state 28
    new_variable_statement         shift and go to state 29
    alterb_statement               shift and go to state 30
    values_statement               shift and go to state 31
    repeat_statement               shift and go to state 32
    until_statement                shift and go to state 33
    while_statement                shift and go to state 34
    case_statement                 shift and go to state 35
    printvalues_statement          shift and go to state 36
    signal_statement               shift and go to state 37
    return_num_statement           shift and go to state 38
    return_bool_statement          shift and go to state 39
    condition_statement            shift and go to state 46
    expression                     shift and go to state 51
    viewsignal_statement           shift and go to state 52
    alter_statement                shift and go to state 53
    istrue_statement               shift and go to state 54

state 166

    (60) printvalues_statement -> PRINTVALUES LPARENTESIS list_content_print RPARENTESIS PUNTO_COMA .

    COMENTARIO      reduce using rule 60 (printvalues_statement -> PRINTVALUES LPARENTESIS list_content_print RPARENTESIS PUNTO_COMA .)
    NEW             reduce using rule 60 (printvalues_statement -> PRINTVALUES LPARENTESIS list_content_print RPARENTESIS PUNTO_COMA .)
    ALTERB          reduce using rule 60 (printvalues_statement -> PRINTVALUES LPARENTESIS list_content_print RPARENTESIS PUNTO_COMA .)
    VALUES          reduce using rule 60 (printvalues_statement -> PRINTVALUES LPARENTESIS list_content_print RPARENTESIS PUNTO_COMA .)
    REPEAT          reduce using rule 60 (printvalues_statement -> PRINTVALUES LPARENTESIS list_content_print RPARENTESIS PUNTO_COMA .)
    UNTIL           reduce using rule 60 (printvalues_statement -> PRINTVALUES LPARENTESIS list_content_print RPARENTESIS PUNTO_COMA .)
    WHILE           reduce using rule 60 (printvalues_statement -> PRINTVALUES LPARENTESIS list_content_print RPARENTESIS PUNTO_COMA .)
    CASE            reduce using rule 60 (printvalues_statement -> PRINTVALUES LPARENTESIS list_content_print RPARENTESIS PUNTO_COMA .)
    PRINTVALUES     reduce using rule 60 (printvalues_statement -> PRINTVALUES LPARENTESIS list_content_print RPARENTESIS PUNTO_COMA .)
    SIGNAL          reduce using rule 60 (printvalues_statement -> PRINTVALUES LPARENTESIS list_content_print RPARENTESIS PUNTO_COMA .)
    VIEWSIGNAL      reduce using rule 60 (printvalues_statement -> PRINTVALUES LPARENTESIS list_content_print RPARENTESIS PUNTO_COMA .)
    ALTER           reduce using rule 60 (printvalues_statement -> PRINTVALUES LPARENTESIS list_content_print RPARENTESIS PUNTO_COMA .)
    ISTRUE          reduce using rule 60 (printvalues_statement -> PRINTVALUES LPARENTESIS list_content_print RPARENTESIS PUNTO_COMA .)
    NUMERO          reduce using rule 60 (printvalues_statement -> PRINTVALUES LPARENTESIS list_content_print RPARENTESIS PUNTO_COMA .)
    VARIABLE        reduce using rule 60 (printvalues_statement -> PRINTVALUES LPARENTESIS list_content_print RPARENTESIS PUNTO_COMA .)
    LPARENTESIS     reduce using rule 60 (printvalues_statement -> PRINTVALUES LPARENTESIS list_content_print RPARENTESIS PUNTO_COMA .)
    RPARENTESIS     reduce using rule 60 (printvalues_statement -> PRINTVALUES LPARENTESIS list_content_print RPARENTESIS PUNTO_COMA .)
    BREAK           reduce using rule 60 (printvalues_statement -> PRINTVALUES LPARENTESIS list_content_print RPARENTESIS PUNTO_COMA .)
    PUNTO_COMA      reduce using rule 60 (printvalues_statement -> PRINTVALUES LPARENTESIS list_content_print RPARENTESIS PUNTO_COMA .)
    WHEN            reduce using rule 60 (printvalues_statement -> PRINTVALUES LPARENTESIS list_content_print RPARENTESIS PUNTO_COMA .)


state 167

    (61) list_content_print -> content_print COMA list_content_print .

    RPARENTESIS     reduce using rule 61 (list_content_print -> content_print COMA list_content_print .)


state 168

    (66) signal_statement -> SIGNAL LPARENTESIS VARIABLE COMA return_num_statement . RPARENTESIS PUNTO_COMA

    RPARENTESIS     shift and go to state 187


state 169

    (67) signal_statement -> SIGNAL LPARENTESIS VARIABLE COMA expression . RPARENTESIS PUNTO_COMA
    (74) expression -> expression . + expression
    (75) expression -> expression . - expression
    (76) expression -> expression . * expression
    (77) expression -> expression . / expression

    RPARENTESIS     shift and go to state 188
    +               shift and go to state 76
    -               shift and go to state 77
    *               shift and go to state 78
    /               shift and go to state 79


state 170

    (68) viewsignal_statement -> VIEWSIGNAL LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .

    COMENTARIO      reduce using rule 68 (viewsignal_statement -> VIEWSIGNAL LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    NEW             reduce using rule 68 (viewsignal_statement -> VIEWSIGNAL LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    ALTERB          reduce using rule 68 (viewsignal_statement -> VIEWSIGNAL LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    VALUES          reduce using rule 68 (viewsignal_statement -> VIEWSIGNAL LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    REPEAT          reduce using rule 68 (viewsignal_statement -> VIEWSIGNAL LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    UNTIL           reduce using rule 68 (viewsignal_statement -> VIEWSIGNAL LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    WHILE           reduce using rule 68 (viewsignal_statement -> VIEWSIGNAL LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    CASE            reduce using rule 68 (viewsignal_statement -> VIEWSIGNAL LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    PRINTVALUES     reduce using rule 68 (viewsignal_statement -> VIEWSIGNAL LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    SIGNAL          reduce using rule 68 (viewsignal_statement -> VIEWSIGNAL LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    VIEWSIGNAL      reduce using rule 68 (viewsignal_statement -> VIEWSIGNAL LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    ALTER           reduce using rule 68 (viewsignal_statement -> VIEWSIGNAL LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    ISTRUE          reduce using rule 68 (viewsignal_statement -> VIEWSIGNAL LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    NUMERO          reduce using rule 68 (viewsignal_statement -> VIEWSIGNAL LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    VARIABLE        reduce using rule 68 (viewsignal_statement -> VIEWSIGNAL LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    LPARENTESIS     reduce using rule 68 (viewsignal_statement -> VIEWSIGNAL LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    RPARENTESIS     reduce using rule 68 (viewsignal_statement -> VIEWSIGNAL LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    BREAK           reduce using rule 68 (viewsignal_statement -> VIEWSIGNAL LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    PUNTO_COMA      reduce using rule 68 (viewsignal_statement -> VIEWSIGNAL LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    WHEN            reduce using rule 68 (viewsignal_statement -> VIEWSIGNAL LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    COMA            reduce using rule 68 (viewsignal_statement -> VIEWSIGNAL LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    THEN            reduce using rule 68 (viewsignal_statement -> VIEWSIGNAL LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)


state 171

    (69) viewsignal_statement -> VIEWSIGNAL LPARENTESIS expression RPARENTESIS PUNTO_COMA .

    COMENTARIO      reduce using rule 69 (viewsignal_statement -> VIEWSIGNAL LPARENTESIS expression RPARENTESIS PUNTO_COMA .)
    NEW             reduce using rule 69 (viewsignal_statement -> VIEWSIGNAL LPARENTESIS expression RPARENTESIS PUNTO_COMA .)
    ALTERB          reduce using rule 69 (viewsignal_statement -> VIEWSIGNAL LPARENTESIS expression RPARENTESIS PUNTO_COMA .)
    VALUES          reduce using rule 69 (viewsignal_statement -> VIEWSIGNAL LPARENTESIS expression RPARENTESIS PUNTO_COMA .)
    REPEAT          reduce using rule 69 (viewsignal_statement -> VIEWSIGNAL LPARENTESIS expression RPARENTESIS PUNTO_COMA .)
    UNTIL           reduce using rule 69 (viewsignal_statement -> VIEWSIGNAL LPARENTESIS expression RPARENTESIS PUNTO_COMA .)
    WHILE           reduce using rule 69 (viewsignal_statement -> VIEWSIGNAL LPARENTESIS expression RPARENTESIS PUNTO_COMA .)
    CASE            reduce using rule 69 (viewsignal_statement -> VIEWSIGNAL LPARENTESIS expression RPARENTESIS PUNTO_COMA .)
    PRINTVALUES     reduce using rule 69 (viewsignal_statement -> VIEWSIGNAL LPARENTESIS expression RPARENTESIS PUNTO_COMA .)
    SIGNAL          reduce using rule 69 (viewsignal_statement -> VIEWSIGNAL LPARENTESIS expression RPARENTESIS PUNTO_COMA .)
    VIEWSIGNAL      reduce using rule 69 (viewsignal_statement -> VIEWSIGNAL LPARENTESIS expression RPARENTESIS PUNTO_COMA .)
    ALTER           reduce using rule 69 (viewsignal_statement -> VIEWSIGNAL LPARENTESIS expression RPARENTESIS PUNTO_COMA .)
    ISTRUE          reduce using rule 69 (viewsignal_statement -> VIEWSIGNAL LPARENTESIS expression RPARENTESIS PUNTO_COMA .)
    NUMERO          reduce using rule 69 (viewsignal_statement -> VIEWSIGNAL LPARENTESIS expression RPARENTESIS PUNTO_COMA .)
    VARIABLE        reduce using rule 69 (viewsignal_statement -> VIEWSIGNAL LPARENTESIS expression RPARENTESIS PUNTO_COMA .)
    LPARENTESIS     reduce using rule 69 (viewsignal_statement -> VIEWSIGNAL LPARENTESIS expression RPARENTESIS PUNTO_COMA .)
    RPARENTESIS     reduce using rule 69 (viewsignal_statement -> VIEWSIGNAL LPARENTESIS expression RPARENTESIS PUNTO_COMA .)
    BREAK           reduce using rule 69 (viewsignal_statement -> VIEWSIGNAL LPARENTESIS expression RPARENTESIS PUNTO_COMA .)
    PUNTO_COMA      reduce using rule 69 (viewsignal_statement -> VIEWSIGNAL LPARENTESIS expression RPARENTESIS PUNTO_COMA .)
    WHEN            reduce using rule 69 (viewsignal_statement -> VIEWSIGNAL LPARENTESIS expression RPARENTESIS PUNTO_COMA .)
    COMA            reduce using rule 69 (viewsignal_statement -> VIEWSIGNAL LPARENTESIS expression RPARENTESIS PUNTO_COMA .)
    THEN            reduce using rule 69 (viewsignal_statement -> VIEWSIGNAL LPARENTESIS expression RPARENTESIS PUNTO_COMA .)


state 172

    (70) viewsignal_statement -> VIEWSIGNAL LPARENTESIS alter_statement RPARENTESIS PUNTO_COMA .

    COMENTARIO      reduce using rule 70 (viewsignal_statement -> VIEWSIGNAL LPARENTESIS alter_statement RPARENTESIS PUNTO_COMA .)
    NEW             reduce using rule 70 (viewsignal_statement -> VIEWSIGNAL LPARENTESIS alter_statement RPARENTESIS PUNTO_COMA .)
    ALTERB          reduce using rule 70 (viewsignal_statement -> VIEWSIGNAL LPARENTESIS alter_statement RPARENTESIS PUNTO_COMA .)
    VALUES          reduce using rule 70 (viewsignal_statement -> VIEWSIGNAL LPARENTESIS alter_statement RPARENTESIS PUNTO_COMA .)
    REPEAT          reduce using rule 70 (viewsignal_statement -> VIEWSIGNAL LPARENTESIS alter_statement RPARENTESIS PUNTO_COMA .)
    UNTIL           reduce using rule 70 (viewsignal_statement -> VIEWSIGNAL LPARENTESIS alter_statement RPARENTESIS PUNTO_COMA .)
    WHILE           reduce using rule 70 (viewsignal_statement -> VIEWSIGNAL LPARENTESIS alter_statement RPARENTESIS PUNTO_COMA .)
    CASE            reduce using rule 70 (viewsignal_statement -> VIEWSIGNAL LPARENTESIS alter_statement RPARENTESIS PUNTO_COMA .)
    PRINTVALUES     reduce using rule 70 (viewsignal_statement -> VIEWSIGNAL LPARENTESIS alter_statement RPARENTESIS PUNTO_COMA .)
    SIGNAL          reduce using rule 70 (viewsignal_statement -> VIEWSIGNAL LPARENTESIS alter_statement RPARENTESIS PUNTO_COMA .)
    VIEWSIGNAL      reduce using rule 70 (viewsignal_statement -> VIEWSIGNAL LPARENTESIS alter_statement RPARENTESIS PUNTO_COMA .)
    ALTER           reduce using rule 70 (viewsignal_statement -> VIEWSIGNAL LPARENTESIS alter_statement RPARENTESIS PUNTO_COMA .)
    ISTRUE          reduce using rule 70 (viewsignal_statement -> VIEWSIGNAL LPARENTESIS alter_statement RPARENTESIS PUNTO_COMA .)
    NUMERO          reduce using rule 70 (viewsignal_statement -> VIEWSIGNAL LPARENTESIS alter_statement RPARENTESIS PUNTO_COMA .)
    VARIABLE        reduce using rule 70 (viewsignal_statement -> VIEWSIGNAL LPARENTESIS alter_statement RPARENTESIS PUNTO_COMA .)
    LPARENTESIS     reduce using rule 70 (viewsignal_statement -> VIEWSIGNAL LPARENTESIS alter_statement RPARENTESIS PUNTO_COMA .)
    RPARENTESIS     reduce using rule 70 (viewsignal_statement -> VIEWSIGNAL LPARENTESIS alter_statement RPARENTESIS PUNTO_COMA .)
    BREAK           reduce using rule 70 (viewsignal_statement -> VIEWSIGNAL LPARENTESIS alter_statement RPARENTESIS PUNTO_COMA .)
    PUNTO_COMA      reduce using rule 70 (viewsignal_statement -> VIEWSIGNAL LPARENTESIS alter_statement RPARENTESIS PUNTO_COMA .)
    WHEN            reduce using rule 70 (viewsignal_statement -> VIEWSIGNAL LPARENTESIS alter_statement RPARENTESIS PUNTO_COMA .)
    COMA            reduce using rule 70 (viewsignal_statement -> VIEWSIGNAL LPARENTESIS alter_statement RPARENTESIS PUNTO_COMA .)
    THEN            reduce using rule 70 (viewsignal_statement -> VIEWSIGNAL LPARENTESIS alter_statement RPARENTESIS PUNTO_COMA .)


state 173

    (32) alter_statement -> ALTER LPARENTESIS VARIABLE COMA operador . COMA return_num_statement RPARENTESIS PUNTO_COMA
    (33) alter_statement -> ALTER LPARENTESIS VARIABLE COMA operador . COMA expression RPARENTESIS PUNTO_COMA

    COMA            shift and go to state 189


state 174

    (34) operador -> ADD .

    COMA            reduce using rule 34 (operador -> ADD .)


state 175

    (35) operador -> SUB .

    COMA            reduce using rule 35 (operador -> SUB .)


state 176

    (36) operador -> MUL .

    COMA            reduce using rule 36 (operador -> MUL .)


state 177

    (37) operador -> DIV .

    COMA            reduce using rule 37 (operador -> DIV .)


state 178

    (40) istrue_statement -> ISTRUE LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .

    COMENTARIO      reduce using rule 40 (istrue_statement -> ISTRUE LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    NEW             reduce using rule 40 (istrue_statement -> ISTRUE LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    ALTERB          reduce using rule 40 (istrue_statement -> ISTRUE LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    VALUES          reduce using rule 40 (istrue_statement -> ISTRUE LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    REPEAT          reduce using rule 40 (istrue_statement -> ISTRUE LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    UNTIL           reduce using rule 40 (istrue_statement -> ISTRUE LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    WHILE           reduce using rule 40 (istrue_statement -> ISTRUE LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    CASE            reduce using rule 40 (istrue_statement -> ISTRUE LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    PRINTVALUES     reduce using rule 40 (istrue_statement -> ISTRUE LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    SIGNAL          reduce using rule 40 (istrue_statement -> ISTRUE LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    VIEWSIGNAL      reduce using rule 40 (istrue_statement -> ISTRUE LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    ALTER           reduce using rule 40 (istrue_statement -> ISTRUE LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    ISTRUE          reduce using rule 40 (istrue_statement -> ISTRUE LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    NUMERO          reduce using rule 40 (istrue_statement -> ISTRUE LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    VARIABLE        reduce using rule 40 (istrue_statement -> ISTRUE LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    LPARENTESIS     reduce using rule 40 (istrue_statement -> ISTRUE LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    RPARENTESIS     reduce using rule 40 (istrue_statement -> ISTRUE LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    BREAK           reduce using rule 40 (istrue_statement -> ISTRUE LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    PUNTO_COMA      reduce using rule 40 (istrue_statement -> ISTRUE LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    WHEN            reduce using rule 40 (istrue_statement -> ISTRUE LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    COMA            reduce using rule 40 (istrue_statement -> ISTRUE LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)
    THEN            reduce using rule 40 (istrue_statement -> ISTRUE LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA .)


state 179

    (6) code_block -> group_proc proc MASTER LPARENTESIS comentario list_statement RPARENTESIS PUNTO_COMA group_proc .

    $end            reduce using rule 6 (code_block -> group_proc proc MASTER LPARENTESIS comentario list_statement RPARENTESIS PUNTO_COMA group_proc .)


state 180

    (30) new_variable_statement -> NEW VARIABLE COMA LPARENTESIS DATATYPE COMA . value RPARENTESIS PUNTO_COMA
    (79) value -> . expression
    (80) value -> . bool
    (81) value -> . return_num_statement
    (82) value -> . return_bool_statement
    (71) expression -> . NUMERO
    (72) expression -> . VARIABLE
    (73) expression -> . LPARENTESIS expression RPARENTESIS
    (74) expression -> . expression + expression
    (75) expression -> . expression - expression
    (76) expression -> . expression * expression
    (77) expression -> . expression / expression
    (52) bool -> . TRUE
    (53) bool -> . FALSE
    (26) return_num_statement -> . viewsignal_statement
    (27) return_num_statement -> . alter_statement
    (28) return_bool_statement -> . condition_statement
    (29) return_bool_statement -> . istrue_statement
    (68) viewsignal_statement -> . VIEWSIGNAL LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA
    (69) viewsignal_statement -> . VIEWSIGNAL LPARENTESIS expression RPARENTESIS PUNTO_COMA
    (70) viewsignal_statement -> . VIEWSIGNAL LPARENTESIS alter_statement RPARENTESIS PUNTO_COMA
    (32) alter_statement -> . ALTER LPARENTESIS VARIABLE COMA operador COMA return_num_statement RPARENTESIS PUNTO_COMA
    (33) alter_statement -> . ALTER LPARENTESIS VARIABLE COMA operador COMA expression RPARENTESIS PUNTO_COMA
    (39) condition_statement -> . expression condition expression
    (40) istrue_statement -> . ISTRUE LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA

    NUMERO          shift and go to state 58
    VARIABLE        shift and go to state 41
    LPARENTESIS     shift and go to state 22
    TRUE            shift and go to state 114
    FALSE           shift and go to state 115
    VIEWSIGNAL      shift and go to state 55
    ALTER           shift and go to state 56
    ISTRUE          shift and go to state 57

    value                          shift and go to state 190
    expression                     shift and go to state 110
    bool                           shift and go to state 111
    return_num_statement           shift and go to state 112
    return_bool_statement          shift and go to state 113
    viewsignal_statement           shift and go to state 52
    alter_statement                shift and go to state 53
    condition_statement            shift and go to state 46
    istrue_statement               shift and go to state 54

state 181

    (31) values_statement -> VALUES LPARENTESIS VARIABLE COMA value RPARENTESIS . PUNTO_COMA

    PUNTO_COMA      shift and go to state 191


state 182

    (41) repeat_statement -> REPEAT LPARENTESIS list_statement break_statement RPARENTESIS PUNTO_COMA .

    COMENTARIO      reduce using rule 41 (repeat_statement -> REPEAT LPARENTESIS list_statement break_statement RPARENTESIS PUNTO_COMA .)
    NEW             reduce using rule 41 (repeat_statement -> REPEAT LPARENTESIS list_statement break_statement RPARENTESIS PUNTO_COMA .)
    ALTERB          reduce using rule 41 (repeat_statement -> REPEAT LPARENTESIS list_statement break_statement RPARENTESIS PUNTO_COMA .)
    VALUES          reduce using rule 41 (repeat_statement -> REPEAT LPARENTESIS list_statement break_statement RPARENTESIS PUNTO_COMA .)
    REPEAT          reduce using rule 41 (repeat_statement -> REPEAT LPARENTESIS list_statement break_statement RPARENTESIS PUNTO_COMA .)
    UNTIL           reduce using rule 41 (repeat_statement -> REPEAT LPARENTESIS list_statement break_statement RPARENTESIS PUNTO_COMA .)
    WHILE           reduce using rule 41 (repeat_statement -> REPEAT LPARENTESIS list_statement break_statement RPARENTESIS PUNTO_COMA .)
    CASE            reduce using rule 41 (repeat_statement -> REPEAT LPARENTESIS list_statement break_statement RPARENTESIS PUNTO_COMA .)
    PRINTVALUES     reduce using rule 41 (repeat_statement -> REPEAT LPARENTESIS list_statement break_statement RPARENTESIS PUNTO_COMA .)
    SIGNAL          reduce using rule 41 (repeat_statement -> REPEAT LPARENTESIS list_statement break_statement RPARENTESIS PUNTO_COMA .)
    VIEWSIGNAL      reduce using rule 41 (repeat_statement -> REPEAT LPARENTESIS list_statement break_statement RPARENTESIS PUNTO_COMA .)
    ALTER           reduce using rule 41 (repeat_statement -> REPEAT LPARENTESIS list_statement break_statement RPARENTESIS PUNTO_COMA .)
    ISTRUE          reduce using rule 41 (repeat_statement -> REPEAT LPARENTESIS list_statement break_statement RPARENTESIS PUNTO_COMA .)
    NUMERO          reduce using rule 41 (repeat_statement -> REPEAT LPARENTESIS list_statement break_statement RPARENTESIS PUNTO_COMA .)
    VARIABLE        reduce using rule 41 (repeat_statement -> REPEAT LPARENTESIS list_statement break_statement RPARENTESIS PUNTO_COMA .)
    LPARENTESIS     reduce using rule 41 (repeat_statement -> REPEAT LPARENTESIS list_statement break_statement RPARENTESIS PUNTO_COMA .)
    RPARENTESIS     reduce using rule 41 (repeat_statement -> REPEAT LPARENTESIS list_statement break_statement RPARENTESIS PUNTO_COMA .)
    BREAK           reduce using rule 41 (repeat_statement -> REPEAT LPARENTESIS list_statement break_statement RPARENTESIS PUNTO_COMA .)
    PUNTO_COMA      reduce using rule 41 (repeat_statement -> REPEAT LPARENTESIS list_statement break_statement RPARENTESIS PUNTO_COMA .)
    WHEN            reduce using rule 41 (repeat_statement -> REPEAT LPARENTESIS list_statement break_statement RPARENTESIS PUNTO_COMA .)


state 183

    (43) until_statement -> UNTIL LPARENTESIS list_statement RPARENTESIS condition_statement PUNTO_COMA .

    COMENTARIO      reduce using rule 43 (until_statement -> UNTIL LPARENTESIS list_statement RPARENTESIS condition_statement PUNTO_COMA .)
    NEW             reduce using rule 43 (until_statement -> UNTIL LPARENTESIS list_statement RPARENTESIS condition_statement PUNTO_COMA .)
    ALTERB          reduce using rule 43 (until_statement -> UNTIL LPARENTESIS list_statement RPARENTESIS condition_statement PUNTO_COMA .)
    VALUES          reduce using rule 43 (until_statement -> UNTIL LPARENTESIS list_statement RPARENTESIS condition_statement PUNTO_COMA .)
    REPEAT          reduce using rule 43 (until_statement -> UNTIL LPARENTESIS list_statement RPARENTESIS condition_statement PUNTO_COMA .)
    UNTIL           reduce using rule 43 (until_statement -> UNTIL LPARENTESIS list_statement RPARENTESIS condition_statement PUNTO_COMA .)
    WHILE           reduce using rule 43 (until_statement -> UNTIL LPARENTESIS list_statement RPARENTESIS condition_statement PUNTO_COMA .)
    CASE            reduce using rule 43 (until_statement -> UNTIL LPARENTESIS list_statement RPARENTESIS condition_statement PUNTO_COMA .)
    PRINTVALUES     reduce using rule 43 (until_statement -> UNTIL LPARENTESIS list_statement RPARENTESIS condition_statement PUNTO_COMA .)
    SIGNAL          reduce using rule 43 (until_statement -> UNTIL LPARENTESIS list_statement RPARENTESIS condition_statement PUNTO_COMA .)
    VIEWSIGNAL      reduce using rule 43 (until_statement -> UNTIL LPARENTESIS list_statement RPARENTESIS condition_statement PUNTO_COMA .)
    ALTER           reduce using rule 43 (until_statement -> UNTIL LPARENTESIS list_statement RPARENTESIS condition_statement PUNTO_COMA .)
    ISTRUE          reduce using rule 43 (until_statement -> UNTIL LPARENTESIS list_statement RPARENTESIS condition_statement PUNTO_COMA .)
    NUMERO          reduce using rule 43 (until_statement -> UNTIL LPARENTESIS list_statement RPARENTESIS condition_statement PUNTO_COMA .)
    VARIABLE        reduce using rule 43 (until_statement -> UNTIL LPARENTESIS list_statement RPARENTESIS condition_statement PUNTO_COMA .)
    LPARENTESIS     reduce using rule 43 (until_statement -> UNTIL LPARENTESIS list_statement RPARENTESIS condition_statement PUNTO_COMA .)
    RPARENTESIS     reduce using rule 43 (until_statement -> UNTIL LPARENTESIS list_statement RPARENTESIS condition_statement PUNTO_COMA .)
    BREAK           reduce using rule 43 (until_statement -> UNTIL LPARENTESIS list_statement RPARENTESIS condition_statement PUNTO_COMA .)
    PUNTO_COMA      reduce using rule 43 (until_statement -> UNTIL LPARENTESIS list_statement RPARENTESIS condition_statement PUNTO_COMA .)
    WHEN            reduce using rule 43 (until_statement -> UNTIL LPARENTESIS list_statement RPARENTESIS condition_statement PUNTO_COMA .)


state 184

    (50) while_statement -> WHILE condition_statement LPARENTESIS list_statement RPARENTESIS PUNTO_COMA .

    COMENTARIO      reduce using rule 50 (while_statement -> WHILE condition_statement LPARENTESIS list_statement RPARENTESIS PUNTO_COMA .)
    NEW             reduce using rule 50 (while_statement -> WHILE condition_statement LPARENTESIS list_statement RPARENTESIS PUNTO_COMA .)
    ALTERB          reduce using rule 50 (while_statement -> WHILE condition_statement LPARENTESIS list_statement RPARENTESIS PUNTO_COMA .)
    VALUES          reduce using rule 50 (while_statement -> WHILE condition_statement LPARENTESIS list_statement RPARENTESIS PUNTO_COMA .)
    REPEAT          reduce using rule 50 (while_statement -> WHILE condition_statement LPARENTESIS list_statement RPARENTESIS PUNTO_COMA .)
    UNTIL           reduce using rule 50 (while_statement -> WHILE condition_statement LPARENTESIS list_statement RPARENTESIS PUNTO_COMA .)
    WHILE           reduce using rule 50 (while_statement -> WHILE condition_statement LPARENTESIS list_statement RPARENTESIS PUNTO_COMA .)
    CASE            reduce using rule 50 (while_statement -> WHILE condition_statement LPARENTESIS list_statement RPARENTESIS PUNTO_COMA .)
    PRINTVALUES     reduce using rule 50 (while_statement -> WHILE condition_statement LPARENTESIS list_statement RPARENTESIS PUNTO_COMA .)
    SIGNAL          reduce using rule 50 (while_statement -> WHILE condition_statement LPARENTESIS list_statement RPARENTESIS PUNTO_COMA .)
    VIEWSIGNAL      reduce using rule 50 (while_statement -> WHILE condition_statement LPARENTESIS list_statement RPARENTESIS PUNTO_COMA .)
    ALTER           reduce using rule 50 (while_statement -> WHILE condition_statement LPARENTESIS list_statement RPARENTESIS PUNTO_COMA .)
    ISTRUE          reduce using rule 50 (while_statement -> WHILE condition_statement LPARENTESIS list_statement RPARENTESIS PUNTO_COMA .)
    NUMERO          reduce using rule 50 (while_statement -> WHILE condition_statement LPARENTESIS list_statement RPARENTESIS PUNTO_COMA .)
    VARIABLE        reduce using rule 50 (while_statement -> WHILE condition_statement LPARENTESIS list_statement RPARENTESIS PUNTO_COMA .)
    LPARENTESIS     reduce using rule 50 (while_statement -> WHILE condition_statement LPARENTESIS list_statement RPARENTESIS PUNTO_COMA .)
    RPARENTESIS     reduce using rule 50 (while_statement -> WHILE condition_statement LPARENTESIS list_statement RPARENTESIS PUNTO_COMA .)
    BREAK           reduce using rule 50 (while_statement -> WHILE condition_statement LPARENTESIS list_statement RPARENTESIS PUNTO_COMA .)
    PUNTO_COMA      reduce using rule 50 (while_statement -> WHILE condition_statement LPARENTESIS list_statement RPARENTESIS PUNTO_COMA .)
    WHEN            reduce using rule 50 (while_statement -> WHILE condition_statement LPARENTESIS list_statement RPARENTESIS PUNTO_COMA .)


state 185

    (51) while_statement -> WHILE istrue LPARENTESIS list_statement RPARENTESIS PUNTO_COMA .

    COMENTARIO      reduce using rule 51 (while_statement -> WHILE istrue LPARENTESIS list_statement RPARENTESIS PUNTO_COMA .)
    NEW             reduce using rule 51 (while_statement -> WHILE istrue LPARENTESIS list_statement RPARENTESIS PUNTO_COMA .)
    ALTERB          reduce using rule 51 (while_statement -> WHILE istrue LPARENTESIS list_statement RPARENTESIS PUNTO_COMA .)
    VALUES          reduce using rule 51 (while_statement -> WHILE istrue LPARENTESIS list_statement RPARENTESIS PUNTO_COMA .)
    REPEAT          reduce using rule 51 (while_statement -> WHILE istrue LPARENTESIS list_statement RPARENTESIS PUNTO_COMA .)
    UNTIL           reduce using rule 51 (while_statement -> WHILE istrue LPARENTESIS list_statement RPARENTESIS PUNTO_COMA .)
    WHILE           reduce using rule 51 (while_statement -> WHILE istrue LPARENTESIS list_statement RPARENTESIS PUNTO_COMA .)
    CASE            reduce using rule 51 (while_statement -> WHILE istrue LPARENTESIS list_statement RPARENTESIS PUNTO_COMA .)
    PRINTVALUES     reduce using rule 51 (while_statement -> WHILE istrue LPARENTESIS list_statement RPARENTESIS PUNTO_COMA .)
    SIGNAL          reduce using rule 51 (while_statement -> WHILE istrue LPARENTESIS list_statement RPARENTESIS PUNTO_COMA .)
    VIEWSIGNAL      reduce using rule 51 (while_statement -> WHILE istrue LPARENTESIS list_statement RPARENTESIS PUNTO_COMA .)
    ALTER           reduce using rule 51 (while_statement -> WHILE istrue LPARENTESIS list_statement RPARENTESIS PUNTO_COMA .)
    ISTRUE          reduce using rule 51 (while_statement -> WHILE istrue LPARENTESIS list_statement RPARENTESIS PUNTO_COMA .)
    NUMERO          reduce using rule 51 (while_statement -> WHILE istrue LPARENTESIS list_statement RPARENTESIS PUNTO_COMA .)
    VARIABLE        reduce using rule 51 (while_statement -> WHILE istrue LPARENTESIS list_statement RPARENTESIS PUNTO_COMA .)
    LPARENTESIS     reduce using rule 51 (while_statement -> WHILE istrue LPARENTESIS list_statement RPARENTESIS PUNTO_COMA .)
    RPARENTESIS     reduce using rule 51 (while_statement -> WHILE istrue LPARENTESIS list_statement RPARENTESIS PUNTO_COMA .)
    BREAK           reduce using rule 51 (while_statement -> WHILE istrue LPARENTESIS list_statement RPARENTESIS PUNTO_COMA .)
    PUNTO_COMA      reduce using rule 51 (while_statement -> WHILE istrue LPARENTESIS list_statement RPARENTESIS PUNTO_COMA .)
    WHEN            reduce using rule 51 (while_statement -> WHILE istrue LPARENTESIS list_statement RPARENTESIS PUNTO_COMA .)


state 186

    (57) case_when_statement -> WHEN value THEN list_statement .

    WHEN            reduce using rule 57 (case_when_statement -> WHEN value THEN list_statement .)
    COMENTARIO      reduce using rule 57 (case_when_statement -> WHEN value THEN list_statement .)
    NEW             reduce using rule 57 (case_when_statement -> WHEN value THEN list_statement .)
    ALTERB          reduce using rule 57 (case_when_statement -> WHEN value THEN list_statement .)
    VALUES          reduce using rule 57 (case_when_statement -> WHEN value THEN list_statement .)
    REPEAT          reduce using rule 57 (case_when_statement -> WHEN value THEN list_statement .)
    UNTIL           reduce using rule 57 (case_when_statement -> WHEN value THEN list_statement .)
    WHILE           reduce using rule 57 (case_when_statement -> WHEN value THEN list_statement .)
    CASE            reduce using rule 57 (case_when_statement -> WHEN value THEN list_statement .)
    PRINTVALUES     reduce using rule 57 (case_when_statement -> WHEN value THEN list_statement .)
    SIGNAL          reduce using rule 57 (case_when_statement -> WHEN value THEN list_statement .)
    VIEWSIGNAL      reduce using rule 57 (case_when_statement -> WHEN value THEN list_statement .)
    ALTER           reduce using rule 57 (case_when_statement -> WHEN value THEN list_statement .)
    ISTRUE          reduce using rule 57 (case_when_statement -> WHEN value THEN list_statement .)
    NUMERO          reduce using rule 57 (case_when_statement -> WHEN value THEN list_statement .)
    VARIABLE        reduce using rule 57 (case_when_statement -> WHEN value THEN list_statement .)
    LPARENTESIS     reduce using rule 57 (case_when_statement -> WHEN value THEN list_statement .)
    PUNTO_COMA      reduce using rule 57 (case_when_statement -> WHEN value THEN list_statement .)


state 187

    (66) signal_statement -> SIGNAL LPARENTESIS VARIABLE COMA return_num_statement RPARENTESIS . PUNTO_COMA

    PUNTO_COMA      shift and go to state 192


state 188

    (67) signal_statement -> SIGNAL LPARENTESIS VARIABLE COMA expression RPARENTESIS . PUNTO_COMA

    PUNTO_COMA      shift and go to state 193


state 189

    (32) alter_statement -> ALTER LPARENTESIS VARIABLE COMA operador COMA . return_num_statement RPARENTESIS PUNTO_COMA
    (33) alter_statement -> ALTER LPARENTESIS VARIABLE COMA operador COMA . expression RPARENTESIS PUNTO_COMA
    (26) return_num_statement -> . viewsignal_statement
    (27) return_num_statement -> . alter_statement
    (71) expression -> . NUMERO
    (72) expression -> . VARIABLE
    (73) expression -> . LPARENTESIS expression RPARENTESIS
    (74) expression -> . expression + expression
    (75) expression -> . expression - expression
    (76) expression -> . expression * expression
    (77) expression -> . expression / expression
    (68) viewsignal_statement -> . VIEWSIGNAL LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA
    (69) viewsignal_statement -> . VIEWSIGNAL LPARENTESIS expression RPARENTESIS PUNTO_COMA
    (70) viewsignal_statement -> . VIEWSIGNAL LPARENTESIS alter_statement RPARENTESIS PUNTO_COMA
    (32) alter_statement -> . ALTER LPARENTESIS VARIABLE COMA operador COMA return_num_statement RPARENTESIS PUNTO_COMA
    (33) alter_statement -> . ALTER LPARENTESIS VARIABLE COMA operador COMA expression RPARENTESIS PUNTO_COMA

    NUMERO          shift and go to state 58
    VARIABLE        shift and go to state 41
    LPARENTESIS     shift and go to state 22
    VIEWSIGNAL      shift and go to state 55
    ALTER           shift and go to state 56

    return_num_statement           shift and go to state 194
    expression                     shift and go to state 195
    viewsignal_statement           shift and go to state 52
    alter_statement                shift and go to state 53

state 190

    (30) new_variable_statement -> NEW VARIABLE COMA LPARENTESIS DATATYPE COMA value . RPARENTESIS PUNTO_COMA

    RPARENTESIS     shift and go to state 196


state 191

    (31) values_statement -> VALUES LPARENTESIS VARIABLE COMA value RPARENTESIS PUNTO_COMA .

    COMENTARIO      reduce using rule 31 (values_statement -> VALUES LPARENTESIS VARIABLE COMA value RPARENTESIS PUNTO_COMA .)
    NEW             reduce using rule 31 (values_statement -> VALUES LPARENTESIS VARIABLE COMA value RPARENTESIS PUNTO_COMA .)
    ALTERB          reduce using rule 31 (values_statement -> VALUES LPARENTESIS VARIABLE COMA value RPARENTESIS PUNTO_COMA .)
    VALUES          reduce using rule 31 (values_statement -> VALUES LPARENTESIS VARIABLE COMA value RPARENTESIS PUNTO_COMA .)
    REPEAT          reduce using rule 31 (values_statement -> VALUES LPARENTESIS VARIABLE COMA value RPARENTESIS PUNTO_COMA .)
    UNTIL           reduce using rule 31 (values_statement -> VALUES LPARENTESIS VARIABLE COMA value RPARENTESIS PUNTO_COMA .)
    WHILE           reduce using rule 31 (values_statement -> VALUES LPARENTESIS VARIABLE COMA value RPARENTESIS PUNTO_COMA .)
    CASE            reduce using rule 31 (values_statement -> VALUES LPARENTESIS VARIABLE COMA value RPARENTESIS PUNTO_COMA .)
    PRINTVALUES     reduce using rule 31 (values_statement -> VALUES LPARENTESIS VARIABLE COMA value RPARENTESIS PUNTO_COMA .)
    SIGNAL          reduce using rule 31 (values_statement -> VALUES LPARENTESIS VARIABLE COMA value RPARENTESIS PUNTO_COMA .)
    VIEWSIGNAL      reduce using rule 31 (values_statement -> VALUES LPARENTESIS VARIABLE COMA value RPARENTESIS PUNTO_COMA .)
    ALTER           reduce using rule 31 (values_statement -> VALUES LPARENTESIS VARIABLE COMA value RPARENTESIS PUNTO_COMA .)
    ISTRUE          reduce using rule 31 (values_statement -> VALUES LPARENTESIS VARIABLE COMA value RPARENTESIS PUNTO_COMA .)
    NUMERO          reduce using rule 31 (values_statement -> VALUES LPARENTESIS VARIABLE COMA value RPARENTESIS PUNTO_COMA .)
    VARIABLE        reduce using rule 31 (values_statement -> VALUES LPARENTESIS VARIABLE COMA value RPARENTESIS PUNTO_COMA .)
    LPARENTESIS     reduce using rule 31 (values_statement -> VALUES LPARENTESIS VARIABLE COMA value RPARENTESIS PUNTO_COMA .)
    RPARENTESIS     reduce using rule 31 (values_statement -> VALUES LPARENTESIS VARIABLE COMA value RPARENTESIS PUNTO_COMA .)
    BREAK           reduce using rule 31 (values_statement -> VALUES LPARENTESIS VARIABLE COMA value RPARENTESIS PUNTO_COMA .)
    PUNTO_COMA      reduce using rule 31 (values_statement -> VALUES LPARENTESIS VARIABLE COMA value RPARENTESIS PUNTO_COMA .)
    WHEN            reduce using rule 31 (values_statement -> VALUES LPARENTESIS VARIABLE COMA value RPARENTESIS PUNTO_COMA .)


state 192

    (66) signal_statement -> SIGNAL LPARENTESIS VARIABLE COMA return_num_statement RPARENTESIS PUNTO_COMA .

    COMENTARIO      reduce using rule 66 (signal_statement -> SIGNAL LPARENTESIS VARIABLE COMA return_num_statement RPARENTESIS PUNTO_COMA .)
    NEW             reduce using rule 66 (signal_statement -> SIGNAL LPARENTESIS VARIABLE COMA return_num_statement RPARENTESIS PUNTO_COMA .)
    ALTERB          reduce using rule 66 (signal_statement -> SIGNAL LPARENTESIS VARIABLE COMA return_num_statement RPARENTESIS PUNTO_COMA .)
    VALUES          reduce using rule 66 (signal_statement -> SIGNAL LPARENTESIS VARIABLE COMA return_num_statement RPARENTESIS PUNTO_COMA .)
    REPEAT          reduce using rule 66 (signal_statement -> SIGNAL LPARENTESIS VARIABLE COMA return_num_statement RPARENTESIS PUNTO_COMA .)
    UNTIL           reduce using rule 66 (signal_statement -> SIGNAL LPARENTESIS VARIABLE COMA return_num_statement RPARENTESIS PUNTO_COMA .)
    WHILE           reduce using rule 66 (signal_statement -> SIGNAL LPARENTESIS VARIABLE COMA return_num_statement RPARENTESIS PUNTO_COMA .)
    CASE            reduce using rule 66 (signal_statement -> SIGNAL LPARENTESIS VARIABLE COMA return_num_statement RPARENTESIS PUNTO_COMA .)
    PRINTVALUES     reduce using rule 66 (signal_statement -> SIGNAL LPARENTESIS VARIABLE COMA return_num_statement RPARENTESIS PUNTO_COMA .)
    SIGNAL          reduce using rule 66 (signal_statement -> SIGNAL LPARENTESIS VARIABLE COMA return_num_statement RPARENTESIS PUNTO_COMA .)
    VIEWSIGNAL      reduce using rule 66 (signal_statement -> SIGNAL LPARENTESIS VARIABLE COMA return_num_statement RPARENTESIS PUNTO_COMA .)
    ALTER           reduce using rule 66 (signal_statement -> SIGNAL LPARENTESIS VARIABLE COMA return_num_statement RPARENTESIS PUNTO_COMA .)
    ISTRUE          reduce using rule 66 (signal_statement -> SIGNAL LPARENTESIS VARIABLE COMA return_num_statement RPARENTESIS PUNTO_COMA .)
    NUMERO          reduce using rule 66 (signal_statement -> SIGNAL LPARENTESIS VARIABLE COMA return_num_statement RPARENTESIS PUNTO_COMA .)
    VARIABLE        reduce using rule 66 (signal_statement -> SIGNAL LPARENTESIS VARIABLE COMA return_num_statement RPARENTESIS PUNTO_COMA .)
    LPARENTESIS     reduce using rule 66 (signal_statement -> SIGNAL LPARENTESIS VARIABLE COMA return_num_statement RPARENTESIS PUNTO_COMA .)
    RPARENTESIS     reduce using rule 66 (signal_statement -> SIGNAL LPARENTESIS VARIABLE COMA return_num_statement RPARENTESIS PUNTO_COMA .)
    BREAK           reduce using rule 66 (signal_statement -> SIGNAL LPARENTESIS VARIABLE COMA return_num_statement RPARENTESIS PUNTO_COMA .)
    PUNTO_COMA      reduce using rule 66 (signal_statement -> SIGNAL LPARENTESIS VARIABLE COMA return_num_statement RPARENTESIS PUNTO_COMA .)
    WHEN            reduce using rule 66 (signal_statement -> SIGNAL LPARENTESIS VARIABLE COMA return_num_statement RPARENTESIS PUNTO_COMA .)


state 193

    (67) signal_statement -> SIGNAL LPARENTESIS VARIABLE COMA expression RPARENTESIS PUNTO_COMA .

    COMENTARIO      reduce using rule 67 (signal_statement -> SIGNAL LPARENTESIS VARIABLE COMA expression RPARENTESIS PUNTO_COMA .)
    NEW             reduce using rule 67 (signal_statement -> SIGNAL LPARENTESIS VARIABLE COMA expression RPARENTESIS PUNTO_COMA .)
    ALTERB          reduce using rule 67 (signal_statement -> SIGNAL LPARENTESIS VARIABLE COMA expression RPARENTESIS PUNTO_COMA .)
    VALUES          reduce using rule 67 (signal_statement -> SIGNAL LPARENTESIS VARIABLE COMA expression RPARENTESIS PUNTO_COMA .)
    REPEAT          reduce using rule 67 (signal_statement -> SIGNAL LPARENTESIS VARIABLE COMA expression RPARENTESIS PUNTO_COMA .)
    UNTIL           reduce using rule 67 (signal_statement -> SIGNAL LPARENTESIS VARIABLE COMA expression RPARENTESIS PUNTO_COMA .)
    WHILE           reduce using rule 67 (signal_statement -> SIGNAL LPARENTESIS VARIABLE COMA expression RPARENTESIS PUNTO_COMA .)
    CASE            reduce using rule 67 (signal_statement -> SIGNAL LPARENTESIS VARIABLE COMA expression RPARENTESIS PUNTO_COMA .)
    PRINTVALUES     reduce using rule 67 (signal_statement -> SIGNAL LPARENTESIS VARIABLE COMA expression RPARENTESIS PUNTO_COMA .)
    SIGNAL          reduce using rule 67 (signal_statement -> SIGNAL LPARENTESIS VARIABLE COMA expression RPARENTESIS PUNTO_COMA .)
    VIEWSIGNAL      reduce using rule 67 (signal_statement -> SIGNAL LPARENTESIS VARIABLE COMA expression RPARENTESIS PUNTO_COMA .)
    ALTER           reduce using rule 67 (signal_statement -> SIGNAL LPARENTESIS VARIABLE COMA expression RPARENTESIS PUNTO_COMA .)
    ISTRUE          reduce using rule 67 (signal_statement -> SIGNAL LPARENTESIS VARIABLE COMA expression RPARENTESIS PUNTO_COMA .)
    NUMERO          reduce using rule 67 (signal_statement -> SIGNAL LPARENTESIS VARIABLE COMA expression RPARENTESIS PUNTO_COMA .)
    VARIABLE        reduce using rule 67 (signal_statement -> SIGNAL LPARENTESIS VARIABLE COMA expression RPARENTESIS PUNTO_COMA .)
    LPARENTESIS     reduce using rule 67 (signal_statement -> SIGNAL LPARENTESIS VARIABLE COMA expression RPARENTESIS PUNTO_COMA .)
    RPARENTESIS     reduce using rule 67 (signal_statement -> SIGNAL LPARENTESIS VARIABLE COMA expression RPARENTESIS PUNTO_COMA .)
    BREAK           reduce using rule 67 (signal_statement -> SIGNAL LPARENTESIS VARIABLE COMA expression RPARENTESIS PUNTO_COMA .)
    PUNTO_COMA      reduce using rule 67 (signal_statement -> SIGNAL LPARENTESIS VARIABLE COMA expression RPARENTESIS PUNTO_COMA .)
    WHEN            reduce using rule 67 (signal_statement -> SIGNAL LPARENTESIS VARIABLE COMA expression RPARENTESIS PUNTO_COMA .)


state 194

    (32) alter_statement -> ALTER LPARENTESIS VARIABLE COMA operador COMA return_num_statement . RPARENTESIS PUNTO_COMA

    RPARENTESIS     shift and go to state 197


state 195

    (33) alter_statement -> ALTER LPARENTESIS VARIABLE COMA operador COMA expression . RPARENTESIS PUNTO_COMA
    (74) expression -> expression . + expression
    (75) expression -> expression . - expression
    (76) expression -> expression . * expression
    (77) expression -> expression . / expression

    RPARENTESIS     shift and go to state 198
    +               shift and go to state 76
    -               shift and go to state 77
    *               shift and go to state 78
    /               shift and go to state 79


state 196

    (30) new_variable_statement -> NEW VARIABLE COMA LPARENTESIS DATATYPE COMA value RPARENTESIS . PUNTO_COMA

    PUNTO_COMA      shift and go to state 199


state 197

    (32) alter_statement -> ALTER LPARENTESIS VARIABLE COMA operador COMA return_num_statement RPARENTESIS . PUNTO_COMA

    PUNTO_COMA      shift and go to state 200


state 198

    (33) alter_statement -> ALTER LPARENTESIS VARIABLE COMA operador COMA expression RPARENTESIS . PUNTO_COMA

    PUNTO_COMA      shift and go to state 201


state 199

    (30) new_variable_statement -> NEW VARIABLE COMA LPARENTESIS DATATYPE COMA value RPARENTESIS PUNTO_COMA .

    COMENTARIO      reduce using rule 30 (new_variable_statement -> NEW VARIABLE COMA LPARENTESIS DATATYPE COMA value RPARENTESIS PUNTO_COMA .)
    NEW             reduce using rule 30 (new_variable_statement -> NEW VARIABLE COMA LPARENTESIS DATATYPE COMA value RPARENTESIS PUNTO_COMA .)
    ALTERB          reduce using rule 30 (new_variable_statement -> NEW VARIABLE COMA LPARENTESIS DATATYPE COMA value RPARENTESIS PUNTO_COMA .)
    VALUES          reduce using rule 30 (new_variable_statement -> NEW VARIABLE COMA LPARENTESIS DATATYPE COMA value RPARENTESIS PUNTO_COMA .)
    REPEAT          reduce using rule 30 (new_variable_statement -> NEW VARIABLE COMA LPARENTESIS DATATYPE COMA value RPARENTESIS PUNTO_COMA .)
    UNTIL           reduce using rule 30 (new_variable_statement -> NEW VARIABLE COMA LPARENTESIS DATATYPE COMA value RPARENTESIS PUNTO_COMA .)
    WHILE           reduce using rule 30 (new_variable_statement -> NEW VARIABLE COMA LPARENTESIS DATATYPE COMA value RPARENTESIS PUNTO_COMA .)
    CASE            reduce using rule 30 (new_variable_statement -> NEW VARIABLE COMA LPARENTESIS DATATYPE COMA value RPARENTESIS PUNTO_COMA .)
    PRINTVALUES     reduce using rule 30 (new_variable_statement -> NEW VARIABLE COMA LPARENTESIS DATATYPE COMA value RPARENTESIS PUNTO_COMA .)
    SIGNAL          reduce using rule 30 (new_variable_statement -> NEW VARIABLE COMA LPARENTESIS DATATYPE COMA value RPARENTESIS PUNTO_COMA .)
    VIEWSIGNAL      reduce using rule 30 (new_variable_statement -> NEW VARIABLE COMA LPARENTESIS DATATYPE COMA value RPARENTESIS PUNTO_COMA .)
    ALTER           reduce using rule 30 (new_variable_statement -> NEW VARIABLE COMA LPARENTESIS DATATYPE COMA value RPARENTESIS PUNTO_COMA .)
    ISTRUE          reduce using rule 30 (new_variable_statement -> NEW VARIABLE COMA LPARENTESIS DATATYPE COMA value RPARENTESIS PUNTO_COMA .)
    NUMERO          reduce using rule 30 (new_variable_statement -> NEW VARIABLE COMA LPARENTESIS DATATYPE COMA value RPARENTESIS PUNTO_COMA .)
    VARIABLE        reduce using rule 30 (new_variable_statement -> NEW VARIABLE COMA LPARENTESIS DATATYPE COMA value RPARENTESIS PUNTO_COMA .)
    LPARENTESIS     reduce using rule 30 (new_variable_statement -> NEW VARIABLE COMA LPARENTESIS DATATYPE COMA value RPARENTESIS PUNTO_COMA .)
    RPARENTESIS     reduce using rule 30 (new_variable_statement -> NEW VARIABLE COMA LPARENTESIS DATATYPE COMA value RPARENTESIS PUNTO_COMA .)
    BREAK           reduce using rule 30 (new_variable_statement -> NEW VARIABLE COMA LPARENTESIS DATATYPE COMA value RPARENTESIS PUNTO_COMA .)
    PUNTO_COMA      reduce using rule 30 (new_variable_statement -> NEW VARIABLE COMA LPARENTESIS DATATYPE COMA value RPARENTESIS PUNTO_COMA .)
    WHEN            reduce using rule 30 (new_variable_statement -> NEW VARIABLE COMA LPARENTESIS DATATYPE COMA value RPARENTESIS PUNTO_COMA .)


state 200

    (32) alter_statement -> ALTER LPARENTESIS VARIABLE COMA operador COMA return_num_statement RPARENTESIS PUNTO_COMA .

    COMENTARIO      reduce using rule 32 (alter_statement -> ALTER LPARENTESIS VARIABLE COMA operador COMA return_num_statement RPARENTESIS PUNTO_COMA .)
    NEW             reduce using rule 32 (alter_statement -> ALTER LPARENTESIS VARIABLE COMA operador COMA return_num_statement RPARENTESIS PUNTO_COMA .)
    ALTERB          reduce using rule 32 (alter_statement -> ALTER LPARENTESIS VARIABLE COMA operador COMA return_num_statement RPARENTESIS PUNTO_COMA .)
    VALUES          reduce using rule 32 (alter_statement -> ALTER LPARENTESIS VARIABLE COMA operador COMA return_num_statement RPARENTESIS PUNTO_COMA .)
    REPEAT          reduce using rule 32 (alter_statement -> ALTER LPARENTESIS VARIABLE COMA operador COMA return_num_statement RPARENTESIS PUNTO_COMA .)
    UNTIL           reduce using rule 32 (alter_statement -> ALTER LPARENTESIS VARIABLE COMA operador COMA return_num_statement RPARENTESIS PUNTO_COMA .)
    WHILE           reduce using rule 32 (alter_statement -> ALTER LPARENTESIS VARIABLE COMA operador COMA return_num_statement RPARENTESIS PUNTO_COMA .)
    CASE            reduce using rule 32 (alter_statement -> ALTER LPARENTESIS VARIABLE COMA operador COMA return_num_statement RPARENTESIS PUNTO_COMA .)
    PRINTVALUES     reduce using rule 32 (alter_statement -> ALTER LPARENTESIS VARIABLE COMA operador COMA return_num_statement RPARENTESIS PUNTO_COMA .)
    SIGNAL          reduce using rule 32 (alter_statement -> ALTER LPARENTESIS VARIABLE COMA operador COMA return_num_statement RPARENTESIS PUNTO_COMA .)
    VIEWSIGNAL      reduce using rule 32 (alter_statement -> ALTER LPARENTESIS VARIABLE COMA operador COMA return_num_statement RPARENTESIS PUNTO_COMA .)
    ALTER           reduce using rule 32 (alter_statement -> ALTER LPARENTESIS VARIABLE COMA operador COMA return_num_statement RPARENTESIS PUNTO_COMA .)
    ISTRUE          reduce using rule 32 (alter_statement -> ALTER LPARENTESIS VARIABLE COMA operador COMA return_num_statement RPARENTESIS PUNTO_COMA .)
    NUMERO          reduce using rule 32 (alter_statement -> ALTER LPARENTESIS VARIABLE COMA operador COMA return_num_statement RPARENTESIS PUNTO_COMA .)
    VARIABLE        reduce using rule 32 (alter_statement -> ALTER LPARENTESIS VARIABLE COMA operador COMA return_num_statement RPARENTESIS PUNTO_COMA .)
    LPARENTESIS     reduce using rule 32 (alter_statement -> ALTER LPARENTESIS VARIABLE COMA operador COMA return_num_statement RPARENTESIS PUNTO_COMA .)
    RPARENTESIS     reduce using rule 32 (alter_statement -> ALTER LPARENTESIS VARIABLE COMA operador COMA return_num_statement RPARENTESIS PUNTO_COMA .)
    BREAK           reduce using rule 32 (alter_statement -> ALTER LPARENTESIS VARIABLE COMA operador COMA return_num_statement RPARENTESIS PUNTO_COMA .)
    PUNTO_COMA      reduce using rule 32 (alter_statement -> ALTER LPARENTESIS VARIABLE COMA operador COMA return_num_statement RPARENTESIS PUNTO_COMA .)
    WHEN            reduce using rule 32 (alter_statement -> ALTER LPARENTESIS VARIABLE COMA operador COMA return_num_statement RPARENTESIS PUNTO_COMA .)
    COMA            reduce using rule 32 (alter_statement -> ALTER LPARENTESIS VARIABLE COMA operador COMA return_num_statement RPARENTESIS PUNTO_COMA .)
    THEN            reduce using rule 32 (alter_statement -> ALTER LPARENTESIS VARIABLE COMA operador COMA return_num_statement RPARENTESIS PUNTO_COMA .)


state 201

    (33) alter_statement -> ALTER LPARENTESIS VARIABLE COMA operador COMA expression RPARENTESIS PUNTO_COMA .

    COMENTARIO      reduce using rule 33 (alter_statement -> ALTER LPARENTESIS VARIABLE COMA operador COMA expression RPARENTESIS PUNTO_COMA .)
    NEW             reduce using rule 33 (alter_statement -> ALTER LPARENTESIS VARIABLE COMA operador COMA expression RPARENTESIS PUNTO_COMA .)
    ALTERB          reduce using rule 33 (alter_statement -> ALTER LPARENTESIS VARIABLE COMA operador COMA expression RPARENTESIS PUNTO_COMA .)
    VALUES          reduce using rule 33 (alter_statement -> ALTER LPARENTESIS VARIABLE COMA operador COMA expression RPARENTESIS PUNTO_COMA .)
    REPEAT          reduce using rule 33 (alter_statement -> ALTER LPARENTESIS VARIABLE COMA operador COMA expression RPARENTESIS PUNTO_COMA .)
    UNTIL           reduce using rule 33 (alter_statement -> ALTER LPARENTESIS VARIABLE COMA operador COMA expression RPARENTESIS PUNTO_COMA .)
    WHILE           reduce using rule 33 (alter_statement -> ALTER LPARENTESIS VARIABLE COMA operador COMA expression RPARENTESIS PUNTO_COMA .)
    CASE            reduce using rule 33 (alter_statement -> ALTER LPARENTESIS VARIABLE COMA operador COMA expression RPARENTESIS PUNTO_COMA .)
    PRINTVALUES     reduce using rule 33 (alter_statement -> ALTER LPARENTESIS VARIABLE COMA operador COMA expression RPARENTESIS PUNTO_COMA .)
    SIGNAL          reduce using rule 33 (alter_statement -> ALTER LPARENTESIS VARIABLE COMA operador COMA expression RPARENTESIS PUNTO_COMA .)
    VIEWSIGNAL      reduce using rule 33 (alter_statement -> ALTER LPARENTESIS VARIABLE COMA operador COMA expression RPARENTESIS PUNTO_COMA .)
    ALTER           reduce using rule 33 (alter_statement -> ALTER LPARENTESIS VARIABLE COMA operador COMA expression RPARENTESIS PUNTO_COMA .)
    ISTRUE          reduce using rule 33 (alter_statement -> ALTER LPARENTESIS VARIABLE COMA operador COMA expression RPARENTESIS PUNTO_COMA .)
    NUMERO          reduce using rule 33 (alter_statement -> ALTER LPARENTESIS VARIABLE COMA operador COMA expression RPARENTESIS PUNTO_COMA .)
    VARIABLE        reduce using rule 33 (alter_statement -> ALTER LPARENTESIS VARIABLE COMA operador COMA expression RPARENTESIS PUNTO_COMA .)
    LPARENTESIS     reduce using rule 33 (alter_statement -> ALTER LPARENTESIS VARIABLE COMA operador COMA expression RPARENTESIS PUNTO_COMA .)
    RPARENTESIS     reduce using rule 33 (alter_statement -> ALTER LPARENTESIS VARIABLE COMA operador COMA expression RPARENTESIS PUNTO_COMA .)
    BREAK           reduce using rule 33 (alter_statement -> ALTER LPARENTESIS VARIABLE COMA operador COMA expression RPARENTESIS PUNTO_COMA .)
    PUNTO_COMA      reduce using rule 33 (alter_statement -> ALTER LPARENTESIS VARIABLE COMA operador COMA expression RPARENTESIS PUNTO_COMA .)
    WHEN            reduce using rule 33 (alter_statement -> ALTER LPARENTESIS VARIABLE COMA operador COMA expression RPARENTESIS PUNTO_COMA .)
    COMA            reduce using rule 33 (alter_statement -> ALTER LPARENTESIS VARIABLE COMA operador COMA expression RPARENTESIS PUNTO_COMA .)
    THEN            reduce using rule 33 (alter_statement -> ALTER LPARENTESIS VARIABLE COMA operador COMA expression RPARENTESIS PUNTO_COMA .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for PROC in state 2 resolved as shift
WARNING: shift/reduce conflict for COMENTARIO in state 25 resolved as shift
WARNING: shift/reduce conflict for NEW in state 25 resolved as shift
WARNING: shift/reduce conflict for ALTERB in state 25 resolved as shift
WARNING: shift/reduce conflict for VALUES in state 25 resolved as shift
WARNING: shift/reduce conflict for REPEAT in state 25 resolved as shift
WARNING: shift/reduce conflict for UNTIL in state 25 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 25 resolved as shift
WARNING: shift/reduce conflict for CASE in state 25 resolved as shift
WARNING: shift/reduce conflict for PRINTVALUES in state 25 resolved as shift
WARNING: shift/reduce conflict for SIGNAL in state 25 resolved as shift
WARNING: shift/reduce conflict for VIEWSIGNAL in state 25 resolved as shift
WARNING: shift/reduce conflict for ALTER in state 25 resolved as shift
WARNING: shift/reduce conflict for ISTRUE in state 25 resolved as shift
WARNING: shift/reduce conflict for NUMERO in state 25 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 25 resolved as shift
WARNING: shift/reduce conflict for LPARENTESIS in state 25 resolved as shift
WARNING: shift/reduce conflict for + in state 118 resolved as shift
WARNING: shift/reduce conflict for - in state 118 resolved as shift
WARNING: shift/reduce conflict for * in state 118 resolved as shift
WARNING: shift/reduce conflict for / in state 118 resolved as shift
WARNING: shift/reduce conflict for + in state 119 resolved as shift
WARNING: shift/reduce conflict for - in state 119 resolved as shift
WARNING: shift/reduce conflict for * in state 119 resolved as shift
WARNING: shift/reduce conflict for / in state 119 resolved as shift
WARNING: shift/reduce conflict for + in state 120 resolved as shift
WARNING: shift/reduce conflict for - in state 120 resolved as shift
WARNING: shift/reduce conflict for * in state 120 resolved as shift
WARNING: shift/reduce conflict for / in state 120 resolved as shift
WARNING: shift/reduce conflict for + in state 121 resolved as shift
WARNING: shift/reduce conflict for - in state 121 resolved as shift
WARNING: shift/reduce conflict for * in state 121 resolved as shift
WARNING: shift/reduce conflict for / in state 121 resolved as shift
WARNING: shift/reduce conflict for RPARENTESIS in state 122 resolved as shift
WARNING: shift/reduce conflict for PROC in state 128 resolved as shift
WARNING: shift/reduce conflict for COMENTARIO in state 165 resolved as shift
WARNING: shift/reduce conflict for NEW in state 165 resolved as shift
WARNING: shift/reduce conflict for ALTERB in state 165 resolved as shift
WARNING: shift/reduce conflict for VALUES in state 165 resolved as shift
WARNING: shift/reduce conflict for REPEAT in state 165 resolved as shift
WARNING: shift/reduce conflict for UNTIL in state 165 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 165 resolved as shift
WARNING: shift/reduce conflict for CASE in state 165 resolved as shift
WARNING: shift/reduce conflict for PRINTVALUES in state 165 resolved as shift
WARNING: shift/reduce conflict for SIGNAL in state 165 resolved as shift
WARNING: shift/reduce conflict for VIEWSIGNAL in state 165 resolved as shift
WARNING: shift/reduce conflict for ALTER in state 165 resolved as shift
WARNING: shift/reduce conflict for ISTRUE in state 165 resolved as shift
WARNING: shift/reduce conflict for NUMERO in state 165 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 165 resolved as shift
WARNING: shift/reduce conflict for LPARENTESIS in state 165 resolved as shift
WARNING: reduce/reduce conflict in state 108 resolved using rule (content_print -> VARIABLE)
WARNING: rejected rule (expression -> VARIABLE) in state 108
WARNING: reduce/reduce conflict in state 142 resolved using rule (list_statement -> empty)
WARNING: rejected rule (else_statement -> empty) in state 142
WARNING: Rule (else_statement -> empty) is never reduced
