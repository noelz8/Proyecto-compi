
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "ADD ALTER ALTERB ARROBA BOOL BREAK CALL CASE COMA COMENTARIO COMILLAS COND_NUMERICA DATATYPE DER_EXCLAMACION DER_INTERROGACION DISTINTO_QUE DIV DIVISION ELSE ENYE FALSE GUION ID IGUAL IGUALDAD ISTRUE IZQ_EXCLAMACION IZQ_INTERROGACION LETRA LPARENTESIS MASTER MAYOR_IGUAL_QUE MAYOR_QUE MAYUSCULA MENOR_IGUAL_QUE MENOR_QUE MUL MULTIPLICACION NEW NUMERO PRINTVALUES PROC PUNTO PUNTO_COMA REPEAT RESTA RPARENTESIS SIGNAL STRING SUB SUMA THEN TILDE TRUE UNDERSCORE UNTIL VALUES VARIABLE VIEWSIGNAL WHEN WHILE\n    program : lista_comentarios code_block\n    \n    lista_comentarios : comentario lista_comentarios\n                 | empty\n    \n    comentario : COMENTARIO\n    \n    code_block : proc MASTER LPARENTESIS comentario list_statement RPARENTESIS PUNTO_COMA group_proc\n            | group_proc proc MASTER LPARENTESIS comentario list_statement RPARENTESIS PUNTO_COMA group_proc\n    \n    proc : PROC\n    \n    group_proc : PROC VARIABLE LPARENTESIS COMENTARIO list_statement RPARENTESIS PUNTO_COMA group_proc\n               | empty\n    \n    list_statement : statement list_statement\n                  | empty\n    \n    statement : no_return_statement\n              | return_statement\n    \n    no_return_statement : new_variable_statement\n                        | alterb_statement\n                        | values_statement\n                        | repeat_statement\n                        | until_statement\n                        | while_statement\n                        | case_statement\n                        | printvalues_statement\n                        | signal_statement\n    \n    return_statement : return_num_statement\n                     | return_bool_statement\n    \n    return_num_statement : viewsignal_statement\n                        | alter_statement\n    \n    return_bool_statement : condition_statement\n                          | istrue_statement\n    \n    new_variable_statement : NEW VARIABLE COMA LPARENTESIS DATATYPE COMA value RPARENTESIS PUNTO_COMA\n    \n    values_statement : VALUES LPARENTESIS VARIABLE COMA value RPARENTESIS PUNTO_COMA\n    \n    alter_statement : ALTER LPARENTESIS VARIABLE COMA operador COMA value RPARENTESIS PUNTO_COMA\n    \n    operador : ADD\n            | SUB\n            | MUL\n            | DIV\n    \n    alterb_statement : ALTERB LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA\n    \n    condition_statement : expression condition expression\n    \n    istrue_statement : ISTRUE LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA\n    \n    repeat_statement : REPEAT LPARENTESIS list_statement break_statement RPARENTESIS PUNTO_COMA\n    \n    break_statement : BREAK PUNTO_COMA\n    \n    until_statement : UNTIL list_statement condition PUNTO_COMA\n    \n    condition :  MAYOR_QUE\n                | MENOR_QUE\n                | IGUAL\n                | DISTINTO_QUE\n                | MAYOR_IGUAL_QUE\n                | MENOR_IGUAL_QUE\n    \n    while_statement : WHILE expression LPARENTESIS list_statement RPARENTESIS PUNTO_COMA\n                    | WHILE condition_statement LPARENTESIS list_statement RPARENTESIS PUNTO_COMA\n                    | WHILE istrue LPARENTESIS list_statement RPARENTESIS PUNTO_COMA\n    \n    bool : TRUE\n         | FALSE\n    \n    case_statement : CASE VARIABLE case_when_statements else_statement PUNTO_COMA\n    \n    case_when_statements : case_when_statement case_when_statements\n                         | empty\n    \n    case_when_statement : WHEN value THEN list_statement\n    \n    else_statement : ELSE code_block\n                   | empty\n    \n    printvalues_statement : PRINTVALUES LPARENTESIS content_print RPARENTESIS PUNTO_COMA\n    \n    content_print : STRING\n                  | VARIABLE\n                  | value\n    \n    signal_statement : SIGNAL LPARENTESIS VARIABLE COMA value RPARENTESIS PUNTO_COMA\n    \n    viewsignal_statement : VIEWSIGNAL LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA\n    \n    expression : value\n               | VARIABLE\n               | LPARENTESIS expression RPARENTESIS\n               | expression '+' expression\n               | expression '-' expression\n               | expression '*' expression\n               | expression '/' expression\n    \n    istrue : ISTRUE LPARENTESIS VARIABLE RPARENTESIS\n    \n    value : NUMERO\n          | bool\n          | return_num_statement\n          | return_bool_statement\n    \n    empty :\n    "
    
_lr_action_items = {'COMENTARIO':([0,3,5,16,18,20,],[5,5,-4,5,21,5,]),'PROC':([0,2,3,4,5,8,10,11,98,126,140,149,150,],[-77,9,-77,-3,-4,14,-9,-2,128,128,9,128,-8,]),'$end':([1,6,10,98,126,127,149,150,172,],[0,-1,-9,-77,-77,-5,-77,-8,-6,]),'NEW':([5,19,21,24,26,27,28,29,30,31,32,33,34,35,36,37,38,40,41,45,48,52,53,54,58,59,60,61,62,65,66,72,97,104,105,106,108,109,110,111,112,134,152,160,162,163,165,171,175,176,177,178,183,184,188,189,],[-4,39,39,39,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-66,-65,39,-27,-25,-26,-28,-73,-74,-51,-52,39,-75,-76,39,-67,39,39,39,-37,-68,-69,-70,-71,-41,-36,-53,39,-59,-64,-38,-39,-48,-49,-50,-30,-63,-29,-31,]),'ALTERB':([5,19,21,24,26,27,28,29,30,31,32,33,34,35,36,37,38,40,41,45,48,52,53,54,58,59,60,61,62,65,66,72,97,104,105,106,108,109,110,111,112,134,152,160,162,163,165,171,175,176,177,178,183,184,188,189,],[-4,42,42,42,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-66,-65,42,-27,-25,-26,-28,-73,-74,-51,-52,42,-75,-76,42,-67,42,42,42,-37,-68,-69,-70,-71,-41,-36,-53,42,-59,-64,-38,-39,-48,-49,-50,-30,-63,-29,-31,]),'VALUES':([5,19,21,24,26,27,28,29,30,31,32,33,34,35,36,37,38,40,41,45,48,52,53,54,58,59,60,61,62,65,66,72,97,104,105,106,108,109,110,111,112,134,152,160,162,163,165,171,175,176,177,178,183,184,188,189,],[-4,43,43,43,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-66,-65,43,-27,-25,-26,-28,-73,-74,-51,-52,43,-75,-76,43,-67,43,43,43,-37,-68,-69,-70,-71,-41,-36,-53,43,-59,-64,-38,-39,-48,-49,-50,-30,-63,-29,-31,]),'REPEAT':([5,19,21,24,26,27,28,29,30,31,32,33,34,35,36,37,38,40,41,45,48,52,53,54,58,59,60,61,62,65,66,72,97,104,105,106,108,109,110,111,112,134,152,160,162,163,165,171,175,176,177,178,183,184,188,189,],[-4,44,44,44,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-66,-65,44,-27,-25,-26,-28,-73,-74,-51,-52,44,-75,-76,44,-67,44,44,44,-37,-68,-69,-70,-71,-41,-36,-53,44,-59,-64,-38,-39,-48,-49,-50,-30,-63,-29,-31,]),'UNTIL':([5,19,21,24,26,27,28,29,30,31,32,33,34,35,36,37,38,40,41,45,48,52,53,54,58,59,60,61,62,65,66,72,97,104,105,106,108,109,110,111,112,134,152,160,162,163,165,171,175,176,177,178,183,184,188,189,],[-4,45,45,45,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-66,-65,45,-27,-25,-26,-28,-73,-74,-51,-52,45,-75,-76,45,-67,45,45,45,-37,-68,-69,-70,-71,-41,-36,-53,45,-59,-64,-38,-39,-48,-49,-50,-30,-63,-29,-31,]),'WHILE':([5,19,21,24,26,27,28,29,30,31,32,33,34,35,36,37,38,40,41,45,48,52,53,54,58,59,60,61,62,65,66,72,97,104,105,106,108,109,110,111,112,134,152,160,162,163,165,171,175,176,177,178,183,184,188,189,],[-4,46,46,46,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-66,-65,46,-27,-25,-26,-28,-73,-74,-51,-52,46,-75,-76,46,-67,46,46,46,-37,-68,-69,-70,-71,-41,-36,-53,46,-59,-64,-38,-39,-48,-49,-50,-30,-63,-29,-31,]),'CASE':([5,19,21,24,26,27,28,29,30,31,32,33,34,35,36,37,38,40,41,45,48,52,53,54,58,59,60,61,62,65,66,72,97,104,105,106,108,109,110,111,112,134,152,160,162,163,165,171,175,176,177,178,183,184,188,189,],[-4,49,49,49,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-66,-65,49,-27,-25,-26,-28,-73,-74,-51,-52,49,-75,-76,49,-67,49,49,49,-37,-68,-69,-70,-71,-41,-36,-53,49,-59,-64,-38,-39,-48,-49,-50,-30,-63,-29,-31,]),'PRINTVALUES':([5,19,21,24,26,27,28,29,30,31,32,33,34,35,36,37,38,40,41,45,48,52,53,54,58,59,60,61,62,65,66,72,97,104,105,106,108,109,110,111,112,134,152,160,162,163,165,171,175,176,177,178,183,184,188,189,],[-4,50,50,50,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-66,-65,50,-27,-25,-26,-28,-73,-74,-51,-52,50,-75,-76,50,-67,50,50,50,-37,-68,-69,-70,-71,-41,-36,-53,50,-59,-64,-38,-39,-48,-49,-50,-30,-63,-29,-31,]),'SIGNAL':([5,19,21,24,26,27,28,29,30,31,32,33,34,35,36,37,38,40,41,45,48,52,53,54,58,59,60,61,62,65,66,72,97,104,105,106,108,109,110,111,112,134,152,160,162,163,165,171,175,176,177,178,183,184,188,189,],[-4,51,51,51,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-66,-65,51,-27,-25,-26,-28,-73,-74,-51,-52,51,-75,-76,51,-67,51,51,51,-37,-68,-69,-70,-71,-41,-36,-53,51,-59,-64,-38,-39,-48,-49,-50,-30,-63,-29,-31,]),'VIEWSIGNAL':([5,19,21,22,24,26,27,28,29,30,31,32,33,34,35,36,37,38,40,41,45,46,48,52,53,54,58,59,60,61,62,65,66,72,78,79,80,81,82,83,84,85,86,87,88,90,97,104,105,106,108,109,110,111,112,116,131,134,145,152,160,162,163,165,171,173,175,176,177,178,181,183,184,188,189,],[-4,55,55,55,55,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-66,-65,55,55,-27,-25,-26,-28,-73,-74,-51,-52,55,-75,-76,55,55,55,55,55,55,-42,-43,-44,-45,-46,-47,55,-67,55,55,55,-37,-68,-69,-70,-71,55,55,-41,55,-36,-53,55,-59,-64,-38,55,-39,-48,-49,-50,55,-30,-63,-29,-31,]),'ALTER':([5,19,21,22,24,26,27,28,29,30,31,32,33,34,35,36,37,38,40,41,45,46,48,52,53,54,58,59,60,61,62,65,66,72,78,79,80,81,82,83,84,85,86,87,88,90,97,104,105,106,108,109,110,111,112,116,131,134,145,152,160,162,163,165,171,173,175,176,177,178,181,183,184,188,189,],[-4,56,56,56,56,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-66,-65,56,56,-27,-25,-26,-28,-73,-74,-51,-52,56,-75,-76,56,56,56,56,56,56,-42,-43,-44,-45,-46,-47,56,-67,56,56,56,-37,-68,-69,-70,-71,56,56,-41,56,-36,-53,56,-59,-64,-38,56,-39,-48,-49,-50,56,-30,-63,-29,-31,]),'ISTRUE':([5,19,21,22,24,26,27,28,29,30,31,32,33,34,35,36,37,38,40,41,45,46,48,52,53,54,58,59,60,61,62,65,66,72,78,79,80,81,82,83,84,85,86,87,88,90,97,104,105,106,108,109,110,111,112,116,131,134,145,152,160,162,163,165,171,173,175,176,177,178,181,183,184,188,189,],[-4,57,57,57,57,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-66,-65,57,77,-27,-25,-26,-28,-73,-74,-51,-52,57,-75,-76,57,57,57,57,57,57,-42,-43,-44,-45,-46,-47,57,-67,57,57,57,-37,-68,-69,-70,-71,57,57,-41,57,-36,-53,57,-59,-64,-38,57,-39,-48,-49,-50,57,-30,-63,-29,-31,]),'VARIABLE':([5,9,19,21,22,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,45,46,48,49,52,53,54,58,59,60,61,62,65,66,70,71,72,78,79,80,81,82,83,84,85,86,87,88,90,91,92,93,94,97,104,105,106,107,108,109,110,111,112,116,128,131,134,145,152,160,162,163,165,171,173,175,176,177,178,181,183,184,188,189,],[-4,15,40,40,40,40,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,69,-66,-65,40,40,-27,89,-25,-26,-28,-73,-74,-51,-52,40,-75,-76,100,101,40,40,40,40,40,40,-42,-43,-44,-45,-46,-47,119,121,122,123,124,-67,40,40,40,138,-37,-68,-69,-70,-71,40,15,40,-41,40,-36,-53,40,-59,-64,-38,40,-39,-48,-49,-50,40,-30,-63,-29,-31,]),'LPARENTESIS':([5,12,15,17,19,21,22,24,26,27,28,29,30,31,32,33,34,35,36,37,38,40,41,42,43,44,45,46,48,50,51,52,53,54,55,56,57,58,59,60,61,62,65,66,72,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,90,97,99,104,105,106,108,109,110,111,112,116,131,134,145,152,159,160,162,163,165,171,173,175,176,177,178,181,183,184,188,189,],[-4,16,18,20,22,22,22,22,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-66,-65,70,71,72,22,22,-27,90,91,-25,-26,-28,92,93,94,-73,-74,-51,-52,22,-75,-76,22,104,105,106,107,22,22,22,22,22,-42,-43,-44,-45,-46,-47,22,-67,129,22,22,22,-37,-68,-69,-70,-71,22,22,-41,22,-36,-72,-53,22,-59,-64,-38,22,-39,-48,-49,-50,22,-30,-63,-29,-31,]),'NUMERO':([5,19,21,22,24,26,27,28,29,30,31,32,33,34,35,36,37,38,40,41,45,46,48,52,53,54,58,59,60,61,62,65,66,72,78,79,80,81,82,83,84,85,86,87,88,90,97,104,105,106,108,109,110,111,112,116,131,134,145,152,160,162,163,165,171,173,175,176,177,178,181,183,184,188,189,],[-4,58,58,58,58,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-66,-65,58,58,-27,-25,-26,-28,-73,-74,-51,-52,58,-75,-76,58,58,58,58,58,58,-42,-43,-44,-45,-46,-47,58,-67,58,58,58,-37,-68,-69,-70,-71,58,58,-41,58,-36,-53,58,-59,-64,-38,58,-39,-48,-49,-50,58,-30,-63,-29,-31,]),'TRUE':([5,19,21,22,24,26,27,28,29,30,31,32,33,34,35,36,37,38,40,41,45,46,48,52,53,54,58,59,60,61,62,65,66,72,78,79,80,81,82,83,84,85,86,87,88,90,97,104,105,106,108,109,110,111,112,116,131,134,145,152,160,162,163,165,171,173,175,176,177,178,181,183,184,188,189,],[-4,60,60,60,60,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-66,-65,60,60,-27,-25,-26,-28,-73,-74,-51,-52,60,-75,-76,60,60,60,60,60,60,-42,-43,-44,-45,-46,-47,60,-67,60,60,60,-37,-68,-69,-70,-71,60,60,-41,60,-36,-53,60,-59,-64,-38,60,-39,-48,-49,-50,60,-30,-63,-29,-31,]),'FALSE':([5,19,21,22,24,26,27,28,29,30,31,32,33,34,35,36,37,38,40,41,45,46,48,52,53,54,58,59,60,61,62,65,66,72,78,79,80,81,82,83,84,85,86,87,88,90,97,104,105,106,108,109,110,111,112,116,131,134,145,152,160,162,163,165,171,173,175,176,177,178,181,183,184,188,189,],[-4,61,61,61,61,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-66,-65,61,61,-27,-25,-26,-28,-73,-74,-51,-52,61,-75,-76,61,61,61,61,61,61,-42,-43,-44,-45,-46,-47,61,-67,61,61,61,-37,-68,-69,-70,-71,61,61,-41,61,-36,-53,61,-59,-64,-38,61,-39,-48,-49,-50,61,-30,-63,-29,-31,]),'RPARENTESIS':([5,19,21,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,40,41,48,52,53,54,58,59,60,61,62,63,64,65,66,68,95,97,100,104,105,106,108,109,110,111,112,117,118,119,120,122,124,132,134,135,136,137,138,152,153,155,160,163,164,165,171,175,176,177,178,182,183,184,185,188,189,],[-4,-77,-77,67,-77,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-66,-65,-27,-25,-26,-28,-73,-74,-51,-52,-77,96,97,-75,-76,-10,125,-67,130,-77,-77,-77,-37,-68,-69,-70,-71,144,-60,-61,-62,146,148,154,-41,156,157,158,159,-36,174,-40,-53,-59,180,-64,-38,-39,-48,-49,-50,186,-30,-63,187,-29,-31,]),'MASTER':([7,9,13,14,],[12,-7,17,-7,]),'PUNTO_COMA':([10,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,40,41,48,52,53,54,58,59,60,61,65,66,67,68,83,84,85,86,87,88,89,96,97,98,103,108,109,110,111,112,113,114,115,125,126,127,130,133,134,139,141,142,144,146,148,149,150,152,154,156,157,158,159,160,161,162,163,165,171,172,174,175,176,177,178,179,180,183,184,186,187,188,189,],[-9,-77,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-66,-65,-27,-25,-26,-28,-73,-74,-51,-52,-75,-76,98,-10,-42,-43,-44,-45,-46,-47,-77,126,-67,-77,134,-37,-68,-69,-70,-71,-77,-77,-55,149,-77,-5,152,155,-41,160,-58,-54,163,165,171,-77,-8,-36,175,176,177,178,171,-53,-57,-77,-59,-64,-38,-6,183,-39,-48,-49,-50,-56,184,-30,-63,188,189,-29,-31,]),'MAYOR_QUE':([24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,40,41,45,47,48,52,53,54,58,59,60,61,64,65,66,68,73,74,75,97,108,109,110,111,112,119,120,134,143,152,153,160,163,164,165,171,175,176,177,178,182,183,184,185,188,189,],[-77,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-66,-65,-77,83,-27,-25,-26,-28,-73,-74,-51,-52,83,-75,-76,-10,83,83,-27,-67,83,83,83,83,83,-66,-65,-41,-65,-36,-65,-53,-59,-65,-64,-38,-39,-48,-49,-50,-65,-30,-63,-65,-29,-31,]),'MENOR_QUE':([24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,40,41,45,47,48,52,53,54,58,59,60,61,64,65,66,68,73,74,75,97,108,109,110,111,112,119,120,134,143,152,153,160,163,164,165,171,175,176,177,178,182,183,184,185,188,189,],[-77,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-66,-65,-77,84,-27,-25,-26,-28,-73,-74,-51,-52,84,-75,-76,-10,84,84,-27,-67,84,84,84,84,84,-66,-65,-41,-65,-36,-65,-53,-59,-65,-64,-38,-39,-48,-49,-50,-65,-30,-63,-65,-29,-31,]),'IGUAL':([24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,40,41,45,47,48,52,53,54,58,59,60,61,64,65,66,68,73,74,75,97,108,109,110,111,112,119,120,134,143,152,153,160,163,164,165,171,175,176,177,178,182,183,184,185,188,189,],[-77,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-66,-65,-77,85,-27,-25,-26,-28,-73,-74,-51,-52,85,-75,-76,-10,85,85,-27,-67,85,85,85,85,85,-66,-65,-41,-65,-36,-65,-53,-59,-65,-64,-38,-39,-48,-49,-50,-65,-30,-63,-65,-29,-31,]),'DISTINTO_QUE':([24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,40,41,45,47,48,52,53,54,58,59,60,61,64,65,66,68,73,74,75,97,108,109,110,111,112,119,120,134,143,152,153,160,163,164,165,171,175,176,177,178,182,183,184,185,188,189,],[-77,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-66,-65,-77,86,-27,-25,-26,-28,-73,-74,-51,-52,86,-75,-76,-10,86,86,-27,-67,86,86,86,86,86,-66,-65,-41,-65,-36,-65,-53,-59,-65,-64,-38,-39,-48,-49,-50,-65,-30,-63,-65,-29,-31,]),'MAYOR_IGUAL_QUE':([24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,40,41,45,47,48,52,53,54,58,59,60,61,64,65,66,68,73,74,75,97,108,109,110,111,112,119,120,134,143,152,153,160,163,164,165,171,175,176,177,178,182,183,184,185,188,189,],[-77,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-66,-65,-77,87,-27,-25,-26,-28,-73,-74,-51,-52,87,-75,-76,-10,87,87,-27,-67,87,87,87,87,87,-66,-65,-41,-65,-36,-65,-53,-59,-65,-64,-38,-39,-48,-49,-50,-65,-30,-63,-65,-29,-31,]),'MENOR_IGUAL_QUE':([24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,40,41,45,47,48,52,53,54,58,59,60,61,64,65,66,68,73,74,75,97,108,109,110,111,112,119,120,134,143,152,153,160,163,164,165,171,175,176,177,178,182,183,184,185,188,189,],[-77,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-66,-65,-77,88,-27,-25,-26,-28,-73,-74,-51,-52,88,-75,-76,-10,88,88,-27,-67,88,88,88,88,88,-66,-65,-41,-65,-36,-65,-53,-59,-65,-64,-38,-39,-48,-49,-50,-65,-30,-63,-65,-29,-31,]),'BREAK':([24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,40,41,48,52,53,54,58,59,60,61,65,66,68,72,97,102,108,109,110,111,112,134,152,160,163,165,171,175,176,177,178,183,184,188,189,],[-77,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-66,-65,-27,-25,-26,-28,-73,-74,-51,-52,-75,-76,-10,-77,-67,133,-37,-68,-69,-70,-71,-41,-36,-53,-59,-64,-38,-39,-48,-49,-50,-30,-63,-29,-31,]),'WHEN':([24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,40,41,48,52,53,54,58,59,60,61,65,66,68,89,97,108,109,110,111,112,114,134,152,160,162,163,165,171,175,176,177,178,179,183,184,188,189,],[-77,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-66,-65,-27,-25,-26,-28,-73,-74,-51,-52,-75,-76,-10,116,-67,-37,-68,-69,-70,-71,116,-41,-36,-53,-77,-59,-64,-38,-39,-48,-49,-50,-56,-30,-63,-29,-31,]),'ELSE':([24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,40,41,48,52,53,54,58,59,60,61,65,66,68,89,97,108,109,110,111,112,113,114,115,134,142,152,160,162,163,165,171,175,176,177,178,179,183,184,188,189,],[-77,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-66,-65,-27,-25,-26,-28,-73,-74,-51,-52,-75,-76,-10,-77,-67,-37,-68,-69,-70,-71,140,-77,-55,-41,-54,-36,-53,-77,-59,-64,-38,-39,-48,-49,-50,-56,-30,-63,-29,-31,]),'+':([37,38,40,41,47,48,52,53,54,58,59,60,61,64,65,66,74,75,97,108,109,110,111,112,119,120,143,153,164,165,171,182,185,189,],[-75,-76,-66,-65,79,-27,-25,-26,-28,-73,-74,-51,-52,79,-75,-76,79,-27,-67,79,79,79,79,79,-66,-65,-65,-65,-65,-64,-38,-65,-65,-31,]),'-':([37,38,40,41,47,48,52,53,54,58,59,60,61,64,65,66,74,75,97,108,109,110,111,112,119,120,143,153,164,165,171,182,185,189,],[-75,-76,-66,-65,80,-27,-25,-26,-28,-73,-74,-51,-52,80,-75,-76,80,-27,-67,80,80,80,80,80,-66,-65,-65,-65,-65,-64,-38,-65,-65,-31,]),'*':([37,38,40,41,47,48,52,53,54,58,59,60,61,64,65,66,74,75,97,108,109,110,111,112,119,120,143,153,164,165,171,182,185,189,],[-75,-76,-66,-65,81,-27,-25,-26,-28,-73,-74,-51,-52,81,-75,-76,81,-27,-67,81,81,81,81,81,-66,-65,-65,-65,-65,-64,-38,-65,-65,-31,]),'/':([37,38,40,41,47,48,52,53,54,58,59,60,61,64,65,66,74,75,97,108,109,110,111,112,119,120,143,153,164,165,171,182,185,189,],[-75,-76,-66,-65,82,-27,-25,-26,-28,-73,-74,-51,-52,82,-75,-76,82,-27,-67,82,82,82,82,82,-66,-65,-65,-65,-65,-64,-38,-65,-65,-31,]),'THEN':([40,41,48,52,53,54,58,59,60,61,65,66,97,108,109,110,111,112,143,165,171,189,],[-66,-65,-27,-25,-26,-28,-73,-74,-51,-52,-75,-76,-67,-37,-68,-69,-70,-71,162,-64,-38,-31,]),'COMA':([69,101,121,123,151,166,167,168,169,170,],[99,131,145,147,173,181,-32,-33,-34,-35,]),'STRING':([90,],[118,]),'DATATYPE':([129,],[151,]),'ADD':([147,],[167,]),'SUB':([147,],[168,]),'MUL':([147,],[169,]),'DIV':([147,],[170,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'lista_comentarios':([0,3,],[2,11,]),'comentario':([0,3,16,20,],[3,3,19,62,]),'empty':([0,2,3,19,21,24,45,62,72,89,98,104,105,106,113,114,126,140,149,162,],[4,10,4,25,25,25,25,25,25,115,10,25,25,25,141,115,10,10,10,25,]),'code_block':([2,140,],[6,161,]),'proc':([2,8,140,],[7,13,7,]),'group_proc':([2,98,126,140,149,],[8,127,150,8,172,]),'list_statement':([19,21,24,45,62,72,104,105,106,162,],[23,63,68,73,95,102,135,136,137,179,]),'statement':([19,21,24,45,62,72,104,105,106,162,],[24,24,24,24,24,24,24,24,24,24,]),'no_return_statement':([19,21,24,45,62,72,104,105,106,162,],[26,26,26,26,26,26,26,26,26,26,]),'return_statement':([19,21,24,45,62,72,104,105,106,162,],[27,27,27,27,27,27,27,27,27,27,]),'new_variable_statement':([19,21,24,45,62,72,104,105,106,162,],[28,28,28,28,28,28,28,28,28,28,]),'alterb_statement':([19,21,24,45,62,72,104,105,106,162,],[29,29,29,29,29,29,29,29,29,29,]),'values_statement':([19,21,24,45,62,72,104,105,106,162,],[30,30,30,30,30,30,30,30,30,30,]),'repeat_statement':([19,21,24,45,62,72,104,105,106,162,],[31,31,31,31,31,31,31,31,31,31,]),'until_statement':([19,21,24,45,62,72,104,105,106,162,],[32,32,32,32,32,32,32,32,32,32,]),'while_statement':([19,21,24,45,62,72,104,105,106,162,],[33,33,33,33,33,33,33,33,33,33,]),'case_statement':([19,21,24,45,62,72,104,105,106,162,],[34,34,34,34,34,34,34,34,34,34,]),'printvalues_statement':([19,21,24,45,62,72,104,105,106,162,],[35,35,35,35,35,35,35,35,35,35,]),'signal_statement':([19,21,24,45,62,72,104,105,106,162,],[36,36,36,36,36,36,36,36,36,36,]),'return_num_statement':([19,21,22,24,45,46,62,72,78,79,80,81,82,90,104,105,106,116,131,145,162,173,181,],[37,37,65,37,37,65,37,37,65,65,65,65,65,65,37,37,37,65,65,65,37,65,65,]),'return_bool_statement':([19,21,22,24,45,46,62,72,78,79,80,81,82,90,104,105,106,116,131,145,162,173,181,],[38,38,66,38,38,66,38,38,66,66,66,66,66,66,38,38,38,66,66,66,38,66,66,]),'value':([19,21,22,24,45,46,62,72,78,79,80,81,82,90,104,105,106,116,131,145,162,173,181,],[41,41,41,41,41,41,41,41,41,41,41,41,41,120,41,41,41,143,153,164,41,182,185,]),'expression':([19,21,22,24,45,46,62,72,78,79,80,81,82,90,104,105,106,116,131,145,162,173,181,],[47,47,64,47,47,74,47,47,108,109,110,111,112,47,47,47,47,47,47,47,47,47,47,]),'condition_statement':([19,21,22,24,45,46,62,72,78,79,80,81,82,90,104,105,106,116,131,145,162,173,181,],[48,48,48,48,48,75,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,]),'viewsignal_statement':([19,21,22,24,45,46,62,72,78,79,80,81,82,90,104,105,106,116,131,145,162,173,181,],[52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,]),'alter_statement':([19,21,22,24,45,46,62,72,78,79,80,81,82,90,104,105,106,116,131,145,162,173,181,],[53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,]),'istrue_statement':([19,21,22,24,45,46,62,72,78,79,80,81,82,90,104,105,106,116,131,145,162,173,181,],[54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,]),'bool':([19,21,22,24,45,46,62,72,78,79,80,81,82,90,104,105,106,116,131,145,162,173,181,],[59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,]),'istrue':([46,],[76,]),'condition':([47,64,73,74,108,109,110,111,112,],[78,78,103,78,78,78,78,78,78,]),'case_when_statements':([89,114,],[113,142,]),'case_when_statement':([89,114,],[114,114,]),'content_print':([90,],[117,]),'break_statement':([102,],[132,]),'else_statement':([113,],[139,]),'operador':([147,],[166,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> lista_comentarios code_block','program',2,'p_program','yacc_parser.py',7),
  ('lista_comentarios -> comentario lista_comentarios','lista_comentarios',2,'p_lista_comentarios','yacc_parser.py',13),
  ('lista_comentarios -> empty','lista_comentarios',1,'p_lista_comentarios','yacc_parser.py',14),
  ('comentario -> COMENTARIO','comentario',1,'p_comentario','yacc_parser.py',20),
  ('code_block -> proc MASTER LPARENTESIS comentario list_statement RPARENTESIS PUNTO_COMA group_proc','code_block',8,'p_code_block','yacc_parser.py',26),
  ('code_block -> group_proc proc MASTER LPARENTESIS comentario list_statement RPARENTESIS PUNTO_COMA group_proc','code_block',9,'p_code_block','yacc_parser.py',27),
  ('proc -> PROC','proc',1,'p_proc','yacc_parser.py',33),
  ('group_proc -> PROC VARIABLE LPARENTESIS COMENTARIO list_statement RPARENTESIS PUNTO_COMA group_proc','group_proc',8,'p_group_proc','yacc_parser.py',39),
  ('group_proc -> empty','group_proc',1,'p_group_proc','yacc_parser.py',40),
  ('list_statement -> statement list_statement','list_statement',2,'p_list_statement','yacc_parser.py',46),
  ('list_statement -> empty','list_statement',1,'p_list_statement','yacc_parser.py',47),
  ('statement -> no_return_statement','statement',1,'p_statement','yacc_parser.py',53),
  ('statement -> return_statement','statement',1,'p_statement','yacc_parser.py',54),
  ('no_return_statement -> new_variable_statement','no_return_statement',1,'p_no_return_statement','yacc_parser.py',60),
  ('no_return_statement -> alterb_statement','no_return_statement',1,'p_no_return_statement','yacc_parser.py',61),
  ('no_return_statement -> values_statement','no_return_statement',1,'p_no_return_statement','yacc_parser.py',62),
  ('no_return_statement -> repeat_statement','no_return_statement',1,'p_no_return_statement','yacc_parser.py',63),
  ('no_return_statement -> until_statement','no_return_statement',1,'p_no_return_statement','yacc_parser.py',64),
  ('no_return_statement -> while_statement','no_return_statement',1,'p_no_return_statement','yacc_parser.py',65),
  ('no_return_statement -> case_statement','no_return_statement',1,'p_no_return_statement','yacc_parser.py',66),
  ('no_return_statement -> printvalues_statement','no_return_statement',1,'p_no_return_statement','yacc_parser.py',67),
  ('no_return_statement -> signal_statement','no_return_statement',1,'p_no_return_statement','yacc_parser.py',68),
  ('return_statement -> return_num_statement','return_statement',1,'p_return_statement','yacc_parser.py',74),
  ('return_statement -> return_bool_statement','return_statement',1,'p_return_statement','yacc_parser.py',75),
  ('return_num_statement -> viewsignal_statement','return_num_statement',1,'p_return_num_statement','yacc_parser.py',81),
  ('return_num_statement -> alter_statement','return_num_statement',1,'p_return_num_statement','yacc_parser.py',82),
  ('return_bool_statement -> condition_statement','return_bool_statement',1,'p_return_bool_statement','yacc_parser.py',88),
  ('return_bool_statement -> istrue_statement','return_bool_statement',1,'p_return_bool_statement','yacc_parser.py',89),
  ('new_variable_statement -> NEW VARIABLE COMA LPARENTESIS DATATYPE COMA value RPARENTESIS PUNTO_COMA','new_variable_statement',9,'p_new_variable_statement','yacc_parser.py',95),
  ('values_statement -> VALUES LPARENTESIS VARIABLE COMA value RPARENTESIS PUNTO_COMA','values_statement',7,'p_values_statement','yacc_parser.py',101),
  ('alter_statement -> ALTER LPARENTESIS VARIABLE COMA operador COMA value RPARENTESIS PUNTO_COMA','alter_statement',9,'p_alter_statement','yacc_parser.py',107),
  ('operador -> ADD','operador',1,'p_operador','yacc_parser.py',113),
  ('operador -> SUB','operador',1,'p_operador','yacc_parser.py',114),
  ('operador -> MUL','operador',1,'p_operador','yacc_parser.py',115),
  ('operador -> DIV','operador',1,'p_operador','yacc_parser.py',116),
  ('alterb_statement -> ALTERB LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA','alterb_statement',5,'p_alterb_statement','yacc_parser.py',121),
  ('condition_statement -> expression condition expression','condition_statement',3,'p_condition_statement','yacc_parser.py',127),
  ('istrue_statement -> ISTRUE LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA','istrue_statement',5,'p_istrue_statement','yacc_parser.py',133),
  ('repeat_statement -> REPEAT LPARENTESIS list_statement break_statement RPARENTESIS PUNTO_COMA','repeat_statement',6,'p_repeat_statement','yacc_parser.py',139),
  ('break_statement -> BREAK PUNTO_COMA','break_statement',2,'p_break_statement','yacc_parser.py',145),
  ('until_statement -> UNTIL list_statement condition PUNTO_COMA','until_statement',4,'p_until_statement','yacc_parser.py',151),
  ('condition -> MAYOR_QUE','condition',1,'p_condition','yacc_parser.py',157),
  ('condition -> MENOR_QUE','condition',1,'p_condition','yacc_parser.py',158),
  ('condition -> IGUAL','condition',1,'p_condition','yacc_parser.py',159),
  ('condition -> DISTINTO_QUE','condition',1,'p_condition','yacc_parser.py',160),
  ('condition -> MAYOR_IGUAL_QUE','condition',1,'p_condition','yacc_parser.py',161),
  ('condition -> MENOR_IGUAL_QUE','condition',1,'p_condition','yacc_parser.py',162),
  ('while_statement -> WHILE expression LPARENTESIS list_statement RPARENTESIS PUNTO_COMA','while_statement',6,'p_while_statement','yacc_parser.py',167),
  ('while_statement -> WHILE condition_statement LPARENTESIS list_statement RPARENTESIS PUNTO_COMA','while_statement',6,'p_while_statement','yacc_parser.py',168),
  ('while_statement -> WHILE istrue LPARENTESIS list_statement RPARENTESIS PUNTO_COMA','while_statement',6,'p_while_statement','yacc_parser.py',169),
  ('bool -> TRUE','bool',1,'p_bool','yacc_parser.py',174),
  ('bool -> FALSE','bool',1,'p_bool','yacc_parser.py',175),
  ('case_statement -> CASE VARIABLE case_when_statements else_statement PUNTO_COMA','case_statement',5,'p_case_statement','yacc_parser.py',180),
  ('case_when_statements -> case_when_statement case_when_statements','case_when_statements',2,'p_case_when_statements','yacc_parser.py',186),
  ('case_when_statements -> empty','case_when_statements',1,'p_case_when_statements','yacc_parser.py',187),
  ('case_when_statement -> WHEN value THEN list_statement','case_when_statement',4,'p_case_when_statement','yacc_parser.py',192),
  ('else_statement -> ELSE code_block','else_statement',2,'p_else_statement','yacc_parser.py',198),
  ('else_statement -> empty','else_statement',1,'p_else_statement','yacc_parser.py',199),
  ('printvalues_statement -> PRINTVALUES LPARENTESIS content_print RPARENTESIS PUNTO_COMA','printvalues_statement',5,'p_printvalues_statement','yacc_parser.py',205),
  ('content_print -> STRING','content_print',1,'p_content_print','yacc_parser.py',211),
  ('content_print -> VARIABLE','content_print',1,'p_content_print','yacc_parser.py',212),
  ('content_print -> value','content_print',1,'p_content_print','yacc_parser.py',213),
  ('signal_statement -> SIGNAL LPARENTESIS VARIABLE COMA value RPARENTESIS PUNTO_COMA','signal_statement',7,'p_signal_statement','yacc_parser.py',219),
  ('viewsignal_statement -> VIEWSIGNAL LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA','viewsignal_statement',5,'p_viewsignal_statement','yacc_parser.py',225),
  ('expression -> value','expression',1,'p_expression','yacc_parser.py',231),
  ('expression -> VARIABLE','expression',1,'p_expression','yacc_parser.py',232),
  ('expression -> LPARENTESIS expression RPARENTESIS','expression',3,'p_expression','yacc_parser.py',233),
  ('expression -> expression + expression','expression',3,'p_expression','yacc_parser.py',234),
  ('expression -> expression - expression','expression',3,'p_expression','yacc_parser.py',235),
  ('expression -> expression * expression','expression',3,'p_expression','yacc_parser.py',236),
  ('expression -> expression / expression','expression',3,'p_expression','yacc_parser.py',237),
  ('istrue -> ISTRUE LPARENTESIS VARIABLE RPARENTESIS','istrue',4,'p_istrue','yacc_parser.py',243),
  ('value -> NUMERO','value',1,'p_value','yacc_parser.py',249),
  ('value -> bool','value',1,'p_value','yacc_parser.py',250),
  ('value -> return_num_statement','value',1,'p_value','yacc_parser.py',251),
  ('value -> return_bool_statement','value',1,'p_value','yacc_parser.py',252),
  ('empty -> <empty>','empty',0,'p_empty','yacc_parser.py',258),
]
