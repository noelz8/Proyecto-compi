
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "ADD ALTER ALTERB ARROBA BOOL BREAK CALL CASE COMA COMENTARIO COMILLAS COND_NUMERICA DATATYPE DER_EXCLAMACION DER_INTERROGACION DISTINTO_QUE DIV DIVISION ELSE ENYE FALSE GUION ID IGUAL IGUALDAD ISTRUE IZQ_EXCLAMACION IZQ_INTERROGACION LETRA LPARENTESIS MASTER MAYOR_IGUAL_QUE MAYOR_QUE MAYUSCULA MENOR_IGUAL_QUE MENOR_QUE MUL MULTIPLICACION NEW NUMERO PRINTVALUES PROC PUNTO PUNTO_COMA REPEAT RESTA RPARENTESIS SIGNAL STRING SUB SUMA THEN TILDE TRUE UNDERSCORE UNTIL VALUES VARIABLE VIEWSIGNAL WHEN WHILE\n    program : lista_comentarios code_block\n    \n    lista_comentarios : comentario lista_comentarios\n                 | empty\n    \n    comentario : COMENTARIO\n    \n    code_block : proc MASTER LPARENTESIS comentario list_statement RPARENTESIS PUNTO_COMA group_proc\n            | group_proc proc MASTER LPARENTESIS comentario list_statement RPARENTESIS PUNTO_COMA group_proc\n    \n    proc : PROC\n    \n    group_proc : PROC VARIABLE LPARENTESIS COMENTARIO statement RPARENTESIS PUNTO_COMA group_proc\n               | empty\n    \n    operador : ADD\n            | SUB\n            | MUL\n            | DIV\n    \n    list_statement : statement list_statement\n                  | empty\n    \n    statement : new_variable_statement\n              | values_statement\n              | alter_statement\n              | alterb_statement\n              | condition_statement\n              | istrue_statement\n              | repeat_statement\n              | until_statement\n              | while_statement\n              | case_statement\n              | printvalues_statement\n              | signal_statement\n              | viewsignal_statement\n    \n    new_variable_statement : NEW VARIABLE COMA LPARENTESIS DATATYPE COMA value RPARENTESIS PUNTO_COMA\n    \n    values_statement : VALUES LPARENTESIS VARIABLE COMA value RPARENTESIS PUNTO_COMA\n    \n    alter_statement : ALTER LPARENTESIS VARIABLE COMA operador COMA value RPARENTESIS PUNTO_COMA\n    \n    alterb_statement : ALTERB LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA\n    \n    condition_statement : expression COND_NUMERICA expression\n    \n    istrue_statement : ISTRUE LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA\n    \n    repeat_statement : REPEAT LPARENTESIS list_statement break_statement RPARENTESIS PUNTO_COMA\n    \n    break_statement : BREAK PUNTO_COMA\n    \n    until_statement : UNTIL list_statement condition PUNTO_COMA\n    \n    condition : expression COND_NUMERICA expression\n    \n    while_statement : WHILE expression LPARENTESIS list_statement RPARENTESIS PUNTO_COMA\n                    | WHILE istrue LPARENTESIS list_statement RPARENTESIS PUNTO_COMA\n    \n    bool : TRUE\n         | FALSE\n    \n    case_statement : CASE VARIABLE case_when_statements else_statement PUNTO_COMA\n    \n    case_when_statements : case_when_statement case_when_statements\n                         | empty\n    \n    case_when_statement : WHEN value THEN list_statement\n    \n    else_statement : ELSE code_block\n                   | empty\n    \n    printvalues_statement : PRINTVALUES LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA\n    \n    signal_statement : SIGNAL LPARENTESIS VARIABLE COMA value RPARENTESIS PUNTO_COMA\n    \n    viewsignal_statement : VIEWSIGNAL LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA\n    \n    expression : value\n               | VARIABLE\n               | LPARENTESIS expression RPARENTESIS\n               | expression '+' expression\n               | expression '-' expression\n               | expression '*' expression\n               | expression '/' expression\n    \n    istrue : ISTRUE LPARENTESIS VARIABLE RPARENTESIS\n    \n    value : NUMERO\n          | bool\n    \n    empty :\n    \n    values : VALUES\n    "
    
_lr_action_items = {'COMENTARIO':([0,3,5,16,18,20,],[5,5,-4,5,21,5,]),'PROC':([0,2,3,4,5,8,10,11,85,110,126,133,134,],[-62,9,-62,-3,-4,14,-9,-2,112,112,9,112,-8,]),'$end':([1,6,10,85,110,111,133,134,156,],[0,-1,-9,-62,-62,-5,-62,-8,-6,]),'NEW':([5,19,21,24,26,27,28,29,30,31,32,33,34,35,36,37,38,40,41,48,54,55,56,57,58,73,84,90,91,92,93,94,99,100,120,142,143,150,152,153,155,160,161,162,166,168,171,172,],[-4,39,39,39,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-53,-52,39,-60,-61,-41,-42,39,39,-54,-33,-55,-56,-57,-58,39,39,-37,-32,-34,-43,39,-49,-51,-35,-39,-40,-30,-50,-29,-31,]),'VALUES':([5,19,21,24,26,27,28,29,30,31,32,33,34,35,36,37,38,40,41,48,54,55,56,57,58,73,84,90,91,92,93,94,99,100,120,142,143,150,152,153,155,160,161,162,166,168,171,172,],[-4,42,42,42,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-53,-52,42,-60,-61,-41,-42,42,42,-54,-33,-55,-56,-57,-58,42,42,-37,-32,-34,-43,42,-49,-51,-35,-39,-40,-30,-50,-29,-31,]),'ALTER':([5,19,21,24,26,27,28,29,30,31,32,33,34,35,36,37,38,40,41,48,54,55,56,57,58,73,84,90,91,92,93,94,99,100,120,142,143,150,152,153,155,160,161,162,166,168,171,172,],[-4,43,43,43,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-53,-52,43,-60,-61,-41,-42,43,43,-54,-33,-55,-56,-57,-58,43,43,-37,-32,-34,-43,43,-49,-51,-35,-39,-40,-30,-50,-29,-31,]),'ALTERB':([5,19,21,24,26,27,28,29,30,31,32,33,34,35,36,37,38,40,41,48,54,55,56,57,58,73,84,90,91,92,93,94,99,100,120,142,143,150,152,153,155,160,161,162,166,168,171,172,],[-4,44,44,44,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-53,-52,44,-60,-61,-41,-42,44,44,-54,-33,-55,-56,-57,-58,44,44,-37,-32,-34,-43,44,-49,-51,-35,-39,-40,-30,-50,-29,-31,]),'ISTRUE':([5,19,21,24,26,27,28,29,30,31,32,33,34,35,36,37,38,40,41,48,49,54,55,56,57,58,73,84,90,91,92,93,94,99,100,120,142,143,150,152,153,155,160,161,162,166,168,171,172,],[-4,46,46,46,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-53,-52,46,77,-60,-61,-41,-42,46,46,-54,-33,-55,-56,-57,-58,46,46,-37,-32,-34,-43,46,-49,-51,-35,-39,-40,-30,-50,-29,-31,]),'REPEAT':([5,19,21,24,26,27,28,29,30,31,32,33,34,35,36,37,38,40,41,48,54,55,56,57,58,73,84,90,91,92,93,94,99,100,120,142,143,150,152,153,155,160,161,162,166,168,171,172,],[-4,47,47,47,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-53,-52,47,-60,-61,-41,-42,47,47,-54,-33,-55,-56,-57,-58,47,47,-37,-32,-34,-43,47,-49,-51,-35,-39,-40,-30,-50,-29,-31,]),'UNTIL':([5,19,21,24,26,27,28,29,30,31,32,33,34,35,36,37,38,40,41,48,54,55,56,57,58,73,84,90,91,92,93,94,99,100,120,142,143,150,152,153,155,160,161,162,166,168,171,172,],[-4,48,48,48,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-53,-52,48,-60,-61,-41,-42,48,48,-54,-33,-55,-56,-57,-58,48,48,-37,-32,-34,-43,48,-49,-51,-35,-39,-40,-30,-50,-29,-31,]),'WHILE':([5,19,21,24,26,27,28,29,30,31,32,33,34,35,36,37,38,40,41,48,54,55,56,57,58,73,84,90,91,92,93,94,99,100,120,142,143,150,152,153,155,160,161,162,166,168,171,172,],[-4,49,49,49,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-53,-52,49,-60,-61,-41,-42,49,49,-54,-33,-55,-56,-57,-58,49,49,-37,-32,-34,-43,49,-49,-51,-35,-39,-40,-30,-50,-29,-31,]),'CASE':([5,19,21,24,26,27,28,29,30,31,32,33,34,35,36,37,38,40,41,48,54,55,56,57,58,73,84,90,91,92,93,94,99,100,120,142,143,150,152,153,155,160,161,162,166,168,171,172,],[-4,50,50,50,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-53,-52,50,-60,-61,-41,-42,50,50,-54,-33,-55,-56,-57,-58,50,50,-37,-32,-34,-43,50,-49,-51,-35,-39,-40,-30,-50,-29,-31,]),'PRINTVALUES':([5,19,21,24,26,27,28,29,30,31,32,33,34,35,36,37,38,40,41,48,54,55,56,57,58,73,84,90,91,92,93,94,99,100,120,142,143,150,152,153,155,160,161,162,166,168,171,172,],[-4,51,51,51,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-53,-52,51,-60,-61,-41,-42,51,51,-54,-33,-55,-56,-57,-58,51,51,-37,-32,-34,-43,51,-49,-51,-35,-39,-40,-30,-50,-29,-31,]),'SIGNAL':([5,19,21,24,26,27,28,29,30,31,32,33,34,35,36,37,38,40,41,48,54,55,56,57,58,73,84,90,91,92,93,94,99,100,120,142,143,150,152,153,155,160,161,162,166,168,171,172,],[-4,52,52,52,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-53,-52,52,-60,-61,-41,-42,52,52,-54,-33,-55,-56,-57,-58,52,52,-37,-32,-34,-43,52,-49,-51,-35,-39,-40,-30,-50,-29,-31,]),'VIEWSIGNAL':([5,19,21,24,26,27,28,29,30,31,32,33,34,35,36,37,38,40,41,48,54,55,56,57,58,73,84,90,91,92,93,94,99,100,120,142,143,150,152,153,155,160,161,162,166,168,171,172,],[-4,53,53,53,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-53,-52,53,-60,-61,-41,-42,53,53,-54,-33,-55,-56,-57,-58,53,53,-37,-32,-34,-43,53,-49,-51,-35,-39,-40,-30,-50,-29,-31,]),'VARIABLE':([5,9,19,21,22,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,48,49,50,54,55,56,57,58,62,64,65,66,67,68,69,70,71,72,73,74,79,80,81,84,90,91,92,93,94,99,100,101,112,120,121,142,143,150,152,153,155,160,161,162,166,168,171,172,],[-4,15,40,40,40,40,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,63,-53,-52,40,40,78,-60,-61,-41,-42,40,-14,87,88,89,40,40,40,40,40,95,40,40,106,107,108,-54,-33,-55,-56,-57,-58,40,40,124,15,-37,40,-32,-34,-43,40,-49,-51,-35,-39,-40,-30,-50,-29,-31,]),'LPARENTESIS':([5,12,15,17,19,21,22,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,40,41,42,43,44,46,47,48,49,51,52,53,54,55,56,57,58,62,67,68,69,70,71,73,74,75,76,77,84,86,90,91,92,93,94,99,100,120,121,142,143,149,150,152,153,155,160,161,162,166,168,171,172,],[-4,16,18,20,22,22,22,22,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-53,-52,64,65,66,72,73,22,22,79,80,81,-60,-61,-41,-42,22,-14,22,22,22,22,22,22,22,99,100,101,-54,113,-33,-55,-56,-57,-58,22,22,-37,22,-32,-34,-59,-43,22,-49,-51,-35,-39,-40,-30,-50,-29,-31,]),'NUMERO':([5,19,21,22,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,40,41,48,49,54,55,56,57,58,62,67,68,69,70,71,73,74,84,90,91,92,93,94,99,100,105,114,120,121,131,142,143,150,152,153,155,157,159,160,161,162,166,168,171,172,],[-4,54,54,54,54,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-53,-52,54,54,-60,-61,-41,-42,54,-14,54,54,54,54,54,54,54,-54,-33,-55,-56,-57,-58,54,54,54,54,-37,54,54,-32,-34,-43,54,-49,-51,54,54,-35,-39,-40,-30,-50,-29,-31,]),'TRUE':([5,19,21,22,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,40,41,48,49,54,55,56,57,58,62,67,68,69,70,71,73,74,84,90,91,92,93,94,99,100,105,114,120,121,131,142,143,150,152,153,155,157,159,160,161,162,166,168,171,172,],[-4,56,56,56,56,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-53,-52,56,56,-60,-61,-41,-42,56,-14,56,56,56,56,56,56,56,-54,-33,-55,-56,-57,-58,56,56,56,56,-37,56,56,-32,-34,-43,56,-49,-51,56,56,-35,-39,-40,-30,-50,-29,-31,]),'FALSE':([5,19,21,22,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,40,41,48,49,54,55,56,57,58,62,67,68,69,70,71,73,74,84,90,91,92,93,94,99,100,105,114,120,121,131,142,143,150,152,153,155,157,159,160,161,162,166,168,171,172,],[-4,57,57,57,57,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-53,-52,57,57,-60,-61,-41,-42,57,-14,57,57,57,57,57,57,57,-54,-33,-55,-56,-57,-58,57,57,57,57,-37,57,57,-32,-34,-43,57,-49,-51,57,57,-35,-39,-40,-30,-50,-29,-31,]),'RPARENTESIS':([5,19,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,40,41,54,55,56,57,58,59,60,62,82,84,89,90,91,92,93,94,95,99,100,106,108,118,120,122,123,124,136,142,143,145,150,153,154,155,160,161,162,165,166,167,168,171,172,],[-4,-62,61,-62,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-53,-52,-60,-61,-41,-42,-62,83,84,-14,109,-54,116,-33,-55,-56,-57,-58,117,-62,-62,130,132,144,-37,147,148,149,158,-32,-34,-36,-43,-49,164,-51,-35,-39,-40,169,-30,170,-50,-29,-31,]),'MASTER':([7,9,13,14,],[12,-7,17,-7,]),'PUNTO_COMA':([10,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,40,41,54,55,56,57,61,62,78,83,84,85,90,91,92,93,94,97,102,103,104,109,110,111,116,117,119,120,125,127,128,130,132,133,134,142,143,144,146,147,148,150,151,152,153,155,156,158,160,161,162,163,164,166,168,169,170,171,172,],[-9,-62,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-53,-52,-60,-61,-41,-42,85,-14,-62,110,-54,-62,-33,-55,-56,-57,-58,120,-62,-62,-45,133,-62,-5,142,143,145,-37,150,-48,-44,153,155,-62,-8,-32,-34,160,-38,161,162,-43,-47,-62,-49,-51,-6,166,-35,-39,-40,-46,168,-30,-50,171,172,-29,-31,]),'BREAK':([24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,40,41,54,55,56,57,62,73,84,90,91,92,93,94,96,120,142,143,150,153,155,160,161,162,166,168,171,172,],[-62,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-53,-52,-60,-61,-41,-42,-14,-62,-54,-33,-55,-56,-57,-58,119,-37,-32,-34,-43,-49,-51,-35,-39,-40,-30,-50,-29,-31,]),'WHEN':([24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,40,41,54,55,56,57,62,78,84,90,91,92,93,94,103,120,142,143,150,152,153,155,160,161,162,163,166,168,171,172,],[-62,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-53,-52,-60,-61,-41,-42,-14,105,-54,-33,-55,-56,-57,-58,105,-37,-32,-34,-43,-62,-49,-51,-35,-39,-40,-46,-30,-50,-29,-31,]),'ELSE':([24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,40,41,54,55,56,57,62,78,84,90,91,92,93,94,102,103,104,120,128,142,143,150,152,153,155,160,161,162,163,166,168,171,172,],[-62,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-53,-52,-60,-61,-41,-42,-14,-62,-54,-33,-55,-56,-57,-58,126,-62,-45,-37,-44,-32,-34,-43,-62,-49,-51,-35,-39,-40,-46,-30,-50,-29,-31,]),'COND_NUMERICA':([40,41,45,54,55,56,57,84,91,92,93,94,98,],[-53,-52,67,-60,-61,-41,-42,-54,-55,-56,-57,-58,121,]),'+':([40,41,45,54,55,56,57,60,75,84,90,91,92,93,94,98,146,],[-53,-52,68,-60,-61,-41,-42,68,68,-54,68,68,68,68,68,68,68,]),'-':([40,41,45,54,55,56,57,60,75,84,90,91,92,93,94,98,146,],[-53,-52,69,-60,-61,-41,-42,69,69,-54,69,69,69,69,69,69,69,]),'*':([40,41,45,54,55,56,57,60,75,84,90,91,92,93,94,98,146,],[-53,-52,70,-60,-61,-41,-42,70,70,-54,70,70,70,70,70,70,70,]),'/':([40,41,45,54,55,56,57,60,75,84,90,91,92,93,94,98,146,],[-53,-52,71,-60,-61,-41,-42,71,71,-54,71,71,71,71,71,71,71,]),'THEN':([54,55,56,57,129,],[-60,-61,-41,-42,152,]),'COMA':([63,87,88,107,135,137,138,139,140,141,],[86,114,115,131,157,159,-10,-11,-12,-13,]),'DATATYPE':([113,],[135,]),'ADD':([115,],[138,]),'SUB':([115,],[139,]),'MUL':([115,],[140,]),'DIV':([115,],[141,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'lista_comentarios':([0,3,],[2,11,]),'comentario':([0,3,16,20,],[3,3,19,58,]),'empty':([0,2,3,19,24,48,58,73,78,85,99,100,102,103,110,126,133,152,],[4,10,4,25,25,25,25,25,104,10,25,25,127,104,10,10,10,25,]),'code_block':([2,126,],[6,151,]),'proc':([2,8,126,],[7,13,7,]),'group_proc':([2,85,110,126,133,],[8,111,134,8,156,]),'list_statement':([19,24,48,58,73,99,100,152,],[23,62,74,82,96,122,123,163,]),'statement':([19,21,24,48,58,73,99,100,152,],[24,59,24,24,24,24,24,24,24,]),'new_variable_statement':([19,21,24,48,58,73,99,100,152,],[26,26,26,26,26,26,26,26,26,]),'values_statement':([19,21,24,48,58,73,99,100,152,],[27,27,27,27,27,27,27,27,27,]),'alter_statement':([19,21,24,48,58,73,99,100,152,],[28,28,28,28,28,28,28,28,28,]),'alterb_statement':([19,21,24,48,58,73,99,100,152,],[29,29,29,29,29,29,29,29,29,]),'condition_statement':([19,21,24,48,58,73,99,100,152,],[30,30,30,30,30,30,30,30,30,]),'istrue_statement':([19,21,24,48,58,73,99,100,152,],[31,31,31,31,31,31,31,31,31,]),'repeat_statement':([19,21,24,48,58,73,99,100,152,],[32,32,32,32,32,32,32,32,32,]),'until_statement':([19,21,24,48,58,73,99,100,152,],[33,33,33,33,33,33,33,33,33,]),'while_statement':([19,21,24,48,58,73,99,100,152,],[34,34,34,34,34,34,34,34,34,]),'case_statement':([19,21,24,48,58,73,99,100,152,],[35,35,35,35,35,35,35,35,35,]),'printvalues_statement':([19,21,24,48,58,73,99,100,152,],[36,36,36,36,36,36,36,36,36,]),'signal_statement':([19,21,24,48,58,73,99,100,152,],[37,37,37,37,37,37,37,37,37,]),'viewsignal_statement':([19,21,24,48,58,73,99,100,152,],[38,38,38,38,38,38,38,38,38,]),'value':([19,21,22,24,48,49,58,67,68,69,70,71,73,74,99,100,105,114,121,131,152,157,159,],[41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,129,136,41,154,41,165,167,]),'expression':([19,21,22,24,48,49,58,67,68,69,70,71,73,74,99,100,121,152,],[45,45,60,45,45,75,45,90,91,92,93,94,45,98,45,45,146,45,]),'bool':([19,21,22,24,48,49,58,67,68,69,70,71,73,74,99,100,105,114,121,131,152,157,159,],[55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,]),'istrue':([49,],[76,]),'condition':([74,],[97,]),'case_when_statements':([78,103,],[102,128,]),'case_when_statement':([78,103,],[103,103,]),'break_statement':([96,],[118,]),'else_statement':([102,],[125,]),'operador':([115,],[137,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> lista_comentarios code_block','program',2,'p_program','yacc_parser.py',7),
  ('lista_comentarios -> comentario lista_comentarios','lista_comentarios',2,'p_lista_comentarios','yacc_parser.py',13),
  ('lista_comentarios -> empty','lista_comentarios',1,'p_lista_comentarios','yacc_parser.py',14),
  ('comentario -> COMENTARIO','comentario',1,'p_comentario','yacc_parser.py',20),
  ('code_block -> proc MASTER LPARENTESIS comentario list_statement RPARENTESIS PUNTO_COMA group_proc','code_block',8,'p_code_block','yacc_parser.py',26),
  ('code_block -> group_proc proc MASTER LPARENTESIS comentario list_statement RPARENTESIS PUNTO_COMA group_proc','code_block',9,'p_code_block','yacc_parser.py',27),
  ('proc -> PROC','proc',1,'p_proc','yacc_parser.py',33),
  ('group_proc -> PROC VARIABLE LPARENTESIS COMENTARIO statement RPARENTESIS PUNTO_COMA group_proc','group_proc',8,'p_group_proc','yacc_parser.py',45),
  ('group_proc -> empty','group_proc',1,'p_group_proc','yacc_parser.py',46),
  ('operador -> ADD','operador',1,'p_operador','yacc_parser.py',52),
  ('operador -> SUB','operador',1,'p_operador','yacc_parser.py',53),
  ('operador -> MUL','operador',1,'p_operador','yacc_parser.py',54),
  ('operador -> DIV','operador',1,'p_operador','yacc_parser.py',55),
  ('list_statement -> statement list_statement','list_statement',2,'p_list_statement','yacc_parser.py',59),
  ('list_statement -> empty','list_statement',1,'p_list_statement','yacc_parser.py',60),
  ('statement -> new_variable_statement','statement',1,'p_statement','yacc_parser.py',65),
  ('statement -> values_statement','statement',1,'p_statement','yacc_parser.py',66),
  ('statement -> alter_statement','statement',1,'p_statement','yacc_parser.py',67),
  ('statement -> alterb_statement','statement',1,'p_statement','yacc_parser.py',68),
  ('statement -> condition_statement','statement',1,'p_statement','yacc_parser.py',69),
  ('statement -> istrue_statement','statement',1,'p_statement','yacc_parser.py',70),
  ('statement -> repeat_statement','statement',1,'p_statement','yacc_parser.py',71),
  ('statement -> until_statement','statement',1,'p_statement','yacc_parser.py',72),
  ('statement -> while_statement','statement',1,'p_statement','yacc_parser.py',73),
  ('statement -> case_statement','statement',1,'p_statement','yacc_parser.py',74),
  ('statement -> printvalues_statement','statement',1,'p_statement','yacc_parser.py',75),
  ('statement -> signal_statement','statement',1,'p_statement','yacc_parser.py',76),
  ('statement -> viewsignal_statement','statement',1,'p_statement','yacc_parser.py',77),
  ('new_variable_statement -> NEW VARIABLE COMA LPARENTESIS DATATYPE COMA value RPARENTESIS PUNTO_COMA','new_variable_statement',9,'p_new_variable_statement','yacc_parser.py',83),
  ('values_statement -> VALUES LPARENTESIS VARIABLE COMA value RPARENTESIS PUNTO_COMA','values_statement',7,'p_values_statement','yacc_parser.py',89),
  ('alter_statement -> ALTER LPARENTESIS VARIABLE COMA operador COMA value RPARENTESIS PUNTO_COMA','alter_statement',9,'p_alter_statement','yacc_parser.py',95),
  ('alterb_statement -> ALTERB LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA','alterb_statement',5,'p_alterb_statement','yacc_parser.py',101),
  ('condition_statement -> expression COND_NUMERICA expression','condition_statement',3,'p_condition_statement','yacc_parser.py',107),
  ('istrue_statement -> ISTRUE LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA','istrue_statement',5,'p_istrue_statement','yacc_parser.py',113),
  ('repeat_statement -> REPEAT LPARENTESIS list_statement break_statement RPARENTESIS PUNTO_COMA','repeat_statement',6,'p_repeat_statement','yacc_parser.py',119),
  ('break_statement -> BREAK PUNTO_COMA','break_statement',2,'p_break_statement','yacc_parser.py',125),
  ('until_statement -> UNTIL list_statement condition PUNTO_COMA','until_statement',4,'p_until_statement','yacc_parser.py',131),
  ('condition -> expression COND_NUMERICA expression','condition',3,'p_condition','yacc_parser.py',136),
  ('while_statement -> WHILE expression LPARENTESIS list_statement RPARENTESIS PUNTO_COMA','while_statement',6,'p_while_statement','yacc_parser.py',141),
  ('while_statement -> WHILE istrue LPARENTESIS list_statement RPARENTESIS PUNTO_COMA','while_statement',6,'p_while_statement','yacc_parser.py',142),
  ('bool -> TRUE','bool',1,'p_bool','yacc_parser.py',147),
  ('bool -> FALSE','bool',1,'p_bool','yacc_parser.py',148),
  ('case_statement -> CASE VARIABLE case_when_statements else_statement PUNTO_COMA','case_statement',5,'p_case_statement','yacc_parser.py',153),
  ('case_when_statements -> case_when_statement case_when_statements','case_when_statements',2,'p_case_when_statements','yacc_parser.py',159),
  ('case_when_statements -> empty','case_when_statements',1,'p_case_when_statements','yacc_parser.py',160),
  ('case_when_statement -> WHEN value THEN list_statement','case_when_statement',4,'p_case_when_statement','yacc_parser.py',165),
  ('else_statement -> ELSE code_block','else_statement',2,'p_else_statement','yacc_parser.py',171),
  ('else_statement -> empty','else_statement',1,'p_else_statement','yacc_parser.py',172),
  ('printvalues_statement -> PRINTVALUES LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA','printvalues_statement',5,'p_printvalues_statement','yacc_parser.py',178),
  ('signal_statement -> SIGNAL LPARENTESIS VARIABLE COMA value RPARENTESIS PUNTO_COMA','signal_statement',7,'p_signal_statement','yacc_parser.py',184),
  ('viewsignal_statement -> VIEWSIGNAL LPARENTESIS VARIABLE RPARENTESIS PUNTO_COMA','viewsignal_statement',5,'p_viewsignal_statement','yacc_parser.py',190),
  ('expression -> value','expression',1,'p_expression','yacc_parser.py',196),
  ('expression -> VARIABLE','expression',1,'p_expression','yacc_parser.py',197),
  ('expression -> LPARENTESIS expression RPARENTESIS','expression',3,'p_expression','yacc_parser.py',198),
  ('expression -> expression + expression','expression',3,'p_expression','yacc_parser.py',199),
  ('expression -> expression - expression','expression',3,'p_expression','yacc_parser.py',200),
  ('expression -> expression * expression','expression',3,'p_expression','yacc_parser.py',201),
  ('expression -> expression / expression','expression',3,'p_expression','yacc_parser.py',202),
  ('istrue -> ISTRUE LPARENTESIS VARIABLE RPARENTESIS','istrue',4,'p_istrue','yacc_parser.py',208),
  ('value -> NUMERO','value',1,'p_value','yacc_parser.py',214),
  ('value -> bool','value',1,'p_value','yacc_parser.py',215),
  ('empty -> <empty>','empty',0,'p_empty','yacc_parser.py',221),
  ('values -> VALUES','values',1,'p_values','yacc_parser.py',231),
]
